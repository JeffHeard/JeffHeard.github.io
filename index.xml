<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jefferson Heard</title>
    <link>https://jeffersonheard.github.io/index.xml</link>
    <description>Recent content on Jefferson Heard</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Feb 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://jeffersonheard.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Making a spreadsheet with addresses into data on a map (Part 1, Geocoding)</title>
      <link>https://jeffersonheard.github.io/2017/02/making-a-spreadsheet-with-addresses-into-data-on-a-map-part-1-geocoding/</link>
      <pubDate>Sat, 11 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2017/02/making-a-spreadsheet-with-addresses-into-data-on-a-map-part-1-geocoding/</guid>
      <description>

&lt;h2 id=&#34;goal-of-this-post&#34;&gt;Goal of this post&lt;/h2&gt;

&lt;p&gt;This is the first in a series of doing something interesting with a larger geospatial dataset. At the beginning of this post, you will retrieve a CSV dataset containing addresses of varying quality. By the end of this post, you will have &lt;a href=&#34;https://github.com/jeffersonheard/DataSciBlogGeoJsonSample/blob/master/SampleFeatures.geojson&#34;&gt;a map on GitHub&lt;/a&gt; that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://jeffersonheard.github.io/images/geocoding-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This post is &lt;strong&gt;not&lt;/strong&gt; about making a good map or a good visualization. The point of the map in this post is
to do a visual sanity check on your work, while at the same time building towards an eventual goal (in a post yet to come) of creating an interactive visual map in [Leaflet]() with the ability to visually discern and interact with data on that map. But first thing&amp;rsquo;s first.  Let&amp;rsquo;s get some data and geocode it.&lt;/p&gt;

&lt;h2 id=&#34;geocoding&#34;&gt;Geocoding&lt;/h2&gt;

&lt;p&gt;Geocoding is a basic data cleaning task. In general terms, the procedure is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Take a file without spatial data, but with address info in some form.&lt;/li&gt;
&lt;li&gt;Use a service to append that spatial information to the dataset.&lt;/li&gt;
&lt;li&gt;Save the dataset back in a format that is spatially aware.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is one of those things that people ask me to do fairly often. They have a file with addresses, zipcodes, country names, cities, counties, whatever. And they want it and the data inside it put on a map. The task I&amp;rsquo;ll be covering today won&amp;rsquo;t make a &lt;em&gt;good&lt;/em&gt; map, but it will allow you to make one that will let you check that your data is correctly coded &lt;em&gt;and&lt;/em&gt; provide the basis for creating a map that reflects the data and discovery intention well later on.&lt;/p&gt;

&lt;p&gt;First, let&amp;rsquo;s map out the tools I&amp;rsquo;ll be using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python - My favorite language for doing most common data science tasks.  If you&amp;rsquo;re just starting, use &lt;a href=&#34;https://www.continuum.io/downloads&#34;&gt;Anaconda&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;pandas - General purpose Python library for working with tabular data. Included with Anaconda&lt;/li&gt;
&lt;li&gt;geopy - Take addresses and geocode using any of a number of web-services.&lt;/li&gt;
&lt;li&gt;usaddress - Address parsing for US based addresses&lt;/li&gt;
&lt;li&gt;GeoJSON - For storing data in a flexible, natively spatial way that works with many other tools.&lt;/li&gt;
&lt;li&gt;GitHub - Pushing a GeoJSON file to GitHub will actually allow you to &lt;a href=&#34;https://help.github.com/articles/mapping-geojson-files-on-github/&#34;&gt;visualize a map directly&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you were going to geocode a &lt;em&gt;lot&lt;/em&gt; of addresses, you&amp;rsquo;ll want to setup your own geocoder or else
find a service with little to no rate-limiting and a chunk of cash. Here&amp;rsquo;s what I use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nominatim.openstreetmap.org/&#34;&gt;Nominatim&lt;/a&gt; - OpenStreetMaps&amp;rsquo; geocoding service.&lt;/li&gt;
&lt;li&gt;OpenStreetMap data - To do the full dataset, we will need to roll our own geocoder using Nominatim.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First let&amp;rsquo;s grab a dataset. I found this one: &lt;a href=&#34;http://chriswhong.com/open-data/liberating-data-from-nyc-property-tax-bills/&#34;&gt;Liberating Data from NYC Property Tax Bills&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The blog post about the dataset goes into good detail about what it is. For our purposes, it is a good dataset because it is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Large (to give us room in later posts to justify using our own geocoder).&lt;/li&gt;
&lt;li&gt;Publicly available.&lt;/li&gt;
&lt;li&gt;Does not already contain the geospatial information we want.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Go ahead and download the dataset. Assuming you&amp;rsquo;re using Anaconda, the first thing you&amp;rsquo;ll want to do is install Shapely and geopy. Shapely can be installed with &lt;code&gt;conda&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ conda install shapely
$ pip install geopy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure that you use Anaconda&amp;rsquo;s pip if you have more than one Python environment on your machine.&lt;/p&gt;

&lt;p&gt;Now that we have the dataset, let&amp;rsquo;s load it in Pandas and take a look.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import numpy as np
from geopy.geocoders import Nominatim
import usaddress
import re
import json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First thing we need to do is load the dataset. Pandas conveniently understands URLs, so we can load them directly from the website.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# If you&#39;re running this on your own on a fast connection, this will work.
# I recommend writing out the dataframe later.
# tax_bills_june15_bbls = pd.read_csv(&amp;quot;http://taxbills.nyc/tax_bills_june15_bbls.csv&amp;quot;)
# tax_bills_june15_exab = pd.read_csv(&amp;quot;http://taxbills.nyc/tax_bills_june15_exab.csv&amp;quot;)

# loading these over HTTP turns out to be an arduous task
tax_bills_june15_bbls = pd.read_csv(&amp;quot;/Users/jeff/Downloads/tax_bills_june15_bbls.csv&amp;quot;, index_col=&#39;bbl&#39;)
tax_bills_june15_exab = pd.read_csv(&amp;quot;/Users/jeff/Downloads/tax_bills_june15_exab.csv&amp;quot;, index_col=&#39;bbl&#39;)

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;tax_bills_june15_bbls
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;output&#34;&gt;Output&lt;/h5&gt;

&lt;div style=&#34;max-width: 100%; max-height: 300px; overflow: auto; font-family: &#39;Inconsolata&#39;, monospace; font-size: 10pt; line-height: 1.0em&#34;&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ownername&lt;/th&gt;
      &lt;th&gt;address&lt;/th&gt;
      &lt;th&gt;taxclass&lt;/th&gt;
      &lt;th&gt;taxrate&lt;/th&gt;
      &lt;th&gt;emv&lt;/th&gt;
      &lt;th&gt;tbea&lt;/th&gt;
      &lt;th&gt;bav&lt;/th&gt;
      &lt;th&gt;tba&lt;/th&gt;
      &lt;th&gt;propertytax&lt;/th&gt;
      &lt;th&gt;condonumber&lt;/th&gt;
      &lt;th&gt;condo&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;bbl&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;1000010010&lt;/th&gt;
      &lt;td&gt;GOVERNORS ISLAND CORPORATION&lt;/td&gt;
      &lt;td&gt;GOVERNORS ISLAND CORPORATION\nC/O TRUST FOR. G...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;337672000.0&lt;/td&gt;
      &lt;td&gt;15749050.0&lt;/td&gt;
      &lt;td&gt;147407802.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000010101&lt;/th&gt;
      &lt;td&gt;U. S. GOVT LAND &amp;amp; BLDGS&lt;/td&gt;
      &lt;td&gt;BEDLOES ISLAND\n1 LIBERTY ISLAND\nELLIS ISLAND,&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;25607000.0&lt;/td&gt;
      &lt;td&gt;1106496.0&lt;/td&gt;
      &lt;td&gt;10356570.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000010201&lt;/th&gt;
      &lt;td&gt;U. S. GOVT LAND &amp;amp; BLDGS&lt;/td&gt;
      &lt;td&gt;ELLIS ISLAND\n1 LIBERTY ISLAND\nELLIS ISLAND,&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;233982000.0&lt;/td&gt;
      &lt;td&gt;10366655.0&lt;/td&gt;
      &lt;td&gt;97029720.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000020001&lt;/th&gt;
      &lt;td&gt;NYC DSBS&lt;/td&gt;
      &lt;td&gt;NYC DSBS\n110 WILLIAM ST. FL. 7\nNEW YORK , NY...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;69458000.0&lt;/td&gt;
      &lt;td&gt;3163690.0&lt;/td&gt;
      &lt;td&gt;29611473.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000020002&lt;/th&gt;
      &lt;td&gt;10 SSA LANDLORD, LLC&lt;/td&gt;
      &lt;td&gt;10 SSA LANDLORD, LLC\n729 7TH AVE. FL. 15\nNEW...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;55592000.0&lt;/td&gt;
      &lt;td&gt;2672762.0&lt;/td&gt;
      &lt;td&gt;25016491.0&lt;/td&gt;
      &lt;td&gt;654246.0&lt;/td&gt;
      &lt;td&gt;654246.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000020003&lt;/th&gt;
      &lt;td&gt;NOT ON FILE&lt;/td&gt;
      &lt;td&gt;\nBAD LOCATION ADDRESS\n,&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;1774000.0&lt;/td&gt;
      &lt;td&gt;83277.0&lt;/td&gt;
      &lt;td&gt;779458.0&lt;/td&gt;
      &lt;td&gt;83277.0&lt;/td&gt;
      &lt;td&gt;83277.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000020023&lt;/th&gt;
      &lt;td&gt;NYC DSBS&lt;/td&gt;
      &lt;td&gt;NYC DSBS\n110 WILLIAM ST. FL. 7\nNEW YORK , NY...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;36968000.0&lt;/td&gt;
      &lt;td&gt;1824996.0&lt;/td&gt;
      &lt;td&gt;17081581.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000030001&lt;/th&gt;
      &lt;td&gt;PARKS AND RECREATION (GENERAL)&lt;/td&gt;
      &lt;td&gt;PARKS AND RECREATION (GENERAL)\nARSENAL WEST\n...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;285745000.0&lt;/td&gt;
      &lt;td&gt;13749587.0&lt;/td&gt;
      &lt;td&gt;128693250.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000030002&lt;/th&gt;
      &lt;td&gt;PARKS AND RECREATION (GENERAL)&lt;/td&gt;
      &lt;td&gt;PARKS AND RECREATION (GENERAL)\nARSENAL WEST\n...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10918000.0&lt;/td&gt;
      &lt;td&gt;524916.0&lt;/td&gt;
      &lt;td&gt;4913100.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000030003&lt;/th&gt;
      &lt;td&gt;PARKS AND RECREATION (GENERAL)&lt;/td&gt;
      &lt;td&gt;PARKS AND RECREATION (GENERAL)\nARSENAL WEST\n...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;9484000.0&lt;/td&gt;
      &lt;td&gt;432000.0&lt;/td&gt;
      &lt;td&gt;4043430.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000030010&lt;/th&gt;
      &lt;td&gt;UNITED STATES AMERICA&lt;/td&gt;
      &lt;td&gt;UNITED STATES AMERICA\n26 FEDERAL PLZ. STE 30-...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;32516000.0&lt;/td&gt;
      &lt;td&gt;1440628.0&lt;/td&gt;
      &lt;td&gt;13483980.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041001&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nRYAN, LLC\n16220 N. SCOT...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;5351542.0&lt;/td&gt;
      &lt;td&gt;254361.0&lt;/td&gt;
      &lt;td&gt;2380764.0&lt;/td&gt;
      &lt;td&gt;254361.0&lt;/td&gt;
      &lt;td&gt;251840.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041002&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nRYAN, LLC\n16220 N. SCOT...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;7733995.0&lt;/td&gt;
      &lt;td&gt;367600.0&lt;/td&gt;
      &lt;td&gt;3440656.0&lt;/td&gt;
      &lt;td&gt;367600.0&lt;/td&gt;
      &lt;td&gt;342763.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041003&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nRYAN, LLC\n16220 N. SCOT...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;15960040.0&lt;/td&gt;
      &lt;td&gt;713000.0&lt;/td&gt;
      &lt;td&gt;6673528.0&lt;/td&gt;
      &lt;td&gt;713000.0&lt;/td&gt;
      &lt;td&gt;713000.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041004&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nRYAN, LLC\n16220 N. SCOT...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;1372802.0&lt;/td&gt;
      &lt;td&gt;65249.0&lt;/td&gt;
      &lt;td&gt;610721.0&lt;/td&gt;
      &lt;td&gt;65249.0&lt;/td&gt;
      &lt;td&gt;53869.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041005&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nRYAN, LLC\n16220 N. SCOT...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;3144677.0&lt;/td&gt;
      &lt;td&gt;149467.0&lt;/td&gt;
      &lt;td&gt;1398982.0&lt;/td&gt;
      &lt;td&gt;149467.0&lt;/td&gt;
      &lt;td&gt;148035.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041006&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nRYAN, LLC\n16220 N. SCOT...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;2973077.0&lt;/td&gt;
      &lt;td&gt;141311.0&lt;/td&gt;
      &lt;td&gt;1322645.0&lt;/td&gt;
      &lt;td&gt;141311.0&lt;/td&gt;
      &lt;td&gt;141311.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041007&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nRYAN, LLC\n16220 N. SCOT...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10487584.0&lt;/td&gt;
      &lt;td&gt;498479.0&lt;/td&gt;
      &lt;td&gt;4665659.0&lt;/td&gt;
      &lt;td&gt;498479.0&lt;/td&gt;
      &lt;td&gt;384952.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041008&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nRYAN, LLC\n16220 N. SCOT...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10208233.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;4541380.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;374697.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041009&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nRYAN LLC\n16220 N. SCOTT...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10208233.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;4541380.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;374697.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041010&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nC/O RYAN DEPT. 113\nP.O....&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10208233.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;4541380.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;374697.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041011&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nC/O RYAN DEPT. 113\nP.O....&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10208233.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;4541380.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;374697.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041012&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nC/O RYAN DEPT. 113\nP.O....&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10208233.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;4541380.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;374697.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041013&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nC/O RYAN DEPT. 113\nP.O....&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10208233.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;4541380.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;374697.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041014&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nC/O RYAN DEPT. 113\nP.O....&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10208233.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;4541380.0&lt;/td&gt;
      &lt;td&gt;485201.0&lt;/td&gt;
      &lt;td&gt;374697.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041015&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nC/O RYAN DEPT. 113\nP.O....&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10204251.0&lt;/td&gt;
      &lt;td&gt;485012.0&lt;/td&gt;
      &lt;td&gt;4539612.0&lt;/td&gt;
      &lt;td&gt;485012.0&lt;/td&gt;
      &lt;td&gt;374508.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041016&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nC/O RYAN DEPT. 113\nP.O....&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10072551.0&lt;/td&gt;
      &lt;td&gt;478752.0&lt;/td&gt;
      &lt;td&gt;4481020.0&lt;/td&gt;
      &lt;td&gt;478752.0&lt;/td&gt;
      &lt;td&gt;369737.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041017&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nC/O RYAN DEPT. 113\nP.O....&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10072551.0&lt;/td&gt;
      &lt;td&gt;478752.0&lt;/td&gt;
      &lt;td&gt;4481020.0&lt;/td&gt;
      &lt;td&gt;478752.0&lt;/td&gt;
      &lt;td&gt;478752.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041018&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nC/O RYAN DEPT. 113\nP.O....&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10399795.0&lt;/td&gt;
      &lt;td&gt;494306.0&lt;/td&gt;
      &lt;td&gt;4626605.0&lt;/td&gt;
      &lt;td&gt;494306.0&lt;/td&gt;
      &lt;td&gt;494306.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000041019&lt;/th&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC&lt;/td&gt;
      &lt;td&gt;ONE NY PLAZA CO. LLC\nC/O RYAN DEPT. 113\nP.O....&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;10399795.0&lt;/td&gt;
      &lt;td&gt;494306.0&lt;/td&gt;
      &lt;td&gt;4626605.0&lt;/td&gt;
      &lt;td&gt;494306.0&lt;/td&gt;
      &lt;td&gt;494306.0&lt;/td&gt;
      &lt;td&gt;835.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500001&lt;/th&gt;
      &lt;td&gt;NUSSER- MEANY, SUSAN M.&lt;/td&gt;
      &lt;td&gt;NUSSER- MEANY, SUSAN M.\nSTATEN ISLAND, NY 103...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;591000.0&lt;/td&gt;
      &lt;td&gt;5754.0&lt;/td&gt;
      &lt;td&gt;30038.0&lt;/td&gt;
      &lt;td&gt;5754.0&lt;/td&gt;
      &lt;td&gt;5754.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500004&lt;/th&gt;
      &lt;td&gt;JEANNE GIORLANDO&lt;/td&gt;
      &lt;td&gt;JEANNE GIORLANDO\n7631 AMBOY RD.\nSTATEN ISLAN...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;533000.0&lt;/td&gt;
      &lt;td&gt;5420.0&lt;/td&gt;
      &lt;td&gt;28290.0&lt;/td&gt;
      &lt;td&gt;5118.0&lt;/td&gt;
      &lt;td&gt;5118.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500007&lt;/th&gt;
      &lt;td&gt;A. MARKOWITZ&lt;/td&gt;
      &lt;td&gt;A. MARKOWITZ\n7635 AMBOY RD.\nSTATEN ISLAND, N...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;572000.0&lt;/td&gt;
      &lt;td&gt;5656.0&lt;/td&gt;
      &lt;td&gt;29527.0&lt;/td&gt;
      &lt;td&gt;4975.0&lt;/td&gt;
      &lt;td&gt;4975.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500010&lt;/th&gt;
      &lt;td&gt;CHARLES BEARDSLEY&lt;/td&gt;
      &lt;td&gt;CHARLES BEARDSLEY\n7639 AMBOY RD.\nSTATEN ISLA...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;465000.0&lt;/td&gt;
      &lt;td&gt;3432.0&lt;/td&gt;
      &lt;td&gt;17914.0&lt;/td&gt;
      &lt;td&gt;2926.0&lt;/td&gt;
      &lt;td&gt;2926.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500013&lt;/th&gt;
      &lt;td&gt;JOHN ALLIDA SCOTTI&lt;/td&gt;
      &lt;td&gt;JOHN ALLIDA SCOTTI\n7647 AMBOY RD.\nSTATEN ISL...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;633000.0&lt;/td&gt;
      &lt;td&gt;6177.0&lt;/td&gt;
      &lt;td&gt;32246.0&lt;/td&gt;
      &lt;td&gt;5875.0&lt;/td&gt;
      &lt;td&gt;5875.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500017&lt;/th&gt;
      &lt;td&gt;NUSSER, STACEY&lt;/td&gt;
      &lt;td&gt;NUSSER, STACEY\n7688 AMBOY RD.\nSTATEN ISLAND,...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;474000.0&lt;/td&gt;
      &lt;td&gt;5448.0&lt;/td&gt;
      &lt;td&gt;28440.0&lt;/td&gt;
      &lt;td&gt;5448.0&lt;/td&gt;
      &lt;td&gt;5448.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500019&lt;/th&gt;
      &lt;td&gt;BECKETT, JOSEPH&lt;/td&gt;
      &lt;td&gt;BECKETT, JOSEPH\nSTATEN ISLAND, NY 10307-1418\...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;497000.0&lt;/td&gt;
      &lt;td&gt;5282.0&lt;/td&gt;
      &lt;td&gt;27570.0&lt;/td&gt;
      &lt;td&gt;4980.0&lt;/td&gt;
      &lt;td&gt;4980.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500022&lt;/th&gt;
      &lt;td&gt;PAUL A. MANDILE&lt;/td&gt;
      &lt;td&gt;PAUL A. MANDILE\n7663 AMBOY RD.\nSTATEN ISLAND...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;867000.0&lt;/td&gt;
      &lt;td&gt;9345.0&lt;/td&gt;
      &lt;td&gt;48781.0&lt;/td&gt;
      &lt;td&gt;9043.0&lt;/td&gt;
      &lt;td&gt;9043.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500025&lt;/th&gt;
      &lt;td&gt;ALAN J. OLSEN&lt;/td&gt;
      &lt;td&gt;ALAN J. OLSEN\n7671 AMBOY RD.\nSTATEN ISLAND, ...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;457000.0&lt;/td&gt;
      &lt;td&gt;4847.0&lt;/td&gt;
      &lt;td&gt;25303.0&lt;/td&gt;
      &lt;td&gt;4545.0&lt;/td&gt;
      &lt;td&gt;4545.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500028&lt;/th&gt;
      &lt;td&gt;CLAIRE DOGERY&lt;/td&gt;
      &lt;td&gt;CLAIRE DOGERY\nSTATEN ISLAND, NY 10307-1418\nO...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;400000.0&lt;/td&gt;
      &lt;td&gt;4512.0&lt;/td&gt;
      &lt;td&gt;23554.0&lt;/td&gt;
      &lt;td&gt;1501.0&lt;/td&gt;
      &lt;td&gt;1501.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500031&lt;/th&gt;
      &lt;td&gt;STEFANIE DIMINO&lt;/td&gt;
      &lt;td&gt;STEFANIE DIMINO\nSTATEN ISLAND, NY 10307-1418\...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;490000.0&lt;/td&gt;
      &lt;td&gt;5324.0&lt;/td&gt;
      &lt;td&gt;27793.0&lt;/td&gt;
      &lt;td&gt;5324.0&lt;/td&gt;
      &lt;td&gt;5324.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500034&lt;/th&gt;
      &lt;td&gt;V. SCHNURR&lt;/td&gt;
      &lt;td&gt;V. SCHNURR\n590 CRAIG AVE.\nSTATEN ISLAND, NY ...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;497000.0&lt;/td&gt;
      &lt;td&gt;5148.0&lt;/td&gt;
      &lt;td&gt;26872.0&lt;/td&gt;
      &lt;td&gt;4222.0&lt;/td&gt;
      &lt;td&gt;4222.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500037&lt;/th&gt;
      &lt;td&gt;ANTONIELLO, FRANK&lt;/td&gt;
      &lt;td&gt;ANTONIELLO, FRANK\nSTATEN ISLAND, NY 10307-123...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;570000.0&lt;/td&gt;
      &lt;td&gt;6552.0&lt;/td&gt;
      &lt;td&gt;34200.0&lt;/td&gt;
      &lt;td&gt;6552.0&lt;/td&gt;
      &lt;td&gt;6552.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500050&lt;/th&gt;
      &lt;td&gt;VAUGHAN, BRIAN&lt;/td&gt;
      &lt;td&gt;VAUGHAN, BRIAN\n582 CRAIG AVE.\nSTATEN ISLAND,...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;613000.0&lt;/td&gt;
      &lt;td&gt;5979.0&lt;/td&gt;
      &lt;td&gt;31213.0&lt;/td&gt;
      &lt;td&gt;5677.0&lt;/td&gt;
      &lt;td&gt;5677.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500053&lt;/th&gt;
      &lt;td&gt;OGNO, CHRISTOPHER E.&lt;/td&gt;
      &lt;td&gt;OGNO, CHRISTOPHER E.\nSTATEN ISLAND, NY 10307-...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;553000.0&lt;/td&gt;
      &lt;td&gt;6324.0&lt;/td&gt;
      &lt;td&gt;33009.0&lt;/td&gt;
      &lt;td&gt;6324.0&lt;/td&gt;
      &lt;td&gt;6324.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500055&lt;/th&gt;
      &lt;td&gt;NOT ON FILE&lt;/td&gt;
      &lt;td&gt;\nBAD LOCATION ADDRESS\n,&lt;/td&gt;
      &lt;td&gt;1b - vacant land, zoned residential&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;6000.0&lt;/td&gt;
      &lt;td&gt;25.0&lt;/td&gt;
      &lt;td&gt;129.0&lt;/td&gt;
      &lt;td&gt;25.0&lt;/td&gt;
      &lt;td&gt;25.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500056&lt;/th&gt;
      &lt;td&gt;WYSOCZNSKI, ANDRE&lt;/td&gt;
      &lt;td&gt;MR. &amp;amp; MRS. ANDRZEJ WYSOCZANSKI\nMONROE, NJ 088...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;472000.0&lt;/td&gt;
      &lt;td&gt;4463.0&lt;/td&gt;
      &lt;td&gt;23296.0&lt;/td&gt;
      &lt;td&gt;4463.0&lt;/td&gt;
      &lt;td&gt;4463.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500058&lt;/th&gt;
      &lt;td&gt;CATHERINE MARINO&lt;/td&gt;
      &lt;td&gt;CATHERINE MARINO\nSTATEN ISLAND, NY 10307-1237...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;488000.0&lt;/td&gt;
      &lt;td&gt;5273.0&lt;/td&gt;
      &lt;td&gt;27523.0&lt;/td&gt;
      &lt;td&gt;4971.0&lt;/td&gt;
      &lt;td&gt;4971.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500060&lt;/th&gt;
      &lt;td&gt;COMO, PIETRO&lt;/td&gt;
      &lt;td&gt;COMO, PIETRO\nSTATEN ISLAND, NY 10307-1237\nOu...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;622000.0&lt;/td&gt;
      &lt;td&gt;5424.0&lt;/td&gt;
      &lt;td&gt;28315.0&lt;/td&gt;
      &lt;td&gt;5424.0&lt;/td&gt;
      &lt;td&gt;5424.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500062&lt;/th&gt;
      &lt;td&gt;JOHN K. CHAPMAN&lt;/td&gt;
      &lt;td&gt;JOHN K. CHAPMAN\n560 CRAIG AVE.\nSTATEN ISLAND...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;486000.0&lt;/td&gt;
      &lt;td&gt;5201.0&lt;/td&gt;
      &lt;td&gt;27147.0&lt;/td&gt;
      &lt;td&gt;4899.0&lt;/td&gt;
      &lt;td&gt;4899.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500065&lt;/th&gt;
      &lt;td&gt;BROWN, ELIZABETH&lt;/td&gt;
      &lt;td&gt;BROWN, ELIZABETH\nLONG BRANCH, NJ 07740-4932\n...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;492000.0&lt;/td&gt;
      &lt;td&gt;5417.0&lt;/td&gt;
      &lt;td&gt;28279.0&lt;/td&gt;
      &lt;td&gt;5417.0&lt;/td&gt;
      &lt;td&gt;5417.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500068&lt;/th&gt;
      &lt;td&gt;MARIO AMOROSO&lt;/td&gt;
      &lt;td&gt;MARIO AMOROSO\nSTATEN ISLAND, NY 10307-1237\nO...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;550000.0&lt;/td&gt;
      &lt;td&gt;5974.0&lt;/td&gt;
      &lt;td&gt;31185.0&lt;/td&gt;
      &lt;td&gt;5672.0&lt;/td&gt;
      &lt;td&gt;5672.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500072&lt;/th&gt;
      &lt;td&gt;JOSEPH R. GLORIA&lt;/td&gt;
      &lt;td&gt;JOSEPH R. GLORIA\n536 CRAIG AVE.\nSTATEN ISLAN...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;668000.0&lt;/td&gt;
      &lt;td&gt;7258.0&lt;/td&gt;
      &lt;td&gt;37887.0&lt;/td&gt;
      &lt;td&gt;6956.0&lt;/td&gt;
      &lt;td&gt;6956.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500076&lt;/th&gt;
      &lt;td&gt;DENNIS EMPEROR&lt;/td&gt;
      &lt;td&gt;DENNIS EMPEROR\n534 CRAIG AVE.\nSTATEN ISLAND,...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;442000.0&lt;/td&gt;
      &lt;td&gt;4701.0&lt;/td&gt;
      &lt;td&gt;24538.0&lt;/td&gt;
      &lt;td&gt;3801.0&lt;/td&gt;
      &lt;td&gt;3801.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500078&lt;/th&gt;
      &lt;td&gt;CHIU, ANNE&lt;/td&gt;
      &lt;td&gt;CHIU, ANNE\n532 CRAIG AVE.\nSTATEN ISLAND, NY ...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;1033000.0&lt;/td&gt;
      &lt;td&gt;10413.0&lt;/td&gt;
      &lt;td&gt;54355.0&lt;/td&gt;
      &lt;td&gt;10413.0&lt;/td&gt;
      &lt;td&gt;10413.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500083&lt;/th&gt;
      &lt;td&gt;TOBIN, GALE&lt;/td&gt;
      &lt;td&gt;TOBIN, GALE\n142 BENTLEY ST.\nSTATEN ISLAND, N...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;475000.0&lt;/td&gt;
      &lt;td&gt;5361.0&lt;/td&gt;
      &lt;td&gt;27986.0&lt;/td&gt;
      &lt;td&gt;5059.0&lt;/td&gt;
      &lt;td&gt;5059.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500086&lt;/th&gt;
      &lt;td&gt;ARLOTTA, THOMAS&lt;/td&gt;
      &lt;td&gt;ARLOTTA, THOMAS\nSTATEN ISLAND, NY 10307-1235\...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;585000.0&lt;/td&gt;
      &lt;td&gt;3432.0&lt;/td&gt;
      &lt;td&gt;17914.0&lt;/td&gt;
      &lt;td&gt;3130.0&lt;/td&gt;
      &lt;td&gt;3130.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500089&lt;/th&gt;
      &lt;td&gt;JOHN GERVASI&lt;/td&gt;
      &lt;td&gt;JOHN GERVASI\nSTATEN ISLAND, NY 10307-1235\nOu...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;507000.0&lt;/td&gt;
      &lt;td&gt;5282.0&lt;/td&gt;
      &lt;td&gt;27570.0&lt;/td&gt;
      &lt;td&gt;2020.0&lt;/td&gt;
      &lt;td&gt;2020.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500092&lt;/th&gt;
      &lt;td&gt;RITA M. MOOG&lt;/td&gt;
      &lt;td&gt;WILLIAM P. MOOG\nSTATEN ISLAND, NY 10307-1235\...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;484000.0&lt;/td&gt;
      &lt;td&gt;5296.0&lt;/td&gt;
      &lt;td&gt;27644.0&lt;/td&gt;
      &lt;td&gt;4994.0&lt;/td&gt;
      &lt;td&gt;4994.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5080500094&lt;/th&gt;
      &lt;td&gt;EDWARD DONOHUE&lt;/td&gt;
      &lt;td&gt;EDWARD DONOHUE\n162 BENTLEY ST.\nSTATEN ISLAND...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;448000.0&lt;/td&gt;
      &lt;td&gt;5148.0&lt;/td&gt;
      &lt;td&gt;26872.0&lt;/td&gt;
      &lt;td&gt;4846.0&lt;/td&gt;
      &lt;td&gt;4846.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;1081624 rows × 11 columns&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;And the other sheet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;tax_bills_june15_exab
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;output-1&#34;&gt;Output&lt;/h5&gt;

&lt;div style=&#34;max-width: 100%; max-height: 300px; overflow: auto; font-family: &#39;Inconsolata&#39;, monospace; font-size: 10pt; line-height: 1.0em&#34;&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
      &lt;th&gt;detail&lt;/th&gt;
      &lt;th&gt;amount&lt;/th&gt;
      &lt;th&gt;units&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;bbl&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;4015180009&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-4075.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4046020125&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-11794.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4001570040&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-6942.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4004740010&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-3548.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4012820175&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-8735.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4096480024&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-9421.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4008811001&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-9702.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4066880010&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;clergy&lt;/td&gt;
      &lt;td&gt;-287.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4022201059&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-69.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4114171507&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-106.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5064220040&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;park&lt;/td&gt;
      &lt;td&gt;-1218.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5077020043&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-9906.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5009530307&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;park&lt;/td&gt;
      &lt;td&gt;-1139.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5065770038&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;park&lt;/td&gt;
      &lt;td&gt;-1483.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3025970001&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-72473.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3002751203&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-1286.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3068020036&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-2567.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3067160075&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-1438.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3078780009&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-684.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3021111197&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-10772.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3008050016&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-12288.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3024770001&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-97241.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3067820050&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-2253.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3002451578&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-503.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3073970001&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-8575.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3067210070&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-1875.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3065030030&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-10109.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3053390001&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-3833.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3006650071&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;clergy&lt;/td&gt;
      &lt;td&gt;-287.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2039441082&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-775.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2057630556&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;basic star - school tax relief&lt;/td&gt;
      &lt;td&gt;-302.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2057630554&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;basic star - school tax relief&lt;/td&gt;
      &lt;td&gt;-302.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2057630546&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;enhanced star - school tax relief&lt;/td&gt;
      &lt;td&gt;-621.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2057630540&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;senior citizens homeowners’ exemption&lt;/td&gt;
      &lt;td&gt;-3338.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2057630540&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;enhanced star - school tax relief&lt;/td&gt;
      &lt;td&gt;-621.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2057630565&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;basic star - school tax relief&lt;/td&gt;
      &lt;td&gt;-302.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2057630563&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;disabled homeowner&lt;/td&gt;
      &lt;td&gt;-3003.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2057630563&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;basic star - school tax relief&lt;/td&gt;
      &lt;td&gt;-302.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2057630533&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;basic star - school tax relief&lt;/td&gt;
      &lt;td&gt;-302.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2057630525&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;basic star - school tax relief&lt;/td&gt;
      &lt;td&gt;-302.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2058060703&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;faculty student hsg&lt;/td&gt;
      &lt;td&gt;-12139.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2058060721&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;basic star - school tax relief&lt;/td&gt;
      &lt;td&gt;-302.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2058060708&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;basic star - school tax relief&lt;/td&gt;
      &lt;td&gt;-302.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2058060681&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;school-elem,hs,acad&lt;/td&gt;
      &lt;td&gt;-196908.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2058060698&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;school-elem,hs,acad&lt;/td&gt;
      &lt;td&gt;-16195.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2058060723&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;basic star - school tax relief&lt;/td&gt;
      &lt;td&gt;-302.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2023280032&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-2337.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2023280017&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-14241.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2023280035&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-84983.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1014440041&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-4792.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1018381116&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-59.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1018333209&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-138.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1012061087&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-417.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1001971110&lt;/th&gt;
      &lt;td&gt;exemption&lt;/td&gt;
      &lt;td&gt;icip&lt;/td&gt;
      &lt;td&gt;-8178.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1020901029&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-20.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1014201524&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-294.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1018261122&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-951.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1016021056&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-448.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1020421124&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-3547.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1012500006&lt;/th&gt;
      &lt;td&gt;abatement&lt;/td&gt;
      &lt;td&gt;j51 abatement&lt;/td&gt;
      &lt;td&gt;-7042.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;752599 rows × 4 columns&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Note that address isn&amp;rsquo;t exactly right. We&amp;rsquo;ll have to normalize it a bit before we go further.  First thing to do is get rid of the pesky newlines.  It turns out they&amp;rsquo;re not really newlines, since we read a CSV, but rather literal escapes.&lt;/p&gt;

&lt;p&gt;My first thought was to simply get rid of them as in below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;corrected_addresses = tax_bills_june15_bbls[&#39;address&#39;].str.replace(&amp;quot;\\\\n&amp;quot;, &#39; &#39;)
next(iter(corrected_addresses))
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;output-2&#34;&gt;Output&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;&#39;GOVERNORS ISLAND CORPORATION C/O TRUST FOR. GOVERNORS ISLAN 10 SOUTH ST. APT. FRNT SLIP7&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But it turns out that a lot of geocoders don&amp;rsquo;t respond well to recipient names at the head of the address, zip4s, and borough names instead of city names. Our solution won&amp;rsquo;t be perfect, but it&amp;rsquo;ll be decent enough to show as an example and leave &amp;ldquo;perfection&amp;rdquo; for the reader if it&amp;rsquo;s really necessary for the application.&lt;/p&gt;

&lt;p&gt;Nominatim in particular is fragile, but we use it because it&amp;rsquo;s free and requires no API key.  We also use it because in order to do bulk geocoding you&amp;rsquo;re going to have to set up Nominatim yourself or another equally fragile bulk geocoder (there are several).&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s go ahead and do the corrections.&lt;/p&gt;

&lt;p&gt;First we&amp;rsquo;ll correct some common quirks. We&amp;rsquo;ll drop empty addresses and replace &amp;ldquo;One&amp;rdquo; with 1, which is common in commercial districts.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# starts_with_number = re.compile(&#39;^[0-9]+&#39;)
starts_with_one = re.compile(&#39;^ONE&#39;)

def scrub_addr(addr_lines):
    global starts_with_number
    if not isinstance(addr_lines, list):
        return addr_lines

    if starts_with_one.match(addr_lines[0]):  # this is a common pattern in addresses
        addr_lines[0] = addr_lines[0].replace(&#39;ONE&#39;, &#39;1&#39;)

    if len(addr_lines):
        return &#39; &#39;.join(addr_lines)
    else:
        return np.nan
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This next function will take the addresses we ahve and make sure they at least have state and zipcode attached.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;state_and_zip = re.compile(r&#39;^.*NY\s+(?:[0-9]{5})?(?:-[0-9]{4})\s*(?:USA)?$&#39;)

def append_state_info(addr):
    if not state_and_zip.match(addr):
        return addr + &#39;, NY 00000&#39;  # we append a dummy zipcode because it helps the address tagger work better.
    else:
        return addr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we&amp;rsquo;ve cleaned up common quirks, let&amp;rsquo;s tag the address. Rule number 1. Addresses, despite being ubiquitous, are &lt;em&gt;messy&lt;/em&gt;. &lt;strong&gt;There is an (likely open-source) address parser for your country. Find it and use it. Don&amp;rsquo;t try to create your own&lt;/strong&gt;. Writing your own address parser will cause damage to your monitor, keyboard, desk, and face.  We don&amp;rsquo;t want that, do we?&lt;/p&gt;

&lt;p&gt;My code is using &lt;code&gt;usaddress&lt;/code&gt;.  It&amp;rsquo;s slow but accurate, so we&amp;rsquo;ll not actually be doing the entire dataset in this notebook.  You can of course do the whole dataset yourself without trouble, but you should really go make some pancakes from scratch and eat them while you&amp;rsquo;re waiting for it to finish.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def tag_addr(addr):
    if not isinstance(addr, str) or len(addr) == 0:
        return np.nan
    else:
        try:
            return usaddress.tag(addr)
        except usaddress.RepeatedLabelError:  # some addresses turn out to have bits repeated
            return tag_addr(&#39; &#39;.join(addr.split(&#39; &#39;)[1:]))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A final pass will re-merge the address into a single string for geocoding, keeping only the parts of the address that the geocoder understands.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def join_addr(addr):
    addr = addr[0]
    if &#39;ZipCode&#39; in addr and &#39;-&#39; in addr[&#39;ZipCode&#39;]:
        addr[&#39;ZipCode&#39;] = addr[&#39;ZipCode&#39;].split(&#39;-&#39;)[0]   # Nominatim hates zip4

    if &#39;PlaceName&#39; not in addr:
        addr[&#39;PlaceName&#39;] = &#39;New York&#39;  # we already know we&#39;re in new york, some addresses omit it.

    if all((
        &#39;AddressNumber&#39; in addr,
        &#39;StreetName&#39; in addr,
        &#39;ZipCode&#39; in addr and addr[&#39;ZipCode&#39;] != &#39;00000&#39;
    )):
        return &#39; &#39;.join((
                addr.get(&#39;AddressNumberPrefix&#39;, &#39;&#39;),
                addr.get(&#39;AddressNumber&#39;, &#39;&#39;),
                addr.get(&#39;AddressNumberSuffix&#39;, &#39;&#39;),
                addr.get(&#39;StreetNamePreModifier&#39;, &#39;&#39;),
                addr.get(&#39;StreetNamePreDirectional&#39;, &#39;&#39;),
                addr.get(&#39;StreetNamePreType&#39;, &#39;&#39;),
                addr.get(&#39;StreetName&#39;, &#39;&#39;),
                addr.get(&#39;StreetNamePostType&#39;, &#39;&#39;),
                addr.get(&#39;StreetNamePostDirectional&#39;, &#39;&#39;),
                addr[&#39;StateName&#39;],
                addr[&#39;ZipCode&#39;]
            ))
    elif all((
        &#39;AddressNumber&#39; in addr,
        &#39;StreetName&#39; in addr
    )):
        return &#39; &#39;.join((
            addr.get(&#39;AddressNumberPrefix&#39;, &#39;&#39;),
            addr.get(&#39;AddressNumber&#39;, &#39;&#39;),
            addr.get(&#39;AddressNumberSuffix&#39;, &#39;&#39;),
            addr.get(&#39;StreetNamePreModifier&#39;, &#39;&#39;),
            addr.get(&#39;StreetNamePreDirectional&#39;, &#39;&#39;),
            addr.get(&#39;StreetNamePreType&#39;, &#39;&#39;),
            addr.get(&#39;StreetName&#39;, &#39;&#39;),
            addr.get(&#39;StreetNamePostType&#39;, &#39;&#39;),
            addr.get(&#39;StreetNamePostDirectional&#39;, &#39;&#39;),
            addr[&#39;StateName&#39;],
        ))
    else:
        return np.nan
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
scrubbed_addresses = tax_bills_june15_bbls[&#39;address&#39;]\
    .sample(n=150)\
    .str.split(&amp;quot;\\\\n&amp;quot;)\
    .map(scrub_addr)\
    .dropna()\
    .map(append_state_info)\
    .map(tag_addr)\
    .map(join_addr)\
    .dropna()

len(scrubbed_addresses)
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;output-3&#34;&gt;Output&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;104
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;geocodable_tax_bills_june15_bbls = tax_bills_june15_bbls.ix[scrubbed_addresses.index]
geocodable_tax_bills_june15_bbls[&#39;address&#39;] = scrubbed_addresses
geocodable_tax_bills_june15_bbls
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;output-4&#34;&gt;Output&lt;/h5&gt;

&lt;div style=&#34;max-width: 100%; max-height: 300px; overflow: auto; font-family: &#39;Inconsolata&#39;, monospace; font-size: 10pt; line-height: 1.0em&#34;&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ownername&lt;/th&gt;
      &lt;th&gt;address&lt;/th&gt;
      &lt;th&gt;taxclass&lt;/th&gt;
      &lt;th&gt;taxrate&lt;/th&gt;
      &lt;th&gt;emv&lt;/th&gt;
      &lt;th&gt;tbea&lt;/th&gt;
      &lt;th&gt;bav&lt;/th&gt;
      &lt;th&gt;tba&lt;/th&gt;
      &lt;th&gt;propertytax&lt;/th&gt;
      &lt;th&gt;condonumber&lt;/th&gt;
      &lt;th&gt;condo&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;bbl&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;4050221346&lt;/th&gt;
      &lt;td&gt;WINSTON TOWER, LLC&lt;/td&gt;
      &lt;td&gt;315     CENTRAL PARK  W. NY&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;47791.0&lt;/td&gt;
      &lt;td&gt;2532.0&lt;/td&gt;
      &lt;td&gt;19698.0&lt;/td&gt;
      &lt;td&gt;2532.0&lt;/td&gt;
      &lt;td&gt;2532.0&lt;/td&gt;
      &lt;td&gt;162.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5022680027&lt;/th&gt;
      &lt;td&gt;ALAN NANCY EILENBERG&lt;/td&gt;
      &lt;td&gt;228     LONDON RD.  NY 10306&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;714000.0&lt;/td&gt;
      &lt;td&gt;8066.0&lt;/td&gt;
      &lt;td&gt;42103.0&lt;/td&gt;
      &lt;td&gt;7764.0&lt;/td&gt;
      &lt;td&gt;7764.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4011690028&lt;/th&gt;
      &lt;td&gt;TZIKAS, NICK (TRUSTEE)&lt;/td&gt;
      &lt;td&gt;3242     74TH ST.  NY 11370&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;591000.0&lt;/td&gt;
      &lt;td&gt;5902.0&lt;/td&gt;
      &lt;td&gt;30811.0&lt;/td&gt;
      &lt;td&gt;5600.0&lt;/td&gt;
      &lt;td&gt;5600.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1000151174&lt;/th&gt;
      &lt;td&gt;NEKKAH, KEVIN ERWIN&lt;/td&gt;
      &lt;td&gt;20     WEST ST.  NY&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;165429.0&lt;/td&gt;
      &lt;td&gt;8485.0&lt;/td&gt;
      &lt;td&gt;66004.0&lt;/td&gt;
      &lt;td&gt;3072.0&lt;/td&gt;
      &lt;td&gt;2074.0&lt;/td&gt;
      &lt;td&gt;1557.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4001391039&lt;/th&gt;
      &lt;td&gt;AMINOV, BARNO&lt;/td&gt;
      &lt;td&gt;16427     75TH RD.  NY 11366&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;43144.0&lt;/td&gt;
      &lt;td&gt;2349.0&lt;/td&gt;
      &lt;td&gt;18274.0&lt;/td&gt;
      &lt;td&gt;2349.0&lt;/td&gt;
      &lt;td&gt;2349.0&lt;/td&gt;
      &lt;td&gt;646.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3053400039&lt;/th&gt;
      &lt;td&gt;CHAMBERS, DESMOND&lt;/td&gt;
      &lt;td&gt;246   E.  8TH ST.  NY 11218&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;877000.0&lt;/td&gt;
      &lt;td&gt;5058.0&lt;/td&gt;
      &lt;td&gt;26403.0&lt;/td&gt;
      &lt;td&gt;4756.0&lt;/td&gt;
      &lt;td&gt;4756.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4072510031&lt;/th&gt;
      &lt;td&gt;WOISLAVSKY, IRWIN&lt;/td&gt;
      &lt;td&gt;18442     TUDOR RD.  NY 11432&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;976000.0&lt;/td&gt;
      &lt;td&gt;9572.0&lt;/td&gt;
      &lt;td&gt;49968.0&lt;/td&gt;
      &lt;td&gt;9270.0&lt;/td&gt;
      &lt;td&gt;9270.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4132000004&lt;/th&gt;
      &lt;td&gt;PATEL, JYOTI&lt;/td&gt;
      &lt;td&gt;13560     234TH PL.  NY 11422&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;446000.0&lt;/td&gt;
      &lt;td&gt;4298.0&lt;/td&gt;
      &lt;td&gt;22438.0&lt;/td&gt;
      &lt;td&gt;4298.0&lt;/td&gt;
      &lt;td&gt;4298.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2038730049&lt;/th&gt;
      &lt;td&gt;GUERRA, LOUIS J.&lt;/td&gt;
      &lt;td&gt;1345     ROSEDALE AVE.  NY 10472&lt;/td&gt;
      &lt;td&gt;2a - 4-6 unit residential building&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;448000.0&lt;/td&gt;
      &lt;td&gt;6261.0&lt;/td&gt;
      &lt;td&gt;48708.0&lt;/td&gt;
      &lt;td&gt;5645.0&lt;/td&gt;
      &lt;td&gt;5645.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5040330032&lt;/th&gt;
      &lt;td&gt;GARY S. SCALESCI&lt;/td&gt;
      &lt;td&gt;69     CUBA AVE.  NY 10306&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;257000.0&lt;/td&gt;
      &lt;td&gt;2954.0&lt;/td&gt;
      &lt;td&gt;15420.0&lt;/td&gt;
      &lt;td&gt;2652.0&lt;/td&gt;
      &lt;td&gt;2652.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2038060039&lt;/th&gt;
      &lt;td&gt;HAGANS, DARRYL&lt;/td&gt;
      &lt;td&gt;2162     CHATTERTON AVE.  NY 10472&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;395000.0&lt;/td&gt;
      &lt;td&gt;4242.0&lt;/td&gt;
      &lt;td&gt;22144.0&lt;/td&gt;
      &lt;td&gt;3940.0&lt;/td&gt;
      &lt;td&gt;3940.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2054230006&lt;/th&gt;
      &lt;td&gt;SCALA PROPERTIES INC.&lt;/td&gt;
      &lt;td&gt;40     GRANDVIEW CIR.  NY 11030&lt;/td&gt;
      &lt;td&gt;2a - 4-6 unit residential building&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;667000.0&lt;/td&gt;
      &lt;td&gt;7991.0&lt;/td&gt;
      &lt;td&gt;62162.0&lt;/td&gt;
      &lt;td&gt;7991.0&lt;/td&gt;
      &lt;td&gt;7991.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4093920028&lt;/th&gt;
      &lt;td&gt;KHAN JAMALODEEN&lt;/td&gt;
      &lt;td&gt;9419     108TH ST.  NY 11419&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;460000.0&lt;/td&gt;
      &lt;td&gt;4162.0&lt;/td&gt;
      &lt;td&gt;21728.0&lt;/td&gt;
      &lt;td&gt;3860.0&lt;/td&gt;
      &lt;td&gt;3860.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5054940083&lt;/th&gt;
      &lt;td&gt;YNCLINO CYNTHIA&lt;/td&gt;
      &lt;td&gt;42     CORTELYOU AVE.  NY 10312&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;392000.0&lt;/td&gt;
      &lt;td&gt;4380.0&lt;/td&gt;
      &lt;td&gt;22863.0&lt;/td&gt;
      &lt;td&gt;4078.0&lt;/td&gt;
      &lt;td&gt;4078.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3047270062&lt;/th&gt;
      &lt;td&gt;PAUL BASTIEN&lt;/td&gt;
      &lt;td&gt;329   E.  55TH ST.  NY&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;365000.0&lt;/td&gt;
      &lt;td&gt;4090.0&lt;/td&gt;
      &lt;td&gt;21349.0&lt;/td&gt;
      &lt;td&gt;1424.0&lt;/td&gt;
      &lt;td&gt;1424.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5000480018&lt;/th&gt;
      &lt;td&gt;YORK-VANDUZER, LLC&lt;/td&gt;
      &lt;td&gt;150     GREAVES LN.  NY 10308&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;290000.0&lt;/td&gt;
      &lt;td&gt;2245.0&lt;/td&gt;
      &lt;td&gt;11721.0&lt;/td&gt;
      &lt;td&gt;2245.0&lt;/td&gt;
      &lt;td&gt;2245.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2042481003&lt;/th&gt;
      &lt;td&gt;2013 COLONIAL LLC&lt;/td&gt;
      &lt;td&gt;2013     COLONIAL LLC 69 BOLTON AVE.  NY 10605&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;61169.0&lt;/td&gt;
      &lt;td&gt;3587.0&lt;/td&gt;
      &lt;td&gt;27903.0&lt;/td&gt;
      &lt;td&gt;72.0&lt;/td&gt;
      &lt;td&gt;72.0&lt;/td&gt;
      &lt;td&gt;124.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1011651703&lt;/th&gt;
      &lt;td&gt;CARTUS FINANCIAL CORPORATION&lt;/td&gt;
      &lt;td&gt;2109     BROADWAY   NY&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;426152.0&lt;/td&gt;
      &lt;td&gt;21451.0&lt;/td&gt;
      &lt;td&gt;166867.0&lt;/td&gt;
      &lt;td&gt;21451.0&lt;/td&gt;
      &lt;td&gt;17697.0&lt;/td&gt;
      &lt;td&gt;799.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3032490012&lt;/th&gt;
      &lt;td&gt;NAVARRO, LEONOR&lt;/td&gt;
      &lt;td&gt;1638     DEKALB AVE.  NY 11237&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;568000.0&lt;/td&gt;
      &lt;td&gt;3457.0&lt;/td&gt;
      &lt;td&gt;18047.0&lt;/td&gt;
      &lt;td&gt;3155.0&lt;/td&gt;
      &lt;td&gt;3155.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4114441016&lt;/th&gt;
      &lt;td&gt;LOZITO, MARIANA&lt;/td&gt;
      &lt;td&gt;15614     76TH ST.  NY 11414&lt;/td&gt;
      &lt;td&gt;1a - condo unit in 1-3 story building&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;299841.0&lt;/td&gt;
      &lt;td&gt;2258.0&lt;/td&gt;
      &lt;td&gt;11786.0&lt;/td&gt;
      &lt;td&gt;2258.0&lt;/td&gt;
      &lt;td&gt;2176.0&lt;/td&gt;
      &lt;td&gt;59.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3048730036&lt;/th&gt;
      &lt;td&gt;BERTRAND MERISE&lt;/td&gt;
      &lt;td&gt;3615     CHURCH AVE.  NY 11203&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;556000.0&lt;/td&gt;
      &lt;td&gt;6391.0&lt;/td&gt;
      &lt;td&gt;33360.0&lt;/td&gt;
      &lt;td&gt;6089.0&lt;/td&gt;
      &lt;td&gt;6089.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2039442458&lt;/th&gt;
      &lt;td&gt;DENNIS MOHABIR&lt;/td&gt;
      &lt;td&gt;1972     POWELL AVE.  NY 10472&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;65086.0&lt;/td&gt;
      &lt;td&gt;3150.0&lt;/td&gt;
      &lt;td&gt;24504.0&lt;/td&gt;
      &lt;td&gt;1204.0&lt;/td&gt;
      &lt;td&gt;142.0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3057940014&lt;/th&gt;
      &lt;td&gt;EVERBRIGHT BROOKLYN LLC&lt;/td&gt;
      &lt;td&gt;714     61ST ST.  NY 11220&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;327000.0&lt;/td&gt;
      &lt;td&gt;14203.0&lt;/td&gt;
      &lt;td&gt;132935.0&lt;/td&gt;
      &lt;td&gt;14203.0&lt;/td&gt;
      &lt;td&gt;14203.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5036420053&lt;/th&gt;
      &lt;td&gt;ZARRILLI DANIEL&lt;/td&gt;
      &lt;td&gt;136     BACHE AVE.  NY 10306&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;491000.0&lt;/td&gt;
      &lt;td&gt;5239.0&lt;/td&gt;
      &lt;td&gt;27348.0&lt;/td&gt;
      &lt;td&gt;4937.0&lt;/td&gt;
      &lt;td&gt;4937.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2047520059&lt;/th&gt;
      &lt;td&gt;RODRIQUES, VALERIE ROSE&lt;/td&gt;
      &lt;td&gt;3211     WICKHAM AVE.  NY 10469&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;453000.0&lt;/td&gt;
      &lt;td&gt;5207.0&lt;/td&gt;
      &lt;td&gt;27180.0&lt;/td&gt;
      &lt;td&gt;4905.0&lt;/td&gt;
      &lt;td&gt;4905.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3071010006&lt;/th&gt;
      &lt;td&gt;CHEN, WEN NAN&lt;/td&gt;
      &lt;td&gt;232    AVENUE T.   NY 11223&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;961000.0&lt;/td&gt;
      &lt;td&gt;7270.0&lt;/td&gt;
      &lt;td&gt;37951.0&lt;/td&gt;
      &lt;td&gt;3014.0&lt;/td&gt;
      &lt;td&gt;3014.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4045800027&lt;/th&gt;
      &lt;td&gt;SPYRO AVDOULOS&lt;/td&gt;
      &lt;td&gt;16012     11TH AVE.  NY 11357&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;999000.0&lt;/td&gt;
      &lt;td&gt;8647.0&lt;/td&gt;
      &lt;td&gt;45136.0&lt;/td&gt;
      &lt;td&gt;8647.0&lt;/td&gt;
      &lt;td&gt;8647.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4097270072&lt;/th&gt;
      &lt;td&gt;YEH, SUMI CHUANG&lt;/td&gt;
      &lt;td&gt;15015     87TH AVE.  NY 11432&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;603000.0&lt;/td&gt;
      &lt;td&gt;5879.0&lt;/td&gt;
      &lt;td&gt;30688.0&lt;/td&gt;
      &lt;td&gt;5577.0&lt;/td&gt;
      &lt;td&gt;5577.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3043050052&lt;/th&gt;
      &lt;td&gt;COLE-WRIGHT, DORIAN&lt;/td&gt;
      &lt;td&gt;713     VAN SICLEN AVE.  NY 11207&lt;/td&gt;
      &lt;td&gt;2a - 4-6 unit residential building&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;130000.0&lt;/td&gt;
      &lt;td&gt;6747.0&lt;/td&gt;
      &lt;td&gt;52488.0&lt;/td&gt;
      &lt;td&gt;6747.0&lt;/td&gt;
      &lt;td&gt;6747.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5053630040&lt;/th&gt;
      &lt;td&gt;VALERIO CHIRONNA&lt;/td&gt;
      &lt;td&gt;188     SEIDMAN AVE.  NY 10312&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;494000.0&lt;/td&gt;
      &lt;td&gt;5678.0&lt;/td&gt;
      &lt;td&gt;29640.0&lt;/td&gt;
      &lt;td&gt;2060.0&lt;/td&gt;
      &lt;td&gt;2060.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1006401015&lt;/th&gt;
      &lt;td&gt;BONN INVESTMENT, INC.&lt;/td&gt;
      &lt;td&gt;400   W.  12TH ST.  NY&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;786133.0&lt;/td&gt;
      &lt;td&gt;42910.0&lt;/td&gt;
      &lt;td&gt;333797.0&lt;/td&gt;
      &lt;td&gt;18214.0&lt;/td&gt;
      &lt;td&gt;18214.0&lt;/td&gt;
      &lt;td&gt;2060.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5017150001&lt;/th&gt;
      &lt;td&gt;GOETHALS SOUTH LLC&lt;/td&gt;
      &lt;td&gt;TX     75088-5526   NY&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;1130000.0&lt;/td&gt;
      &lt;td&gt;53703.0&lt;/td&gt;
      &lt;td&gt;502650.0&lt;/td&gt;
      &lt;td&gt;49376.0&lt;/td&gt;
      &lt;td&gt;49376.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5047130031&lt;/th&gt;
      &lt;td&gt;WILLIAM C. MEANEY&lt;/td&gt;
      &lt;td&gt;205     FAIRBANKS AVE.  NY 10306&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;529000.0&lt;/td&gt;
      &lt;td&gt;6019.0&lt;/td&gt;
      &lt;td&gt;31418.0&lt;/td&gt;
      &lt;td&gt;5717.0&lt;/td&gt;
      &lt;td&gt;5717.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4033110022&lt;/th&gt;
      &lt;td&gt;YU, LING&lt;/td&gt;
      &lt;td&gt;11729     UNION TPKE.  NY 11375&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;1069000.0&lt;/td&gt;
      &lt;td&gt;7097.0&lt;/td&gt;
      &lt;td&gt;37047.0&lt;/td&gt;
      &lt;td&gt;6795.0&lt;/td&gt;
      &lt;td&gt;6795.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5026200037&lt;/th&gt;
      &lt;td&gt;CARMELITA DE JESUS&lt;/td&gt;
      &lt;td&gt;68     TOWERS LN.  NY 10314&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;362000.0&lt;/td&gt;
      &lt;td&gt;4161.0&lt;/td&gt;
      &lt;td&gt;21720.0&lt;/td&gt;
      &lt;td&gt;3859.0&lt;/td&gt;
      &lt;td&gt;3859.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4155950024&lt;/th&gt;
      &lt;td&gt;EVERTON ANGUS&lt;/td&gt;
      &lt;td&gt;611     JARVIS AVE.  NY 11691&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;431000.0&lt;/td&gt;
      &lt;td&gt;4905.0&lt;/td&gt;
      &lt;td&gt;25603.0&lt;/td&gt;
      &lt;td&gt;4905.0&lt;/td&gt;
      &lt;td&gt;4905.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3007730065&lt;/th&gt;
      &lt;td&gt;323 LUOS PROPERTY LLC&lt;/td&gt;
      &lt;td&gt;133     MOTT ST.  NY 10013&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;658000.0&lt;/td&gt;
      &lt;td&gt;2178.0&lt;/td&gt;
      &lt;td&gt;11370.0&lt;/td&gt;
      &lt;td&gt;2178.0&lt;/td&gt;
      &lt;td&gt;2178.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3074590059&lt;/th&gt;
      &lt;td&gt;1517 VOORHIES AVE. LLC&lt;/td&gt;
      &lt;td&gt;1517     VOORHIES AVE.  NY 11235&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;2156000.0&lt;/td&gt;
      &lt;td&gt;77646.0&lt;/td&gt;
      &lt;td&gt;726750.0&lt;/td&gt;
      &lt;td&gt;6423.0&lt;/td&gt;
      &lt;td&gt;6423.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4163000004&lt;/th&gt;
      &lt;td&gt;ATHENA BENDO&lt;/td&gt;
      &lt;td&gt;14309     NEWPORT AVE.  NY 11694&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;1006000.0&lt;/td&gt;
      &lt;td&gt;11563.0&lt;/td&gt;
      &lt;td&gt;60360.0&lt;/td&gt;
      &lt;td&gt;11563.0&lt;/td&gt;
      &lt;td&gt;11563.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3010271092&lt;/th&gt;
      &lt;td&gt;ZHENG, YAN XIA&lt;/td&gt;
      &lt;td&gt;110     MADISON ST.  NY 10002&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;65055.0&lt;/td&gt;
      &lt;td&gt;3235.0&lt;/td&gt;
      &lt;td&gt;25164.0&lt;/td&gt;
      &lt;td&gt;91.0&lt;/td&gt;
      &lt;td&gt;91.0&lt;/td&gt;
      &lt;td&gt;2786.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1021080039&lt;/th&gt;
      &lt;td&gt;515 EDGECOMBE OWNERS CP&lt;/td&gt;
      &lt;td&gt;343     SAINT NICHOLAS AVE.  NY&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;1720000.0&lt;/td&gt;
      &lt;td&gt;81248.0&lt;/td&gt;
      &lt;td&gt;632035.0&lt;/td&gt;
      &lt;td&gt;79738.0&lt;/td&gt;
      &lt;td&gt;64497.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3048900015&lt;/th&gt;
      &lt;td&gt;LEESEAP REID&lt;/td&gt;
      &lt;td&gt;270   E.  37TH ST.  NY 11203&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;360000.0&lt;/td&gt;
      &lt;td&gt;3902.0&lt;/td&gt;
      &lt;td&gt;20366.0&lt;/td&gt;
      &lt;td&gt;3600.0&lt;/td&gt;
      &lt;td&gt;3600.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3067961005&lt;/th&gt;
      &lt;td&gt;WHITMAN PUISANG CHOI&lt;/td&gt;
      &lt;td&gt;1720   E.  14TH ST.  NY 11229&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;58500.0&lt;/td&gt;
      &lt;td&gt;2906.0&lt;/td&gt;
      &lt;td&gt;22604.0&lt;/td&gt;
      &lt;td&gt;2604.0&lt;/td&gt;
      &lt;td&gt;2604.0&lt;/td&gt;
      &lt;td&gt;250.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3033440152&lt;/th&gt;
      &lt;td&gt;RODRIGUEZ, LORENZO&lt;/td&gt;
      &lt;td&gt;305     PALMETTO ST.  NY 11237&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;540000.0&lt;/td&gt;
      &lt;td&gt;4485.0&lt;/td&gt;
      &lt;td&gt;23414.0&lt;/td&gt;
      &lt;td&gt;2329.0&lt;/td&gt;
      &lt;td&gt;2329.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4125230072&lt;/th&gt;
      &lt;td&gt;SHARPLIS-ESPRIT, LUCIA&lt;/td&gt;
      &lt;td&gt;17451     128TH AVE.  NY 11434&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;433000.0&lt;/td&gt;
      &lt;td&gt;4736.0&lt;/td&gt;
      &lt;td&gt;24720.0&lt;/td&gt;
      &lt;td&gt;4736.0&lt;/td&gt;
      &lt;td&gt;4736.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4032410055&lt;/th&gt;
      &lt;td&gt;VAY MIN HOM&lt;/td&gt;
      &lt;td&gt;7107     NANSEN ST.  NY 11375&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;648000.0&lt;/td&gt;
      &lt;td&gt;4871.0&lt;/td&gt;
      &lt;td&gt;25428.0&lt;/td&gt;
      &lt;td&gt;1814.0&lt;/td&gt;
      &lt;td&gt;1814.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1001421296&lt;/th&gt;
      &lt;td&gt;MARLINCA PROPERTIES LIMITED&lt;/td&gt;
      &lt;td&gt;200     CHAMBERS ST.  NY&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;169209.0&lt;/td&gt;
      &lt;td&gt;9515.0&lt;/td&gt;
      &lt;td&gt;74015.0&lt;/td&gt;
      &lt;td&gt;6142.0&lt;/td&gt;
      &lt;td&gt;6142.0&lt;/td&gt;
      &lt;td&gt;1629.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2039443852&lt;/th&gt;
      &lt;td&gt;FERNANDES, DANIELLE LOFF&lt;/td&gt;
      &lt;td&gt;1641     METROPOLITAN AVE.  NY&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;55677.0&lt;/td&gt;
      &lt;td&gt;2714.0&lt;/td&gt;
      &lt;td&gt;21110.0&lt;/td&gt;
      &lt;td&gt;1024.0&lt;/td&gt;
      &lt;td&gt;119.0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2047370021&lt;/th&gt;
      &lt;td&gt;CHARLES ALLEN&lt;/td&gt;
      &lt;td&gt;3339     FENTON AVE.  NY 10469&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;389000.0&lt;/td&gt;
      &lt;td&gt;4471.0&lt;/td&gt;
      &lt;td&gt;23340.0&lt;/td&gt;
      &lt;td&gt;4169.0&lt;/td&gt;
      &lt;td&gt;4169.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4122740011&lt;/th&gt;
      &lt;td&gt;EARL MERCURIUS&lt;/td&gt;
      &lt;td&gt;16107     137TH AVE.  NY 11434&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;582000.0&lt;/td&gt;
      &lt;td&gt;5909.0&lt;/td&gt;
      &lt;td&gt;30846.0&lt;/td&gt;
      &lt;td&gt;5607.0&lt;/td&gt;
      &lt;td&gt;5607.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4011690008&lt;/th&gt;
      &lt;td&gt;JANILY LEE TRUST&lt;/td&gt;
      &lt;td&gt;7316     32ND AVE.  NY 11370&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;594000.0&lt;/td&gt;
      &lt;td&gt;6011.0&lt;/td&gt;
      &lt;td&gt;31380.0&lt;/td&gt;
      &lt;td&gt;5709.0&lt;/td&gt;
      &lt;td&gt;5709.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4068970003&lt;/th&gt;
      &lt;td&gt;TSANG, WINNIE&lt;/td&gt;
      &lt;td&gt;16915     65TH AVE.  NY 11365&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;708000.0&lt;/td&gt;
      &lt;td&gt;6781.0&lt;/td&gt;
      &lt;td&gt;35395.0&lt;/td&gt;
      &lt;td&gt;6479.0&lt;/td&gt;
      &lt;td&gt;6479.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2039090001&lt;/th&gt;
      &lt;td&gt;PMC LLC&lt;/td&gt;
      &lt;td&gt;320     WEST ST.  NY 10528&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;527000.0&lt;/td&gt;
      &lt;td&gt;24251.0&lt;/td&gt;
      &lt;td&gt;226980.0&lt;/td&gt;
      &lt;td&gt;5433.0&lt;/td&gt;
      &lt;td&gt;5433.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3082850069&lt;/th&gt;
      &lt;td&gt;THOMAS, JULIUS, RUTHY&lt;/td&gt;
      &lt;td&gt;1360   E.  102ND ST.  NY 11236&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;424000.0&lt;/td&gt;
      &lt;td&gt;4874.0&lt;/td&gt;
      &lt;td&gt;25440.0&lt;/td&gt;
      &lt;td&gt;4572.0&lt;/td&gt;
      &lt;td&gt;4572.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3078570043&lt;/th&gt;
      &lt;td&gt;MASSIE, OLYMPHISE&lt;/td&gt;
      &lt;td&gt;1209   E.  59TH ST.  NY 11234&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;316000.0&lt;/td&gt;
      &lt;td&gt;3632.0&lt;/td&gt;
      &lt;td&gt;18960.0&lt;/td&gt;
      &lt;td&gt;1195.0&lt;/td&gt;
      &lt;td&gt;1195.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4150100052&lt;/th&gt;
      &lt;td&gt;145-47 155TH ST. REALTY&lt;/td&gt;
      &lt;td&gt;1392     BEECH ST.  NY 11509&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;590000.0&lt;/td&gt;
      &lt;td&gt;22529.0&lt;/td&gt;
      &lt;td&gt;210870.0&lt;/td&gt;
      &lt;td&gt;5847.0&lt;/td&gt;
      &lt;td&gt;5847.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4082200097&lt;/th&gt;
      &lt;td&gt;RIZO, HERMAN&lt;/td&gt;
      &lt;td&gt;5110     MARATHON PKWY.  NY 11362&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;699000.0&lt;/td&gt;
      &lt;td&gt;6905.0&lt;/td&gt;
      &lt;td&gt;36045.0&lt;/td&gt;
      &lt;td&gt;6603.0&lt;/td&gt;
      &lt;td&gt;6603.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4069860022&lt;/th&gt;
      &lt;td&gt;JEAN WONG&lt;/td&gt;
      &lt;td&gt;7513     167TH ST.  NY 11366&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;584000.0&lt;/td&gt;
      &lt;td&gt;5165.0&lt;/td&gt;
      &lt;td&gt;26960.0&lt;/td&gt;
      &lt;td&gt;5165.0&lt;/td&gt;
      &lt;td&gt;5165.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4023720143&lt;/th&gt;
      &lt;td&gt;ROSE ALGOZINI&lt;/td&gt;
      &lt;td&gt;5315     62ND ST.  NY 11378&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;549000.0&lt;/td&gt;
      &lt;td&gt;5323.0&lt;/td&gt;
      &lt;td&gt;27786.0&lt;/td&gt;
      &lt;td&gt;5323.0&lt;/td&gt;
      &lt;td&gt;5323.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4090470017&lt;/th&gt;
      &lt;td&gt;KHAIR, SIKDAR M.&lt;/td&gt;
      &lt;td&gt;9722     76TH ST.  NY 11416&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;503000.0&lt;/td&gt;
      &lt;td&gt;4559.0&lt;/td&gt;
      &lt;td&gt;23797.0&lt;/td&gt;
      &lt;td&gt;4559.0&lt;/td&gt;
      &lt;td&gt;4559.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;104 rows × 11 columns&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Now these look good.  However, geocoding all of them with &lt;code&gt;geopy&lt;/code&gt; will prove impossible. Not only will it take until sometime next year to complete because of rate limiting, but you will find that geocoding services like to charge a fee for their services beyond a certain number of records. In awhile we&amp;rsquo;ll show you how to load your own geocoder and use it.&lt;/p&gt;

&lt;p&gt;For now, we&amp;rsquo;ll take a subset.  Some services rate limit you to one call a second.  To avoid taking forever, we&amp;rsquo;ll just use a few records at first.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# grab a random sample of records
tax_bills_bbls_sample = geocodable_tax_bills_june15_bbls.sample(n=15)

# grab the same records from the key-linked dataframe.
tax_bills_exab_sample = tax_bills_june15_exab.ix[tax_bills_bbls_sample.index]
tax_bills_bbls_sample
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;output-5&#34;&gt;Output&lt;/h5&gt;

&lt;div style=&#34;max-width: 100%; max-height: 300px; overflow: auto; font-family: &#39;Inconsolata&#39;, monospace; font-size: 10pt; line-height: 1.0em&#34;&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ownername&lt;/th&gt;
      &lt;th&gt;address&lt;/th&gt;
      &lt;th&gt;taxclass&lt;/th&gt;
      &lt;th&gt;taxrate&lt;/th&gt;
      &lt;th&gt;emv&lt;/th&gt;
      &lt;th&gt;tbea&lt;/th&gt;
      &lt;th&gt;bav&lt;/th&gt;
      &lt;th&gt;tba&lt;/th&gt;
      &lt;th&gt;propertytax&lt;/th&gt;
      &lt;th&gt;condonumber&lt;/th&gt;
      &lt;th&gt;condo&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;bbl&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;4006480018&lt;/th&gt;
      &lt;td&gt;RABOS, CONSTANTINE&lt;/td&gt;
      &lt;td&gt;3157  35TH ST. NY 11106&lt;/td&gt;
      &lt;td&gt;2a - 4-6 unit residential building&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;818000.0&lt;/td&gt;
      &lt;td&gt;12720.0&lt;/td&gt;
      &lt;td&gt;98946.0&lt;/td&gt;
      &lt;td&gt;12720.0&lt;/td&gt;
      &lt;td&gt;12720.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4134860062&lt;/th&gt;
      &lt;td&gt;WILSON, MARJORIE&lt;/td&gt;
      &lt;td&gt;14536  230TH ST. NY 11413&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;494000.0&lt;/td&gt;
      &lt;td&gt;5020.0&lt;/td&gt;
      &lt;td&gt;26203.0&lt;/td&gt;
      &lt;td&gt;4718.0&lt;/td&gt;
      &lt;td&gt;4718.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4081360040&lt;/th&gt;
      &lt;td&gt;DENNIS DELORENZO&lt;/td&gt;
      &lt;td&gt;4132  WESTMORELAND ST. NY 11363&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;1350000.0&lt;/td&gt;
      &lt;td&gt;9973.0&lt;/td&gt;
      &lt;td&gt;52058.0&lt;/td&gt;
      &lt;td&gt;9671.0&lt;/td&gt;
      &lt;td&gt;9671.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3042680035&lt;/th&gt;
      &lt;td&gt;JAMES OXLEY FAMILY IRREVOCABLE TRUST&lt;/td&gt;
      &lt;td&gt;664  HEMLOCK ST. NY 11208&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;440000.0&lt;/td&gt;
      &lt;td&gt;4735.0&lt;/td&gt;
      &lt;td&gt;24715.0&lt;/td&gt;
      &lt;td&gt;4433.0&lt;/td&gt;
      &lt;td&gt;4433.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3053990052&lt;/th&gt;
      &lt;td&gt;MELVIN BRICKMAN&lt;/td&gt;
      &lt;td&gt;507  F.  NY 11218&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;929000.0&lt;/td&gt;
      &lt;td&gt;7885.0&lt;/td&gt;
      &lt;td&gt;41158.0&lt;/td&gt;
      &lt;td&gt;7583.0&lt;/td&gt;
      &lt;td&gt;7583.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3001070024&lt;/th&gt;
      &lt;td&gt;PARKS AND RECREATION (GENERAL)&lt;/td&gt;
      &lt;td&gt;16 61ST ST. New York NY&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;182000.0&lt;/td&gt;
      &lt;td&gt;8471.0&lt;/td&gt;
      &lt;td&gt;79290.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3073330067&lt;/th&gt;
      &lt;td&gt;FRANKIE KAFAI LAU&lt;/td&gt;
      &lt;td&gt;2053 E. 28TH ST. NY 11229&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;408000.0&lt;/td&gt;
      &lt;td&gt;4690.0&lt;/td&gt;
      &lt;td&gt;24480.0&lt;/td&gt;
      &lt;td&gt;4388.0&lt;/td&gt;
      &lt;td&gt;4388.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4104270034&lt;/th&gt;
      &lt;td&gt;PATRICK, GLORIA&lt;/td&gt;
      &lt;td&gt;18833  KEESEVILLE AVE. NY 11412&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;450000.0&lt;/td&gt;
      &lt;td&gt;3761.0&lt;/td&gt;
      &lt;td&gt;19634.0&lt;/td&gt;
      &lt;td&gt;3459.0&lt;/td&gt;
      &lt;td&gt;3459.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1006440063&lt;/th&gt;
      &lt;td&gt;FAIRFAX &amp;amp; SAMMONS PROPERTIES, LLC&lt;/td&gt;
      &lt;td&gt;67  GANSEVOORT ST. NY 10014&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;4157000.0&lt;/td&gt;
      &lt;td&gt;157150.0&lt;/td&gt;
      &lt;td&gt;1470890.0&lt;/td&gt;
      &lt;td&gt;157150.0&lt;/td&gt;
      &lt;td&gt;157150.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4082470008&lt;/th&gt;
      &lt;td&gt;ALICE PONEROS&lt;/td&gt;
      &lt;td&gt;25123  THEBES AVE. NY 11362&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;841000.0&lt;/td&gt;
      &lt;td&gt;7523.0&lt;/td&gt;
      &lt;td&gt;39269.0&lt;/td&gt;
      &lt;td&gt;6902.0&lt;/td&gt;
      &lt;td&gt;6902.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4157090005&lt;/th&gt;
      &lt;td&gt;GRETEL JOSEPH&lt;/td&gt;
      &lt;td&gt;2210  LORETTA RD. NY 11691&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;371000.0&lt;/td&gt;
      &lt;td&gt;4264.0&lt;/td&gt;
      &lt;td&gt;22260.0&lt;/td&gt;
      &lt;td&gt;3962.0&lt;/td&gt;
      &lt;td&gt;3962.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1008701214&lt;/th&gt;
      &lt;td&gt;CHEN, ADRIAN&lt;/td&gt;
      &lt;td&gt;1 IRVING PLACE New York NY&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;286232.0&lt;/td&gt;
      &lt;td&gt;13722.0&lt;/td&gt;
      &lt;td&gt;106748.0&lt;/td&gt;
      &lt;td&gt;13722.0&lt;/td&gt;
      &lt;td&gt;13722.0&lt;/td&gt;
      &lt;td&gt;449.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3032750036&lt;/th&gt;
      &lt;td&gt;JANICE GEIGER WATSON&lt;/td&gt;
      &lt;td&gt;96  HIMROD ST. NY 11221&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;588000.0&lt;/td&gt;
      &lt;td&gt;1782.0&lt;/td&gt;
      &lt;td&gt;9304.0&lt;/td&gt;
      &lt;td&gt;1480.0&lt;/td&gt;
      &lt;td&gt;1480.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2033630067&lt;/th&gt;
      &lt;td&gt;ROBERT MAUCH&lt;/td&gt;
      &lt;td&gt;4222  HERKIMER PL. NY 10470&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;457000.0&lt;/td&gt;
      &lt;td&gt;5253.0&lt;/td&gt;
      &lt;td&gt;27420.0&lt;/td&gt;
      &lt;td&gt;4320.0&lt;/td&gt;
      &lt;td&gt;4320.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4114174401&lt;/th&gt;
      &lt;td&gt;GIAQUINTO GINA&lt;/td&gt;
      &lt;td&gt;8710  149TH AVE. NY 11414&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;55425.0&lt;/td&gt;
      &lt;td&gt;3033.0&lt;/td&gt;
      &lt;td&gt;23596.0&lt;/td&gt;
      &lt;td&gt;2731.0&lt;/td&gt;
      &lt;td&gt;1964.0&lt;/td&gt;
      &lt;td&gt;12.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Now a quick sanity check to make sure our addresses work.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(next(iter(tax_bills_bbls_sample[&#39;address&#39;])))
geocoder = Nominatim()
geocoder.geocode(next(iter(tax_bills_bbls_sample[&#39;address&#39;])))
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;output-6&#34;&gt;Output&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;3157  35TH ST. NY 11106
Location(35th Street, Astoria, Queens County, NYC, New York, 11101, United States of America, (40.7628959, -73.9202263, 0.0))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;geocoded_addresses = tax_bills_bbls_sample[&#39;address&#39;].map(lambda addr: geocoder.geocode(addr))
geocoded_addresses
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;output-7&#34;&gt;Output&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;bbl
4006480018    (35th Street, Astoria, Queens County, NYC, New...
4134860062    (230th Street, Laurelton, Queens County, NYC, ...
4081360040    (Westmoreland Street, Douglaston, Queens Count...
3042680035    (664, Hemlock Street, East New York, Kings Cou...
3053990052    (507, Avenue F, Parkville, BK, Kings County, N...
3001070024    (60-16, 61st Street, Fresh Pond, Queens County...
3073330067    (2053, East 28th Street, Sheepshead Bay, BK, K...
4104270034    (Keeseville Avenue, Saint Albans, Queens Count...
1006440063    (67, Gansevoort Street, Chelsea, Manhattan, Ne...
4082470008    (Thebes Avenue, Little Neck, Queens County, NY...
4157090005    (Loretta Road, Roy Reuther Houses, Far Rockawa...
1008701214    (72 1/2, Irving Place, Flatiron, Manhattan, Ne...
3032750036    (96, Himrod Street, Bushwick, Kings County, NY...
2033630067    (4222, Herkimer Place, Woodlawn, Bronx, Bronx ...
4114174401    (149th Avenue, Ozone Park, Kings, NYC, New Yor...
Name: address, dtype: object
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we have some geocoded addresses! We got lucky here, but in a larger sample, some will be &lt;code&gt;None&lt;/code&gt;. A &lt;code&gt;.dropna()&lt;/code&gt; or filter should suffice to get rid of null values. Each location will have a bunch of fields, but the most useful are the canonical address, longitude, and latitude:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;loc = next(iter(geocoded_addresses))  # let&#39;s inspect the first one.
print((loc.address, (loc.longitude, loc.latitude)))
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;output-8&#34;&gt;Output&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;(&#39;35th Street, Astoria, Queens County, NYC, New York, 11101, United States of America&#39;, (-73.9202263, 40.7628959))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now the only thing left is to add Series for these to our sample.  I like to canonicalize the address, too, although you may want to rename the original address field to &lt;code&gt;original_address&lt;/code&gt; or some such:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;tax_bills_bbls_sample[&#39;address&#39;] = geocoded_addresses.map(lambda l: l.address)
tax_bills_bbls_sample[&#39;latitude&#39;] = geocoded_addresses.map(lambda l: l.latitude)
tax_bills_bbls_sample[&#39;longitude&#39;] = geocoded_addresses.map(lambda l: l.longitude)
tax_bills_bbls_sample
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;output-9&#34;&gt;Output&lt;/h5&gt;

&lt;div style=&#34;max-width: 100%; max-height: 300px; overflow: auto; font-family: &#39;Inconsolata&#39;, monospace; font-size: 10pt; line-height: 1.0em&#34;&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;ownername&lt;/th&gt;
      &lt;th&gt;address&lt;/th&gt;
      &lt;th&gt;taxclass&lt;/th&gt;
      &lt;th&gt;taxrate&lt;/th&gt;
      &lt;th&gt;emv&lt;/th&gt;
      &lt;th&gt;tbea&lt;/th&gt;
      &lt;th&gt;bav&lt;/th&gt;
      &lt;th&gt;tba&lt;/th&gt;
      &lt;th&gt;propertytax&lt;/th&gt;
      &lt;th&gt;condonumber&lt;/th&gt;
      &lt;th&gt;condo&lt;/th&gt;
      &lt;th&gt;latitude&lt;/th&gt;
      &lt;th&gt;longitude&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;bbl&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;4006480018&lt;/th&gt;
      &lt;td&gt;RABOS, CONSTANTINE&lt;/td&gt;
      &lt;td&gt;35th Street, Astoria, Queens County, NYC, New ...&lt;/td&gt;
      &lt;td&gt;2a - 4-6 unit residential building&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;818000.0&lt;/td&gt;
      &lt;td&gt;12720.0&lt;/td&gt;
      &lt;td&gt;98946.0&lt;/td&gt;
      &lt;td&gt;12720.0&lt;/td&gt;
      &lt;td&gt;12720.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.762896&lt;/td&gt;
      &lt;td&gt;-73.920226&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4134860062&lt;/th&gt;
      &lt;td&gt;WILSON, MARJORIE&lt;/td&gt;
      &lt;td&gt;230th Street, Laurelton, Queens County, NYC, N...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;494000.0&lt;/td&gt;
      &lt;td&gt;5020.0&lt;/td&gt;
      &lt;td&gt;26203.0&lt;/td&gt;
      &lt;td&gt;4718.0&lt;/td&gt;
      &lt;td&gt;4718.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.659682&lt;/td&gt;
      &lt;td&gt;-73.750916&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4081360040&lt;/th&gt;
      &lt;td&gt;DENNIS DELORENZO&lt;/td&gt;
      &lt;td&gt;Westmoreland Street, Douglaston, Queens County...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;1350000.0&lt;/td&gt;
      &lt;td&gt;9973.0&lt;/td&gt;
      &lt;td&gt;52058.0&lt;/td&gt;
      &lt;td&gt;9671.0&lt;/td&gt;
      &lt;td&gt;9671.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.772826&lt;/td&gt;
      &lt;td&gt;-73.738065&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3042680035&lt;/th&gt;
      &lt;td&gt;JAMES OXLEY FAMILY IRREVOCABLE TRUST&lt;/td&gt;
      &lt;td&gt;664, Hemlock Street, East New York, Kings Coun...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;440000.0&lt;/td&gt;
      &lt;td&gt;4735.0&lt;/td&gt;
      &lt;td&gt;24715.0&lt;/td&gt;
      &lt;td&gt;4433.0&lt;/td&gt;
      &lt;td&gt;4433.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.672613&lt;/td&gt;
      &lt;td&gt;-73.868584&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3053990052&lt;/th&gt;
      &lt;td&gt;MELVIN BRICKMAN&lt;/td&gt;
      &lt;td&gt;507, Avenue F, Parkville, BK, Kings County, NY...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;929000.0&lt;/td&gt;
      &lt;td&gt;7885.0&lt;/td&gt;
      &lt;td&gt;41158.0&lt;/td&gt;
      &lt;td&gt;7583.0&lt;/td&gt;
      &lt;td&gt;7583.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.633838&lt;/td&gt;
      &lt;td&gt;-73.973400&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3001070024&lt;/th&gt;
      &lt;td&gt;PARKS AND RECREATION (GENERAL)&lt;/td&gt;
      &lt;td&gt;60-16, 61st Street, Fresh Pond, Queens County,...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;182000.0&lt;/td&gt;
      &lt;td&gt;8471.0&lt;/td&gt;
      &lt;td&gt;79290.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.714971&lt;/td&gt;
      &lt;td&gt;-73.902534&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3073330067&lt;/th&gt;
      &lt;td&gt;FRANKIE KAFAI LAU&lt;/td&gt;
      &lt;td&gt;2053, East 28th Street, Sheepshead Bay, BK, Ki...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;408000.0&lt;/td&gt;
      &lt;td&gt;4690.0&lt;/td&gt;
      &lt;td&gt;24480.0&lt;/td&gt;
      &lt;td&gt;4388.0&lt;/td&gt;
      &lt;td&gt;4388.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.601201&lt;/td&gt;
      &lt;td&gt;-73.943775&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4104270034&lt;/th&gt;
      &lt;td&gt;PATRICK, GLORIA&lt;/td&gt;
      &lt;td&gt;Keeseville Avenue, Saint Albans, Queens County...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;450000.0&lt;/td&gt;
      &lt;td&gt;3761.0&lt;/td&gt;
      &lt;td&gt;19634.0&lt;/td&gt;
      &lt;td&gt;3459.0&lt;/td&gt;
      &lt;td&gt;3459.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.698718&lt;/td&gt;
      &lt;td&gt;-73.766175&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1006440063&lt;/th&gt;
      &lt;td&gt;FAIRFAX &amp;amp; SAMMONS PROPERTIES, LLC&lt;/td&gt;
      &lt;td&gt;67, Gansevoort Street, Chelsea, Manhattan, New...&lt;/td&gt;
      &lt;td&gt;4 - commercial property&lt;/td&gt;
      &lt;td&gt;10.6840%&lt;/td&gt;
      &lt;td&gt;4157000.0&lt;/td&gt;
      &lt;td&gt;157150.0&lt;/td&gt;
      &lt;td&gt;1470890.0&lt;/td&gt;
      &lt;td&gt;157150.0&lt;/td&gt;
      &lt;td&gt;157150.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.739595&lt;/td&gt;
      &lt;td&gt;-74.007467&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4082470008&lt;/th&gt;
      &lt;td&gt;ALICE PONEROS&lt;/td&gt;
      &lt;td&gt;Thebes Avenue, Little Neck, Queens County, NYC...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;841000.0&lt;/td&gt;
      &lt;td&gt;7523.0&lt;/td&gt;
      &lt;td&gt;39269.0&lt;/td&gt;
      &lt;td&gt;6902.0&lt;/td&gt;
      &lt;td&gt;6902.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.766735&lt;/td&gt;
      &lt;td&gt;-73.734254&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4157090005&lt;/th&gt;
      &lt;td&gt;GRETEL JOSEPH&lt;/td&gt;
      &lt;td&gt;Loretta Road, Roy Reuther Houses, Far Rockaway...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;371000.0&lt;/td&gt;
      &lt;td&gt;4264.0&lt;/td&gt;
      &lt;td&gt;22260.0&lt;/td&gt;
      &lt;td&gt;3962.0&lt;/td&gt;
      &lt;td&gt;3962.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.603080&lt;/td&gt;
      &lt;td&gt;-73.756490&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1008701214&lt;/th&gt;
      &lt;td&gt;CHEN, ADRIAN&lt;/td&gt;
      &lt;td&gt;72 1/2, Irving Place, Flatiron, Manhattan, New...&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;286232.0&lt;/td&gt;
      &lt;td&gt;13722.0&lt;/td&gt;
      &lt;td&gt;106748.0&lt;/td&gt;
      &lt;td&gt;13722.0&lt;/td&gt;
      &lt;td&gt;13722.0&lt;/td&gt;
      &lt;td&gt;449.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
      &lt;td&gt;40.736727&lt;/td&gt;
      &lt;td&gt;-73.986599&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3032750036&lt;/th&gt;
      &lt;td&gt;JANICE GEIGER WATSON&lt;/td&gt;
      &lt;td&gt;96, Himrod Street, Bushwick, Kings County, NYC...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;588000.0&lt;/td&gt;
      &lt;td&gt;1782.0&lt;/td&gt;
      &lt;td&gt;9304.0&lt;/td&gt;
      &lt;td&gt;1480.0&lt;/td&gt;
      &lt;td&gt;1480.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.696093&lt;/td&gt;
      &lt;td&gt;-73.923497&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2033630067&lt;/th&gt;
      &lt;td&gt;ROBERT MAUCH&lt;/td&gt;
      &lt;td&gt;4222, Herkimer Place, Woodlawn, Bronx, Bronx C...&lt;/td&gt;
      &lt;td&gt;1 - small home, less than 4 families&lt;/td&gt;
      &lt;td&gt;19.1570%&lt;/td&gt;
      &lt;td&gt;457000.0&lt;/td&gt;
      &lt;td&gt;5253.0&lt;/td&gt;
      &lt;td&gt;27420.0&lt;/td&gt;
      &lt;td&gt;4320.0&lt;/td&gt;
      &lt;td&gt;4320.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;40.896346&lt;/td&gt;
      &lt;td&gt;-73.875535&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4114174401&lt;/th&gt;
      &lt;td&gt;GIAQUINTO GINA&lt;/td&gt;
      &lt;td&gt;149th Avenue, Ozone Park, Kings, NYC, New York...&lt;/td&gt;
      &lt;td&gt;2 - residential, more than 10 units&lt;/td&gt;
      &lt;td&gt;12.8550%&lt;/td&gt;
      &lt;td&gt;55425.0&lt;/td&gt;
      &lt;td&gt;3033.0&lt;/td&gt;
      &lt;td&gt;23596.0&lt;/td&gt;
      &lt;td&gt;2731.0&lt;/td&gt;
      &lt;td&gt;1964.0&lt;/td&gt;
      &lt;td&gt;12.0&lt;/td&gt;
      &lt;td&gt;unit&lt;/td&gt;
      &lt;td&gt;40.668572&lt;/td&gt;
      &lt;td&gt;-73.856841&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;THe last thing is to write this out to file and push the resulting file to git.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;features = []
import json
for i, row in tax_bills_bbls_sample.iterrows():
    feature = {
        &amp;quot;type&amp;quot;: &amp;quot;Feature&amp;quot;,
        &amp;quot;geometry&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;Point&amp;quot;, &amp;quot;coordinates&amp;quot;: [row[&#39;longitude&#39;], row[&#39;latitude&#39;]]},
        &amp;quot;properties&amp;quot;: {}
    }
    for key, value in row.items():
        if not pd.isnull(value):
            feature[&#39;properties&#39;][key] = value
    features.append(feature)

with open(&#39;SampleFeatures.geojson&#39;, &#39;w&#39;) as output:
    json.dump({&amp;quot;type&amp;quot;: &amp;quot;FeatureCollection&amp;quot;, &amp;quot;features&amp;quot;: features}, output, indent=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And now assuming you have a new repository on GitHub, the push:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sh
$ git add .
$ git commit -m &#39;initial commit&#39;
$ git remote add origin https://github.com/jeffersonheard/DataSciBlogGeoJsonSample.git
$ git push origin master
&lt;/code&gt;`&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Being a Data Scientist: My Experience and Toolset</title>
      <link>https://jeffersonheard.github.io/2017/01/being-a-data-scientist-my-experience-and-toolset/</link>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2017/01/being-a-data-scientist-my-experience-and-toolset/</guid>
      <description>

&lt;p&gt;If I had to use a few words to give myself a title for my position at UNC, I might not have said I was a data scientist. When I was starting my career there was no such thing, but looking at my CV / Resume, I have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Worked at a billion dollar company, writing the integration process that pushed 40+ large datasets through complex models and analytics to produce one large modeled data product.&lt;/li&gt;
&lt;li&gt;Done graduate work in text mining and data mining.&lt;/li&gt;
&lt;li&gt;Wrote a innovative search engine from scratch and worked to commercialize it with two professors (it was their patent, but I was the programmer in the end).&lt;/li&gt;
&lt;li&gt;Worked at UNC, Duke, and NC State University through &lt;a href=&#34;http://www.renci.org&#34;&gt;Renci&lt;/a&gt; doing data mining, cartography, and interactive and static information visualization for various domain scientists.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have done dozens of projects, and apparently I&amp;rsquo;ve amassed a fair bit of knowledge along the way that in some ways I have totally missed. Sometimes I answer a question and I think, &amp;ldquo;How did I know that, anyway?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Well, yesterday I started mentoring at &lt;a href=&#34;https://thinkful.com&#34;&gt;Thinkful&lt;/a&gt; in their &lt;a href=&#34;https://www.thinkful.com/bootcamp/data-science/flexible/&#34;&gt;Flexible Data Science Bootcamp&lt;/a&gt;, and I have to say that I love it already.  I like their approach, because it blends 1-on-1 time with remote learning and goes out of its way to support its mentors in being good educators and not just experts.&lt;/p&gt;

&lt;p&gt;But as I dig through my data science know-how I want to share it with more than just one student at a time, so this is the first in a series of posts about what it&amp;rsquo;s like to be a data scientist, or more accurately perhaps what &lt;em&gt;I&lt;/em&gt; did as a data scientist and how that might relate to a new person doing data science in the field.&lt;/p&gt;

&lt;p&gt;Some of it will include direct examples of doing data science projects in Python, and some of it will be more about the tools of the trade and how to work with open source tools to do data science. And some posts, like this one, will be more about &amp;ldquo;life as a data scientist,&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;what-i-did-as-a-data-scientist-at-renci&#34;&gt;What I did as a Data Scientist at Renci&lt;/h2&gt;

&lt;p&gt;I would say that most of what I did at Renci fell into two camps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Take a set of requirements from a domain scientist and work, typically from an experimental methods section (published or in progress) and translate that into code.&lt;/li&gt;
&lt;li&gt;Develop systems for collaboration, dataset sharing, and access to HPC resources for research groups of &lt;strong&gt;domain scientists&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;what-s-a-domain-scientist&#34;&gt;What&amp;rsquo;s a Domain Scientist?&lt;/h3&gt;

&lt;p&gt;When I think of a domain scientist, or a domain &lt;em&gt;expert&lt;/em&gt; I typically think of someone outside general computer science, who may know something about programming, but need not, but has a question they&amp;rsquo;re trying to answer, a requirement they need to fulfill, or a body of work that they add to over time. They typically require scientific methods or knowledge of the science of information classification, accessibility, and archiving (think librarians). These include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Academic scientists at research institutions doing basic or applied research in any of the sciences: biology, medicine, public health, psychology, chemistry, physics, and so on.&lt;/li&gt;
&lt;li&gt;Journalists who deal with polls, data, infographics, or who are science journalists who have to read, understand, and &lt;em&gt;fact-check&lt;/em&gt; the articles they published.&lt;/li&gt;
&lt;li&gt;Corporate or independent consulting scientists of all flavors from geologists working in minerals to pharmacologists to compliance organizations like UL and Rand Corporation.&lt;/li&gt;
&lt;li&gt;Nonprofit and NGOs like the World Bank employ scientists to rigorously analyze the effectiveness of their programs.&lt;/li&gt;
&lt;li&gt;Scientists working at government labs or consortiums (like NIST or the FDA) on standards, testing, and auditing procedures.&lt;/li&gt;
&lt;li&gt;Historians, librarians, and archivists concerned with preserving aging documents, bodies of records, and providing sound systems for accessing, referencing, and searching these records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Any of these domain scientists can also be &lt;em&gt;data scientists&lt;/em&gt;, but they are different hats to wear and data science distinctly requires a focus on computation and algorithms.&lt;/p&gt;

&lt;h2 id=&#34;when-does-a-domain-scientist-need-a-data-scientist&#34;&gt;When does a Domain Scientist need a Data Scientist?&lt;/h2&gt;

&lt;h3 id=&#34;outgrowing-excel&#34;&gt;Outgrowing Excel.&lt;/h3&gt;

&lt;p&gt;After you reach 100,000 rows, or when you have sheets with &amp;ldquo;lookup keys&amp;rdquo;, pivot tables, and formulae that rely on hidden sheets, you have likely outgrown Excel.  It&amp;rsquo;s not that Excel can&amp;rsquo;t handle it (although there &lt;em&gt;is&lt;/em&gt; a practical row limit). It&amp;rsquo;s that Excel sheets have a tendency to turn into &lt;em&gt;spaghetti code&lt;/em&gt; for a variety of reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Visual presentation trumps &amp;ldquo;source&amp;rdquo; and it&amp;rsquo;s often hard to find formulae and harder even to see what cells are being referenced by a formula.&lt;/li&gt;
&lt;li&gt;Adding a variable or sometimes a column or a row can cause you to need to update multiple cells on multiple sheets to make all the calculations come out right, which is error prone.&lt;/li&gt;
&lt;li&gt;You get in the situation where &amp;ldquo;it works, but I no longer know &lt;em&gt;why&lt;/em&gt; it works&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Plugging in different data is not simple.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;performance-on-large-or-unusual-datasets&#34;&gt;Performance on Large or Unusual Datasets.&lt;/h3&gt;

&lt;p&gt;&amp;ldquo;Big Data&amp;rdquo; means something different to everyone, but generally it is unmanageable or hard to run your models on because running the model takes too long. When this happens, someone with an expertise in coding and data science can rewrite a scientist&amp;rsquo;s model so that they can manage data separately from managing the model, and so that they can run their model efficiently on appropriate hardware.&lt;/p&gt;

&lt;h3 id=&#34;cleaning-and-data-preparation&#34;&gt;Cleaning and Data Preparation.&lt;/h3&gt;

&lt;p&gt;There is a heirarchy we often talked about in information and knowledge management. Information &amp;lt; Data &amp;lt; Knowledge. Within that hierarchy are levels. Scanned paper documents. OCR-ed documents. Spreadsheets with commentary littered all over them and inconsistent representations of what&amp;rsquo;s &amp;ldquo;missing.&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;creating-algorithms-from-methods&#34;&gt;Creating Algorithms from Methods.&lt;/h3&gt;

&lt;p&gt;Most often domain scientists simply aren&amp;rsquo;t computer people. In this case, a data scientist works directly with the domain scientist, walking through their research methods with them and gathering the specifics that can turn their ideas into code.&lt;/p&gt;

&lt;h3 id=&#34;visualization-especially-geographic-and-interactive&#34;&gt;Visualization, especially Geographic and Interactive.&lt;/h3&gt;

&lt;p&gt;Visualization requires a specialized skillset that most scientists, even the coders, don&amp;rsquo;t have. Visualization tools available to the domain scientist often produce &amp;ldquo;rough drafts&amp;rdquo; of graphics, and are limited to &amp;ldquo;canned&amp;rdquo; representations that require customization to represent data effectively. Visualization is - to some extent - an art, but there are scientific principles as well that the data scientist will learn that help them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Produce fair, unbiased visual representations of data.&lt;/li&gt;
&lt;li&gt;Show the most relevant correlations for the problem at hand.&lt;/li&gt;
&lt;li&gt;Produce visual representations that reproduce in different media effectively.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Spatial (geographic) representations are even more specialized, as map projections, layering, and reproduction issues make producing effective maps its own subfield of visualization.&lt;/p&gt;

&lt;h3 id=&#34;machine-learning-data-mining&#34;&gt;Machine Learning &amp;amp; Data Mining&lt;/h3&gt;

&lt;p&gt;Machine learning, text mining, and data mining are their own separate fields of study. They are part of &amp;ldquo;data science,&amp;rdquo; but require a significant amount of specialization. Machine learning refers to different methods of having a machine develop its own algorithm for categorizing or classifying elements of a dataset. Machine learning and data mining are not well distinguished, but machine learning techniques increasingly favor &amp;ldquo;unsupervised&amp;rdquo; learning algorithms.&lt;/p&gt;

&lt;h3 id=&#34;sharing-collaboration-and-information-and-knowledge-management&#34;&gt;Sharing, Collaboration, and Information and Knowledge Management&lt;/h3&gt;

&lt;p&gt;Like machine learning and data mining, I mentally separate this task because it requires a different skillset, and typically you&amp;rsquo;re working with a team or a professional organization.  Skills the data scientist uses here tend to fall into the &amp;ldquo;library sciences.&amp;rdquo; Building or setting up an effective system for sharing and knowledge management means:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Building an online, generally web-based system. Often the backbone of this is a CMS, but it will be heavily customized.&lt;/li&gt;
&lt;li&gt;Making common domain-dependent data transforms available online.&lt;/li&gt;
&lt;li&gt;Enabling indexing, search, and selection (and not naïve implementations - most sciences have their own cataloging systems you need to respect).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ebiquity.umbc.edu/blogger/2008/05/28/provenance-tracking-in-science-data-processing-systems/&#34;&gt;Keeping track of provenançe information&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Version management.&lt;/li&gt;
&lt;li&gt;Authentication and authorization.&lt;/li&gt;
&lt;li&gt;Distinguishing content types.&lt;/li&gt;
&lt;li&gt;Integration with existing sharing systems, including legacy systems, Dropbox, and Google Drive.&lt;/li&gt;
&lt;li&gt;Effective presentation of data.&lt;/li&gt;
&lt;li&gt;Data storage at scale.&lt;/li&gt;
&lt;li&gt;API Access&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data-science-tools&#34;&gt;Data Science Tools&lt;/h2&gt;

&lt;p&gt;This is not meant to be exhaustive &lt;em&gt;at all&lt;/em&gt;. It is just a sampling of the tools that are out there, and to some extent a list of tools I have used in the past to get things done. It is in the same general order as the section above. Where possible I have listed Python libraries and standalone tools, but some of the libraries here are in other languages, but they are widely used. I do not cover R at all, because it is its own ecosystem, and there are tens of thousands of packages for R that do everything you want.&lt;/p&gt;

&lt;h5 id=&#34;tools-for-working-with-larger-and-more-complex-excel-like-data&#34;&gt;Tools for working with larger and more complex excel-like data&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://pandas.pydata.org/&#34;&gt;Pandas&lt;/a&gt; - General purpose toolkit for dealing with tabular (Excel like) data for data science tasks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sqlite.org/&#34;&gt;SQLite&lt;/a&gt; - Tabular database format that handles large datasets, but still works on your desktop.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/&#34;&gt;PostgreSQL&lt;/a&gt; - Enterprise-grade database system.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;tools-for-working-with-spatial-geographic-data&#34;&gt;Tools for working with spatial (geographic) data:&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.postgis.net/&#34;&gt;PostGIS&lt;/a&gt; - Geospatial extensions for Postgres&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://carto.com/&#34;&gt;Carto&lt;/a&gt; - Commercial tool for geospatial data mining.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mapbox.com/&#34;&gt;Mapbox&lt;/a&gt; - Commercial cartography and tile-based web map system.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://leafletjs.com/&#34;&gt;Leaflet&lt;/a&gt; - Library for composing interactive web maps from online sources and your own data.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.qgis.org/en/site/forusers/download.html&#34;&gt;qGIS&lt;/a&gt; - Graphical GIS tool for all things geospatial and mapping.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;tools-for-working-with-unusual-datasets&#34;&gt;Tools for working with unusual datasets&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rethinkdb.com/&#34;&gt;RethinkDB&lt;/a&gt; - Database that deals well with realtime streams. In transition from commercial to open source. Take care when using.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt; - Database that handles large amounts of unstructured and semi-structured data. Some caveats when using in production.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://couchdb.apache.org/&#34;&gt;CouchDB&lt;/a&gt; - Similar to, but different than MongoDB.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cassandra.apache.org/&#34;&gt;Cassandra&lt;/a&gt; - Graph and relationship database.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;tools-for-creating-performant-code-with-large-datasets&#34;&gt;Tools for creating performant code with large datasets&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://pandas.pydata.org/&#34;&gt;Pandas&lt;/a&gt; - A note that Pandas is largely backed by performant C code. Translating your algorithm to C for performance reasons when it uses Pandas well is usually not needed.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spark.apache.org/&#34;&gt;Apache Spark&lt;/a&gt; - A general high-performance data processing system&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.scipy.org/&#34;&gt;SciPy and Numpy&lt;/a&gt; - Scriptable, C-based numerical algorithms that operate on compact, machine-level data structures.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cython.org/&#34;&gt;Cython&lt;/a&gt; - Take parts of your Python program and compile them with C for performance.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mathema.tician.de/software/pyopencl/&#34;&gt;PyOpenCL&lt;/a&gt; - Numerical and statistical processing on your graphics card.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that any of the database systems from above also fall into this category.&lt;/p&gt;

&lt;h5 id=&#34;tools-for-cleaning-data&#34;&gt;Tools for cleaning data&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://odo.pydata.org/en/latest/&#34;&gt;ODO&lt;/a&gt; - Python library to transform data between different formats.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://openrefine.org/&#34;&gt;OpenRefine&lt;/a&gt; - Explore and clean data in a graphic user interface&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pandas.pydata.org/&#34;&gt;Pandas&lt;/a&gt; - General purpose Python-based toolkit for dealing with tabular (Excel like) data for data science tasks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scrapy.org/&#34;&gt;Scrapy&lt;/a&gt; - Python library to scrape the web and extract items from web pages&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.crummy.com/software/BeautifulSoup/&#34;&gt;BeautifulSoup&lt;/a&gt; - Same as scrapy, but different.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://scrubadub.readthedocs.io/en/stable/index.html&#34;&gt;Scrubadub&lt;/a&gt; - Remove personally identifiable information&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://crsmithdev.com/arrow/&#34;&gt;Arrow&lt;/a&gt; - Make sense of and manipulate times and dates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rhiever/datacleaner&#34;&gt;DataCleaner&lt;/a&gt; - Python library to impute, drop, and general cleaning of missing and ugly data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/NathanEpstein/Dora&#34;&gt;Dora&lt;/a&gt; - Python library similar to DataCleaner.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;tools-for-visualization&#34;&gt;Tools for Visualization&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://processing.org/&#34;&gt;Processing&lt;/a&gt; - Build interactive visualizations interactively. &lt;a href=&#34;https://www.amazon.com/gp/product/0596514557?ie=UTF8&amp;amp;tag=processing09-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0596514557&#34;&gt;Great O&amp;rsquo;Reilly book, Visualizing Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://d3js.org/&#34;&gt;D3&lt;/a&gt; - Build interactive visualizations on the web&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://c3js.org/&#34;&gt;C3&lt;/a&gt; - Charts from D3.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bokeh.pydata.org/en/latest/&#34;&gt;Bokeh&lt;/a&gt; - Similar to D3, but in Python.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://matplotlib.org/&#34;&gt;matplotlib&lt;/a&gt; - The original Python data visualization toolkit&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://leafletjs.com/&#34;&gt;Leaflet&lt;/a&gt; - Work with web-based maps.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mapbox.com/&#34;&gt;MapBox&lt;/a&gt; - See the section on cartographic tools.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.qgis.org/en/site/forusers/download.html&#34;&gt;qGIS&lt;/a&gt; - See the section on cartographic tools.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vtk.org/&#34;&gt;VTK&lt;/a&gt; - Heavy-duty visualization toolkit often used in the medical, chemical, and physical research spaces.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;some-data-mining-and-ml-tools&#34;&gt;Some data mining and ML tools&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cs.waikato.ac.nz/ml/weka/&#34;&gt;Weka&lt;/a&gt; - There&amp;rsquo;s also an &lt;a href=&#34;http://www.cs.waikato.ac.nz/ml/weka/book.html&#34;&gt;excellent, accessible book&lt;/a&gt; on the Weka ML and Data mining toolkit&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://scikit-learn.org/&#34;&gt;SciKitLearn&lt;/a&gt; - A Python-based suite of ML and data mining tools.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://orange.biolab.si/&#34;&gt;Orange&lt;/a&gt; - Another Python-based suite of data mining tools, also with a GUI.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tensorflow.org/&#34;&gt;TensorFlow&lt;/a&gt; - Multidimensional mathematical modeling with graphs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;tools-for-sharing-collaboration-and-information-and-knowledge-management&#34;&gt;Tools for Sharing, Collaboration, and Information and Knowledge Management&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.djangoproject.com/&#34;&gt;Django&lt;/a&gt; - The ultimate batteries-included Python-based web framework.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.django-rest-framework.org/&#34;&gt;Django REST Framework&lt;/a&gt; - Create REST APIs with Django-based websites.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://irods.org/&#34;&gt;IRODS&lt;/a&gt; - Enterprise-grade data storage and management, including metadata management and rule-based data processing.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cassandra.apache.org/&#34;&gt;Cassandra (useful for metadata and relationship storage)&lt;/a&gt; - Again, I often store and query metadata in Cassandra&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/downloads/&#34;&gt;GitLab&lt;/a&gt; - An open-source alternative to GitHub that you can set up on your own servers.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/recipy/recipy&#34;&gt;ReciPy&lt;/a&gt; - Provenance tracking for Python.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://prov.readthedocs.io/en/latest/&#34;&gt;Prov&lt;/a&gt; - Python implementation of the W3C provenance model&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/logpy/logpy&#34;&gt;Kanren (useful for implementing business logic on metadata and provenance info)&lt;/a&gt; - Logic programming for Python, often useful for rule-based actions and queries on scientific metadata.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Recipes: Chicken (or Turkey) Soup for the Soul and Everything Else</title>
      <link>https://jeffersonheard.github.io/2017/01/recipes-chicken-or-turkey-soup-for-the-soul-and-everything-else/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2017/01/recipes-chicken-or-turkey-soup-for-the-soul-and-everything-else/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve been sick for most of a month. This almost never happens to me. One cold followed by bronchitis, followed by another cold, followed by more bronchitis, but I&amp;rsquo;m finally on the mend. Towards the end of being sick I get bored and antsy before I&amp;rsquo;m well enough to go out, and that&amp;rsquo;s when I make this soup.&lt;/p&gt;

&lt;p&gt;I have perfected my chicken soup over more than a decade of experimentation. Chicken soup is rich, perfectly seasoned broth, just enough fat, tender vegetables, a good proportion of chicken, and (if you like) noodles enough to make it into most bites.&lt;/p&gt;

&lt;p&gt;People who don&amp;rsquo;t cook may not really understand where the &amp;ldquo;richness&amp;rdquo; of a fine broth comes from, nor what &amp;ldquo;bone broth&amp;rdquo; really means. Gelatin, collagen, cholesterols (&lt;a href=&#34;http://articles.mercola.com/sites/articles/archive/2015/03/02/us-guidelines-dietary-cholesterol-limits.aspx&#34;&gt;don&amp;rsquo;t be afraid of of dietary cholesterols anymore, say the AMA!&lt;/a&gt;), and esters released from boiling down the carcass - everything that&amp;rsquo;s not meat - make a smooth broth with depth that is unparalleled in its ability to warm and restore a person from the inside out.&lt;/p&gt;

&lt;p&gt;So my recipe is really about getting the broth perfect and seasoning it well. You can use any vegetables. They don&amp;rsquo;t have to be the freshest in your fridge, even. I would avoid bitter greens in my soup. If you want greens, use kale or baby spinach, as they will not have such a tendency to leach tannins. For a base broth, I use Swanson&amp;rsquo;s Organic Chicken Broth, but you could use any chicken broth that doesn&amp;rsquo;t have added sugar or MSG (not that there&amp;rsquo;s anything wrong with MSG, but there&amp;rsquo;s no need for it since we&amp;rsquo;re bulking the broth up ourselves).&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re in the USA, get an organic chicken; they taste better. In fact, get a free range chicken if you can find it. I&amp;rsquo;m not sure if the flavor&amp;rsquo;s really any better between free range and not; but personally I think it&amp;rsquo;s important to treat the creatures we eat for food with respect and humanity. Regardless of how amusing the first episode of Porlandia is, the truth is that chickens and &lt;a href=&#34;https://www.youtube.com/watch?v=X9wHzt6gBgI&#34;&gt;chicken farmers&lt;/a&gt; are often treated &lt;em&gt;terribly&lt;/em&gt; by the industry, and going to the extra trouble of finding a farmers market, locally raised, or otherwise ethically produced chicken really is important.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is important: start with a whole chicken / turkey&lt;/strong&gt;. Yes, you need the dark meat. But even more importantly, most of the stuff I mentioned earlier that makes the broth rich is &lt;em&gt;not&lt;/em&gt; in the parts you get when you buy a &amp;ldquo;whole turkey breast&amp;rdquo; or &amp;ldquo;whole chicken breast.&amp;rdquo; Legs, thighs, wings, back; these are essential to the finished product.&lt;/p&gt;

&lt;p&gt;This soup freezes wonderfully, but don&amp;rsquo;t add noodles if you intend to freeze it. Depending on the size of your chicken, you may notice that the soup turns to jello in your fridge. This is a sign of a fantastic broth. Turkey broth will almost always do this, I find.&lt;/p&gt;

&lt;p&gt;And yes, this one is involved. There&amp;rsquo;s not much prep-time, but there&amp;rsquo;s a lot of waiting. It&amp;rsquo;s worth every minute you put into it - trust me. This makes 12-18 servings, depending on whether you&amp;rsquo;re using chicken or turkey.&lt;/p&gt;

&lt;h3 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h3&gt;

&lt;h5 id=&#34;meat&#34;&gt;Meat&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;1 whole chicken, raw (&lt;a href=&#34;#notes&#34;&gt;skin removed and set aside&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;liquids&#34;&gt;Liquids&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;8 cups canned or boxed chicken broth (I use Swanson&amp;rsquo;s)&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; cup white wine&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;aromatics&#34;&gt;Aromatics&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;2 bay leaves&lt;/li&gt;
&lt;li&gt;1 stalk lemongrass, outer leaves peeled away.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;vegetables&#34;&gt;Vegetables&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;8 oz fresh mushrooms&lt;/li&gt;
&lt;li&gt;2-3 chopped carrots&lt;/li&gt;
&lt;li&gt;3-4 chopped stalks of celery&lt;/li&gt;
&lt;li&gt;1 chopped white onion&lt;/li&gt;
&lt;li&gt;2-4 minced cloves of garlic&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;spices&#34;&gt;Spices&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;1/2tsp cayenne&lt;/li&gt;
&lt;li&gt;1tbl garlic powder&lt;/li&gt;
&lt;li&gt;1tbl onion powder&lt;/li&gt;
&lt;li&gt;1/2tsp cumin&lt;/li&gt;
&lt;li&gt;1-2tsp coriander&lt;/li&gt;
&lt;li&gt;1tsp dried thyme or 4-5 sprigs fresh&lt;/li&gt;
&lt;li&gt;1tsp white pepper&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;step-1-cook-the-chicken-40-minutes&#34;&gt;Step 1. Cook the chicken. 40 minutes&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;If you are using a chicken&lt;/strong&gt; Skin the chicken. &lt;a href=&#34;#notes&#34;&gt;See the note&lt;/a&gt; about rendering chicken fat and using it in something. Pour the broth into a large stockpot and lower the chicken in. Add water to cover and bring to a boil, then lower the heat and simmer for 30-40 minutes.&lt;/p&gt;

&lt;p&gt;Remove the chicken from the broth and set it in a large bowl. Separate the meat from the bones as best you can.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you are using a turkey.&lt;/strong&gt; Roast the turkey your favorite way (&lt;a href=&#34;http://www.rachaelrayshow.com/food/recipes/19178_cider_soaked_spatchcock_turkey/&#34;&gt;This is mine&lt;/a&gt;). Take the meat off the bones, pour off some of the roasting juices into the broth, and skip to step 2.&lt;/p&gt;

&lt;h4 id=&#34;step-2-enrich-the-broth-60-minutes&#34;&gt;Step 2. Enrich the broth. 60 minutes&lt;/h4&gt;

&lt;p&gt;Smash the lemongrass stalk with a rolling pin. If it helps, think about all that aggression you&amp;rsquo;ve been suppressing. Now cut it into 3-4 even pieces. Add the bay leaf, lemongrass, and turkey or chicken carcass to the broth and bring to a boil. Cover and leave on a low boil (high simmer) for an hour.&lt;/p&gt;

&lt;h4 id=&#34;step-3-make-the-soup-60-minutes-2-hours&#34;&gt;Step 3. Make the soup. 60 minutes - 2 hours&lt;/h4&gt;

&lt;p&gt;Remove the carcass from the broth. You may need to strain the broth through a strainer to get everything out. If you used a turkey, add 2-3 cups of water.&lt;/p&gt;

&lt;p&gt;Add the vegetables and bring back to a boil. Lower the heat to a simmer, add the spices and the wine, and simmer for 1-2 hours. The longer and lower the simmer, the more the flavors will meld.&lt;/p&gt;

&lt;p&gt;When the vegetables are done, add the noodles and bring to a boil. Lower the heat to a simmer and add the chicken in. Simmer until the noodles are tender. Serve.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Rendering and using chicken fat.&lt;/strong&gt; I&amp;rsquo;m a &amp;ldquo;waste not&amp;rdquo; kind of a person, doubly so when dealing with meat, because an animal died for my meal, and I consider careful preparation and the use of everything part of paying respect to that. Rendering chicken fat is easy and only takes an extra skillet while everything else is going.&lt;/p&gt;

&lt;p&gt;Also, after rendering you end up with tasty fried chicken skins, which are like pork rinds or chicarones. Simply take them out of the fat then dust with salt, pepper, and cayenne.&lt;/p&gt;

&lt;p&gt;You can sautee the vegetables for the soup in a tablespoon of the fat, or you can save it for anything savory you would use butter for frying or sauteeing. I think it&amp;rsquo;s a great fat for stirfry myself.&lt;/p&gt;

&lt;p&gt;Raise a preferably cast-iron skillet to medium heat, add the skins, spread them out on the skillet, and cover with a mesh frying guard to keep your stove from looking like a fuzzy black and white photograph of a Jackson Pollack painting. Fry until they stop sounding like they&amp;rsquo;re frying or are starting to turn golden, and then turn.&lt;/p&gt;

&lt;p&gt;Remove the skins, let the fat cool slightly, then pour the it off into a glass jar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sunday Brunch: Fried Pears and Pecans</title>
      <link>https://jeffersonheard.github.io/2016/12/sunday-brunch-fried-pears-and-pecans/</link>
      <pubDate>Sat, 03 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/12/sunday-brunch-fried-pears-and-pecans/</guid>
      <description>

&lt;p&gt;I should really start taking pictures if I&amp;rsquo;m going to post recipes. But imagine
if you will a plate of pear slices, fried until they are golden brown on both
sides, the outside crispy, the inside smooth and sweet, and all of it covered in
streusel that tastes amazing. Got it? Good. Here goes.  &lt;strong&gt;Serves 1.&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&#34;ingredients&#34;&gt;Ingredients&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;1 pear&lt;/li&gt;
&lt;li&gt;2 tbl butter&lt;/li&gt;
&lt;li&gt;Small handful of fresh sage leaves&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; cp crushed pecans&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; tsp cinnamon&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; tsp nutmeg&lt;/li&gt;
&lt;li&gt;Salt&lt;/li&gt;
&lt;li&gt;1tbl Brown sugar&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I slice my pear flat, with slices about &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; inch thick (half a cm). Heat a cast
iron skillet on medium until it&amp;rsquo;s thoroughly warm. Add the butter and salt and
brown it. It will start to smell &amp;ldquo;nutty&amp;rdquo; and the foam will have mostly settled
when it&amp;rsquo;s ready. When the butter is brown, add the sage leaves and let them fry
for a second or three. Then add the pears and arrange in the pan so that they
are flat. Let them fry until the surface is golden, about 8 minutes on a side.&lt;/p&gt;

&lt;p&gt;Remove the pears with a slotted spoon when they&amp;rsquo;re done enough for you, and put
on a plate.  Then quickly toss the pecans in the pan, sprinkle with brown sugar,
cinnamon, and nutmeg, and stir around to toast gently till the mixture binds a
bit and soaks up the butter.&lt;/p&gt;

&lt;p&gt;Spread this mixture over the pears and serve.&lt;/p&gt;

&lt;p&gt;This is &lt;em&gt;not&lt;/em&gt; in any way, shape, or form a balanced breakfast; but it sure does
go amazingly well with coffee or Earl Grey tea.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Saturday Night Dinners: Lemongrass Curry Soup</title>
      <link>https://jeffersonheard.github.io/2016/12/saturday-night-dinners-lemongrass-curry-soup/</link>
      <pubDate>Fri, 02 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/12/saturday-night-dinners-lemongrass-curry-soup/</guid>
      <description>&lt;p&gt;I was going for something Thai-ish without following any particular recipe. What
I came out with was pretty incredible. A lot like Tom Kha, but not exactly.  Use
a fairly light vegetable broth for this recipe: either a miso broth or I use the
Swanson&amp;rsquo;s organic vegetable broth.  The taste of this one is at once hearty and
very very full of Spring. The whole thing took about 35 minutes from start to
finish.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1 tbl massaman curry paste or 1/2tbl red curry paste&lt;/li&gt;
&lt;li&gt;2 tbl olive oil&lt;/li&gt;
&lt;li&gt;3 cloves garlic, sliced&lt;/li&gt;
&lt;li&gt;1 onion, sliced and halved (to make &amp;ldquo;noodles&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; lb fresh baby spinach, trimmed and washed&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; cucumber, diced&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; cp cashew halves&lt;/li&gt;
&lt;li&gt;4 cp vegetable broth&lt;/li&gt;
&lt;li&gt;1 can coconut milk, full fat (Thai Kitchen is my favorite)&lt;/li&gt;
&lt;li&gt;1 tsp shredded kaffir lime leaves&lt;/li&gt;
&lt;li&gt;1 &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; tbl lemongrass paste (comes in a tube at the grocery store)&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; cp chopped mushrooms&lt;/li&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt; cp cubed chicken or Quorn tenders&lt;/li&gt;
&lt;li&gt;3-4 tbl lime juice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Heat the oil on medium in a heavy stockpot.  Add the curry paste and fry until
fragrant and the oil changes color.  Add the onions and garlic and cashews and
chicken and satuee until the onions have begun to wilt and everything is coated
nicely. Add broth, mushrooms, lemongrass paste, kaffir lime leaf, lime juice,
and simmer for 12 minutes.  Add the spinach and rice noodles, and bring to a
boil for 6 minutes.  Remove from heat, sitr in the coconut milk, add cucumber,
and serve.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simplifying complex business logic with Python&#39;s Kanren</title>
      <link>https://jeffersonheard.github.io/2016/11/simplifying-complex-business-logic-with-pythons-kanren/</link>
      <pubDate>Sun, 27 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/11/simplifying-complex-business-logic-with-pythons-kanren/</guid>
      <description>

&lt;p&gt;So-called &amp;ldquo;logic programming&amp;rdquo; has been a niche programming topic since Prolog
was introduced in the 80s. In my experience, most posts that cover logic
programming introduce the core concepts and stop there. The examples they
give are mostly toy problems. This post, then, will start with &amp;ldquo;what you can do
with logic programming in Python&amp;rdquo; and move toward the core concepts that way.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re looking for an explanation of &lt;strong&gt;unification&lt;/strong&gt; or a history of logic
programming, and why you should even write web-servers this way, there are
plenty of posts that will extoll the virtues of logic programming over other
methods. This is not that post. I&amp;rsquo;m aware of these things, but my goal in this
post is to help you take the part of your code that is &lt;em&gt;least&lt;/em&gt; maintainable as
written in a traditional Python style and make it cleaner, clearer, and less
prone to bugs using logic programming via the
&lt;a href=&#34;https://github.com/logpy/logpy&#34;&gt;Kanren&lt;/a&gt; library.&lt;/p&gt;

&lt;h2 id=&#34;not-what-it-is-but-what-is-it-for&#34;&gt;Not what it &lt;em&gt;is&lt;/em&gt;, but what is it &lt;em&gt;for&lt;/em&gt;?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/logpy/logpy&#34;&gt;Kanren&lt;/a&gt; provides you a way to simplify the way
you specify and make your code respond to &amp;ldquo;business logic.&amp;rdquo; Business logic is an
ill defined term, but in my experience it consists of all those if-then-else
statements, nested cases, and rats&amp;rsquo; warrens of callbacks that evolve over time
in complex applications that focus either on complex data processing, or on
responding to users who are themselves experts at something.&lt;/p&gt;

&lt;p&gt;Kanren lets you express this logic in terms of rules and facts. I use Kanren to
do things like consistency checks in entered data, validity checks for records
that are POSTed to my APIs, and to perform complex filtering on users and
records that don&amp;rsquo;t translate well into database queries.&lt;/p&gt;

&lt;p&gt;Before we get started, you might want to do a quick:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install kanren
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;for-if-not-then-else-what&#34;&gt;For if not then-else, what?&lt;/h2&gt;

&lt;p&gt;Although I will work to something more substantial, let&amp;rsquo;s start with a Hello
World. I start here because logic-programming is different enough to the way
most programmers think that a tiny, self-contained example will illustrate
some basic points.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from kanren import run, eq, var
&amp;gt;&amp;gt;&amp;gt; x = var()
&amp;gt;&amp;gt;&amp;gt; run(1, x, eq(x, 5))
(5,)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We&amp;rsquo;ll skip the import and focus on the next statement. &lt;code&gt;x = var()&lt;/code&gt; declares a
variable, which &lt;code&gt;run&lt;/code&gt; will try to find one or more values for. &lt;code&gt;run&lt;/code&gt; is a
function that takes the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The number of results you want.&lt;/li&gt;
&lt;li&gt;The variables whose values you are interested in.&lt;/li&gt;
&lt;li&gt;The set of rules that defines the space of valid values for your variables.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The third bit is the most important, because it gives us a clue as to what
&lt;code&gt;eq(x, 5)&lt;/code&gt; means. It does &lt;em&gt;not&lt;/em&gt; mean &amp;ldquo;assign 5 to x&amp;rdquo;. Instead it &lt;em&gt;constrains&lt;/em&gt;
the result set so that it only includes results where &lt;code&gt;x&lt;/code&gt; is equal to 5. What&amp;rsquo;s
the difference?&lt;/p&gt;

&lt;p&gt;It will take a more complex example to truly show the difference, but for now
suffice to say that &lt;code&gt;eq(x, 5)&lt;/code&gt; works much more like the condition part of an
&lt;code&gt;if&lt;/code&gt; statement than a statement inside the if:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for x, y, z in all_possibilities:
  if other_logic:
    # ...
    if x == 5:
      yield (x,)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In reality, Kanren is a highly efficient, optimizing evaluator of logical
expressions. There is (usually) no loop, but for illustration purposes, this is
what our example &amp;ldquo;means&amp;rdquo;. You can already see that we&amp;rsquo;ve taken a hairball of
potentially nested &lt;code&gt;ifs&lt;/code&gt; and &lt;code&gt;fors&lt;/code&gt; to a flat, sequential code structure in our
example.&lt;/p&gt;

&lt;h3 id=&#34;a-slightly-more-illustrative-example&#34;&gt;A (slightly) more illustrative example&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; set_a = {1, 2, 3}
&amp;gt;&amp;gt;&amp;gt; set_b = {2, 3, 4}
&amp;gt;&amp;gt;&amp;gt; run(2, x, (membero, x, set_a),  # x is a member of (1, 2, 3)
              (membero, x, set_b))  # x is a member of (2, 3, 4)
(2, 3)
&amp;gt;&amp;gt;&amp;gt; run(1, x, (membero, x, set_a),  # x is a member of (1, 2, 3)
              (membero, x, set_b))  # x is a member of (2, 3, 4)
(2,)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This example, taken from the Kanren &lt;code&gt;README&lt;/code&gt; is a little more illustrative. It
uses a new (to us) primitive, &lt;code&gt;membero&lt;/code&gt; to require that &lt;code&gt;x&lt;/code&gt; be a member of a
set. Note that the structure we&amp;rsquo;re checking membership of only has to be
iterable. It does not have to be a literal python set. Kanren operates on
primitive python types and their analogues, so if it swims like a duck and
quacks like a duck, then it&amp;rsquo;s a duck for Kanren purposes. There are no new data
structures to learn, conversions to make, or classes to unpack.&lt;/p&gt;

&lt;p&gt;I also introduced a different way to write the predicate. Instead of
&lt;code&gt;membero(x, set_a)&lt;/code&gt;, I wrote &lt;code&gt;(membero, x, set_a)&lt;/code&gt;. Although possibly a bit less
readable at first, nested structures are more readable this way, and I find that
after using the library in my own projects for a year or two, I like this style
better than the other.&lt;/p&gt;

&lt;p&gt;Now we see a new behavior of &lt;code&gt;run&lt;/code&gt;. It takes any number of clauses at the end
of the parameter list, and provides the logical and of all of them.  For our
purposes, we want two values of &lt;code&gt;x&lt;/code&gt; that satisfy all the predicates.&lt;/p&gt;

&lt;p&gt;Satisfying the first predicate, &lt;code&gt;(membero, x, set_a)&lt;/code&gt; are the values 1, 2, and 3,
since these are the members of &lt;code&gt;set_a&lt;/code&gt;. Satisfying the second predicate are the
values 2, 3, and 4, the members of &lt;code&gt;set_b&lt;/code&gt;. The only results shared between the
two are 2 and 3, so these are the results of our call to &lt;code&gt;run&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the first instance of run, we ask for two results. Each result is a single
value of x (as opposed to one set of members that match) and so we get a tuple
consisting of both matching numbers. If we ask for only one result, we get just
one number. This is important, because as I said earlier, Kanren works on so-
called duck typing (walks, swims, quacks, therefore serves the purposes of a
duck even if you happen to call it a swan). This means results can be a tuple of
numbers, dicts, tuples, lists, or custom types &amp;ndash; anything that can be compared
in the way the predicates do comparisons. This makes Kanren very pythonic and
very useful.&lt;/p&gt;

&lt;h2 id=&#34;making-it-more-relatable&#34;&gt;Making it more relatable&lt;/h2&gt;

&lt;p&gt;This is all fine, but it&amp;rsquo;s hardly something that by itself will make our logic
more readable. For that, we need to talk about relations and facts. Here is
an example adapted from the Kanren README:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; from kanren import Relation, facts
&amp;gt;&amp;gt;&amp;gt; parent = Relation()
&amp;gt;&amp;gt;&amp;gt; facts(parent, (&amp;quot;Homer&amp;quot;, &amp;quot;Bart&amp;quot;),
...               (&amp;quot;Marge&amp;quot;, &amp;quot;Bart&amp;quot;),
...               (&amp;quot;Homer&amp;quot;, &amp;quot;Lisa&amp;quot;),
...               (&amp;quot;Marge&amp;quot;, &amp;quot;Lisa&amp;quot;),
...               (&amp;quot;Homer&amp;quot;, &amp;quot;Maggie&amp;quot;),
...               (&amp;quot;Marge&amp;quot;, &amp;quot;Maggie&amp;quot;),
...               (&amp;quot;Abe&amp;quot;,  &amp;quot;Homer&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s get one of the parents of Bart:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; run(1, x, (parent, x, &amp;quot;Bart&amp;quot;))
(&#39;Marge&#39;,)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Two of Homer&amp;rsquo;s children:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; run(2, x, parent(&amp;quot;Homer&amp;quot;, x))
(&#39;Bart&#39;, &#39;Lisa&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that there&amp;rsquo;s no order. The answer could have easily been &amp;ldquo;Homer&amp;rdquo; to the
first one or Lisa and Maggie to the second statement.&lt;/p&gt;

&lt;p&gt;Now, to show that relations are more than just fancy ways to construct tuples,
let&amp;rsquo;s figure out grandparents. We use an intermediate variable, &lt;code&gt;y&lt;/code&gt; to represent
the parent of Bart. Then &lt;code&gt;x&lt;/code&gt; is then the parent of the parent of bart.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; y = var()
&amp;gt;&amp;gt;&amp;gt; run(1, x, parent(x, y),
              parent(y, &#39;Bart&#39;))
(&#39;Abe&#39;,)

&amp;gt;&amp;gt;&amp;gt; run(1, (x, y), parent(x, y),
                   parent(y, &#39;Bart&#39;))
((&#39;Abe&#39;, &#39;Homer&#39;),)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This shows off Kanren&amp;rsquo;s advanced form of pattern matching known as &amp;ldquo;unification.&amp;rdquo;
Unification and backtracking are really not in the scope of this tutorial, but
you may find it helps to understand them in detail as you use Kanren in your own
programs. In that case, start with Kanren&amp;rsquo;s README and work from there.  For now
it is enough to consider that this works and its implications for writing
cleaner Python code.&lt;/p&gt;

&lt;p&gt;Note we can list more than one variable we are interested in the value of. This
will create a nested tuple of variable values in the same respective order as
they are listed in run.&lt;/p&gt;

&lt;p&gt;How might we have written this reasonably (if naïvely) in non-Kanren Python?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; parent_child = {
...   &amp;quot;Homer&amp;quot;: (&amp;quot;Bart&amp;quot;, &amp;quot;Lisa&amp;quot;, &amp;quot;Maggie&amp;quot;),
...   &amp;quot;Marge&amp;quot;: (&amp;quot;Bart&amp;quot;, &amp;quot;Lisa&amp;quot;, &amp;quot;Maggie&amp;quot;),
...   &amp;quot;Abe&amp;quot;: (&amp;quot;Homer&amp;quot;,)
... }

# getting homer&#39;s children is simple.
&amp;gt;&amp;gt;&amp;gt; parent_child[&#39;Homer&#39;][0:2]
(&amp;quot;Bart&amp;quot;, &amp;quot;Lisa&amp;quot;)

# figuring out Bart&#39;s parents looks completely different (or we have to store
# and maintain two dicts)
&amp;gt;&amp;gt;&amp;gt; barts_parents = []
&amp;gt;&amp;gt;&amp;gt; for parent in parent_child:
...   if &#39;Bart&#39; in parent_child[parent]:
...     barts_parents.append(parent)

# grandparents is even uglier, and requires we first compute parents.
&amp;gt;&amp;gt;&amp;gt; barts_grandparents = []
&amp;gt;&amp;gt;&amp;gt; for parent in barts_parents:  ## we computed this in the previous loop.
...   for grandparent in parent_child:
...     if parent in parent_child[grandparent]:
...       barts_grandparents.append(grandparent)  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The difference in legibility between the Kanren example and its admittedly
naïve Python equivalent should be obvious. In the Kanren example, we describe
relationships and assume they&amp;rsquo;re transitive. This not only serves to help us
work from either direction in the relationship with the same statement, it also
allows us to build these relationships up over time without having to maintain
multiple dictionaries or describe relationships in terms of iteration and if
statements.&lt;/p&gt;

&lt;p&gt;For simple logic that will never grow, it may be that the above is acceptable,
but it does tend to create code that people put big comments around warning the
interns off touching it.&lt;/p&gt;

&lt;h2 id=&#34;applying-it-to-a-real-world-example&#34;&gt;Applying it to a real-world example&lt;/h2&gt;

&lt;p&gt;Now for a more &amp;ldquo;real-world&amp;rdquo; test of Kanren.  Let&amp;rsquo;s create a consistency test for
a complex piece of JSON. First we&amp;rsquo;ll specify the JSON Schema for items in a
coffee shop order:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
  &amp;quot;required&amp;quot;: [&amp;quot;order_destination&amp;quot;],
  &amp;quot;properties&amp;quot;: {
    &amp;quot;order_destination&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;enum&amp;quot;: [&amp;quot;espresso_machine&amp;quot;, &amp;quot;pastry_counter&amp;quot;]},
  },
  &amp;quot;definitions&amp;quot;: {
    &amp;quot;drink&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
      &amp;quot;required&amp;quot;: [&amp;quot;size&amp;quot;, &amp;quot;order_type&amp;quot;],
      &amp;quot;properties&amp;quot;: {
        &amp;quot;size&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;enum&amp;quot;: [&amp;quot;sm&amp;quot;, &amp;quot;md&amp;quot;, &amp;quot;lg&amp;quot;, &amp;quot;xl&amp;quot;]},
        &amp;quot;drink_type&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;enum&amp;quot;: [&amp;quot;drip&amp;quot;, &amp;quot;espresso&amp;quot;, &amp;quot;latte&amp;quot;, &amp;quot;cappuccino&amp;quot;, &amp;quot;americano&amp;quot;]},
        &amp;quot;extras&amp;quot;: {&amp;quot;array&amp;quot;: { &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/extras&amp;quot; }},
      }
    },
    &amp;quot;pastry&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
      &amp;quot;required&amp;quot;: [&amp;quot;quantity&amp;quot;, &amp;quot;item&amp;quot;],
      &amp;quot;properties&amp;quot;: {
        &amp;quot;item&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;enum&amp;quot;: [&amp;quot;donut&amp;quot;, &amp;quot;sandwich&amp;quot;, &amp;quot;bagel&amp;quot;, &amp;quot;danish&amp;quot;]},
        &amp;quot;quantity&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;, &amp;quot;minValue&amp;quot;: 1, &amp;quot;maxValue&amp;quot;: 144},
        &amp;quot;heated&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot;, &amp;quot;default&amp;quot;: false}
      }
    },
    &amp;quot;extras&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
      &amp;quot;properties&amp;quot;: {
        &amp;quot;flavoring&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;},
        &amp;quot;milk_type&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;enum&amp;quot;: [&amp;quot;soy&amp;quot;, &amp;quot;almond&amp;quot;, &amp;quot;skim&amp;quot;]}
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One thing that schema languages cannot often handle well are conditional
requirements. Conditional requirements occur when:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The presence of a value in one field limits the valid values in another field, or&lt;/li&gt;
&lt;li&gt;The presence of a value in one field requires the presence of another field.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In our case, the above schema defines an order at a coffee shop, but there are
valid JSON documents that nevertheless will not contain all the information
needed to complete an order.  We need some extra validation steps.  In particular,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Depending on the order type, we need to ensure the presence of one of the
optional sections, &lt;code&gt;espresso_machine&lt;/code&gt; or &lt;code&gt;pastry_counter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Shots of espresso can only be small or medium - no large or xl&lt;/li&gt;
&lt;li&gt;Cappuccinos can only be small, medium, or large. (we&amp;rsquo;re picky)&lt;/li&gt;
&lt;li&gt;Shots of espresso do not have milk in them (or they&amp;rsquo;d be something else)&lt;/li&gt;
&lt;li&gt;Americanos do not have milk.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can create logic with Kanren that validates our JSON beyond what can simply
be done with basic schema validation.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from kanren import *

def validate_order(order):

  # validate conditional presence of section for order routing.
  must_contain_section = Relation()
  facts(must_contain_section, (&#39;espresso_machine&#39;, &#39;drink&#39;),
                              (&#39;pastry_counter&#39;, &#39;pastry&#39;))

  x = var()
  valid = run(1, x, must_contain_section(order[&#39;order_destination&#39;], x),
                    membero(x, set(order.keys())))  # See Note 1.

  if len(valid) == 0:
    raise ValidationError(&amp;quot;Required section not present&amp;quot;)
  elif order[&#39;order_destination&#39;] == &#39;espresso_machine&#39;:  # validate expresso orders
    drink = order[&#39;drink&#39;]

    # specify whether milk comes with each drink or not.
    # these could be specified once instead of every time the function is called.
    milk_comes_with = Relation(&#39;milk_comes_with&#39;)
    facts(milk_comes_with, (&#39;drip&#39;, True),
                           (&#39;latte&#39;, True),
                           (&#39;cappuccino&#39;, True),
                           (&#39;espresso&#39;, False),   # no milk for straight espresso
                           (&#39;americano&#39;, False))  # no milk in an americano

    drink_sizes = Relation(&#39;drink_size&#39;)

    # specify which sizes are valid for which drink.
    # these could be specified once instead of every time the function is called.
    facts(drink_sizes, *((&#39;drip&#39;, sz) for sz in [&#39;sm&#39;, &#39;md&#39;, &#39;lg&#39;, &#39;xl&#39;]),
                       *((&#39;latte&#39;, sz) for sz in [&#39;sm&#39;, &#39;md&#39;, &#39;lg&#39;, &#39;xl&#39;]),
                       *((&#39;americano&#39;, sz) for sz in [&#39;sm&#39;, &#39;md&#39;, &#39;lg&#39;, &#39;xl&#39;]),
                       *((&#39;cappuccino&#39;, sz) for sz in [&#39;sm&#39;, &#39;md&#39;, &#39;lg&#39;]),
                       *((&#39;espresso&#39;, sz) for sz in [&#39;sm&#39;, &#39;md&#39;]))

    # specify our drink type.
    drink_type = drink[&#39;drink_type&#39;]

    # check if if any of the extras specified a type of milk.
    specified_milk = False  
    for e in drink.get(&#39;extras&#39;, []):
      if &#39;milk_type&#39; in e:
        specified_milk = True
        break

    # these could run separately to come out with different errors.
    y = var()    
    valid = run(1, y,
      drink_sizes(drink_type, drink[&#39;size&#39;]),  # drink is a valid size
      # drink has a valid type of milk
      lany(  # any of the sub-clauses passing passes this.
        eq(specified_milk, False),  # drink has no milk
        # drink has milk and is of a valid drink type
        milk_comes_with(drink_type, specified_milk)))  

    if len(valid) == 0:
      raise ValidationError(&amp;quot;Drink size too large for drink type or milk included in non milk drink&amp;quot;)
  else:
    pass  # we may validate pastry orders next.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This results in the following passing validation:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;validate_order({&amp;quot;order_destination&amp;quot;: &amp;quot;espresso_machine&amp;quot;,
                &amp;quot;drink&amp;quot;: {&amp;quot;drink_type&amp;quot;: &amp;quot;espresso&amp;quot;,
                          &amp;quot;size&amp;quot;: &amp;quot;sm&amp;quot;}})

validate_order({&amp;quot;order_destination&amp;quot;: &amp;quot;espresso_machine&amp;quot;,
                &amp;quot;drink&amp;quot;: {&amp;quot;drink_type&amp;quot;: &amp;quot;latte&amp;quot;,
                          &amp;quot;size&amp;quot;: &amp;quot;lg&amp;quot;,
                          &amp;quot;extras&amp;quot;: [{&amp;quot;milk_type&amp;quot;: &amp;quot;soy&amp;quot;}]}})        

validate_order({&amp;quot;order_destination&amp;quot;: &amp;quot;espresso_machine&amp;quot;,
                &amp;quot;drink&amp;quot;: {&amp;quot;drink_type&amp;quot;: &amp;quot;latte&amp;quot;,
                          &amp;quot;size&amp;quot;: &amp;quot;lg&amp;quot;}})            
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the following will not pass validation:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# no large espressos at this coffee shop. You&#39;ve had enough!
validate_order({&amp;quot;order_destination&amp;quot;: &amp;quot;espresso_machine&amp;quot;,
                &amp;quot;drink&amp;quot;: {&amp;quot;drink_type&amp;quot;: &amp;quot;espresso&amp;quot;,
                          &amp;quot;size&amp;quot;: &amp;quot;lg&amp;quot;}})

# added a custom milk type to a non-milk drink
validate_order({&amp;quot;order_destination&amp;quot;: &amp;quot;espresso_machine&amp;quot;,
      &amp;quot;drink&amp;quot;: {&amp;quot;drink_type&amp;quot;: &amp;quot;espresso&amp;quot;,
                &amp;quot;size&amp;quot;: &amp;quot;sm&amp;quot;,
                &amp;quot;extras&amp;quot;: [{&amp;quot;milk_type&amp;quot;: &amp;quot;soy&amp;quot;}]}})


# required section not present
validate_order({&amp;quot;order_destination&amp;quot;: &amp;quot;espresso_machine&amp;quot;})
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;notes&#34;&gt;Notes&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;Here we make a set out of the properties of our &amp;ldquo;order&amp;rdquo; document. The full
test makes sure that both clauses are true. So &lt;code&gt;x&lt;/code&gt; must be the required section
for our order type, and it must be present as a named property in our document.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thus this is valid:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&amp;quot;order_destination&amp;quot;: &amp;quot;espresso_machine&amp;quot;, &amp;quot;drink&amp;quot;: {...}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And this is not:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&amp;quot;order_destination&amp;quot;: &amp;quot;espresso_machine&amp;quot;, &amp;quot;pastry&amp;quot;: {...}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;further-thoughts&#34;&gt;Further thoughts&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Reusability is your friend.&lt;/strong&gt; So far we&amp;rsquo;ve only seen interactive usage of Kanren.
What about embedding it in software? It&amp;rsquo;s probably obvious that you can wrap the
&lt;code&gt;run&lt;/code&gt; call in a function and work with the results, but it turns out you can
wrap up and make relations and predicates reusable as well. &lt;a href=&#34;https://github.com/logpy/logpy/blob/master/examples/corleone.py&#34;&gt;See the Godfather example in Kanren&amp;rsquo;s source&lt;/a&gt;.
You can even make &lt;a href=&#34;https://github.com/logpy/logpy/blob/master/examples/user_classes.py&#34;&gt;custom types usable&lt;/a&gt;
within Kanren&amp;rsquo;s logical relations.&lt;/p&gt;

&lt;p&gt;There are things missing from the complex example. It&amp;rsquo;s possible to create much
more complex validations using Kanren and all its primitives. There are also
other ways to express logic more succinctly than we did in the example, however
for an introduction, I think these can be too dense to be readily digested.
Best to experiment with your code and see what works.&lt;/p&gt;

&lt;p&gt;For further reading, I suggest starting with the &lt;a href=&#34;http://minikanren.org/&#34;&gt;specification of miniKanren&lt;/a&gt;,
which was originally written in Scheme, and then &lt;a href=&#34;https://github.com/logpy/logpy&#34;&gt;the Python Kanren repo&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Saturday Night Dinner: Three-Alarm Plate of Awesome</title>
      <link>https://jeffersonheard.github.io/2016/11/saturday-night-dinner-three-alarm-plate-of-awesome/</link>
      <pubDate>Sat, 26 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/11/saturday-night-dinner-three-alarm-plate-of-awesome/</guid>
      <description>&lt;p&gt;What is a three-alarm plate of awesome? Roasted red peppers and roasted
eggplant, tossed and fried in mustard oil, bay leaf, and spices (cayenne,
cinnamon, turmeric).  Served over polenta, and it was &lt;em&gt;perfect&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Recipe, and sorry, this one&amp;rsquo;s a bit involved, because roasting peppers requires
attention:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2 red bell peppers&lt;/li&gt;
&lt;li&gt;2 jalapeños&lt;/li&gt;
&lt;li&gt;1 med. eggplant&lt;/li&gt;
&lt;li&gt;olive oil for brushing&lt;/li&gt;
&lt;li&gt;1/2tsp cayenne&lt;/li&gt;
&lt;li&gt;1/2tsp turmeric&lt;/li&gt;
&lt;li&gt;1tbl mustard seed&lt;/li&gt;
&lt;li&gt;1 bay leaf&lt;/li&gt;
&lt;li&gt;1 shallot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Preheat the oven to 500 degrees, Coat the skin of the peppers in olive oil
(lightly) and set down on a cookie sheet (you can use the bare oven, but be
prepared for a mess if the pepper sags through).  Roast on each side of the
pepper 8-10 minutes, turning when the pepper is thoroughly blistered.  Take out
the peppers and then cover them for 30 minutes so that they steam themselves. A
bowl over a plate will do just fine.  The point is that if they steam
themselves, they&amp;rsquo;re that much easier to peel.&lt;/p&gt;

&lt;p&gt;Now, while all this is going on, slice the eggplant in half lengthwise, then cut
a crosshatch into each half.  Sprinkle with kosher salt and set aside for 30 min
while the pepper is roasting.&lt;/p&gt;

&lt;p&gt;When the pepper is done roasting, squeeze the eggplant face down, gently, over
the sink so that the salty juice comes out, brush the salt off, and then coat
the surface with oil (lightly, once again).  Drop the oven down to 400, put the
eggplant face down on some foil or cookie sheets, and roast those for another
half hour.&lt;/p&gt;

&lt;p&gt;If you time this right, the pepper will be ready to peel by the time the
eggplant&amp;rsquo;s ready to come out of the oven, and you&amp;rsquo;ll feel like you know kung-fu
for all your sheer perfect timing.  If you&amp;rsquo;re me, you peel the pepper and set it
aside for 10 minutes.&lt;/p&gt;

&lt;p&gt;Take everything that&amp;rsquo;s roasted and chop it up.  Heat a tablespoon and a half of
olive oil in a pan until it shimmers.  Add the bay leaf, chopped shallot, and
mustard seeds and fry till the seeds begin to pop.  add the turmeric and fry for
no more than 10 seconds. Toss in the chopped peppers and eggplant and add
cayenne to taste.  Stir-fry for 5 minutes, remove from heat, and serve.  My
chosen side was polenta, but basmati rice would work just as well.  As for pics,
I&amp;rsquo;d post a pic, but I ate it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Review: Secret of Kells and Song of the Sea</title>
      <link>https://jeffersonheard.github.io/2016/11/review-secret-of-kells-and-song-of-the-sea/</link>
      <pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/11/review-secret-of-kells-and-song-of-the-sea/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://static.rogerebert.com/uploads/review/primary_image/reviews/the-secret-of-kells-2010/hero_EB20100331REVIEWS100339983AR.jpg&#34; /&gt;
&lt;small&gt;Source: &lt;a href=&#34;http://www.rogerebert.com/reviews/the-secret-of-kells-2010&#34;&gt;Roger Ebert&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Pangur Bán&lt;/strong&gt;
&lt;br /&gt;&lt;br /&gt;
Pangur, white Pangur, How happy we are &lt;br /&gt;
Alone together, scholar and cat &lt;br /&gt;
Each has his own work to do daily; &lt;br /&gt;
For you it is hunting, for me study. &lt;br /&gt;
Your shining eye watches the wall; &lt;br /&gt;
My feeble eye is fixed on a book. &lt;br /&gt;
You rejoice, when your claws entrap a mouse; &lt;br /&gt;
I rejoice when my mind fathoms a problem. &lt;br /&gt;
Pleased with his own art, neither hinders the other; &lt;br /&gt;
Thus we live ever without tedium and envy. &lt;br /&gt;
&lt;br /&gt;
Anonymous (translation from the Irish by W.H. Auden)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When animated movies win or are nominated for Oscars, it &lt;em&gt;should&lt;/em&gt; be an indication
that they deserve a place in our collective consciousness. However, when those
movies are foreign, or they don&amp;rsquo;t follow contemporary animation trends, they
still risk falling into obscurity undeservedly.&lt;/p&gt;

&lt;p&gt;Two of my favorite animated films of all time are &lt;strong&gt;Secret of Kells&lt;/strong&gt; and
&lt;strong&gt;Song of the Sea&lt;/strong&gt;. They are both animated by the same Irish animation studio,
&lt;a href=&#34;https://en.wikipedia.org/wiki/Cartoon_Saloon&#34;&gt;Cartoon Saloon&lt;/a&gt;, and both use a
style of animation that adheres closely to the style of art embodied in
illuminated manuscripts such as the &lt;a href=&#34;https://en.wikipedia.org/wiki/Book_of_Kells&#34;&gt;Book of Kells&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The animation is luminous. Saturated colors, flat cel style animation, and
intricate, calligraphic lines make the story feel like you&amp;rsquo;re being read to
even while watching the movie. They recall an earlier movie, not as well done,
but still equally beautiful: &lt;a href=&#34;https://en.wikipedia.org/wiki/The_Thief_and_the_Cobbler&#34;&gt;&lt;strong&gt;The Thief and the Cobbler&lt;/strong&gt;&lt;/a&gt;,
whose animation loosely follows early Islamic art styles (an effect which is a bit
broken by animating human characters in the movie, since most Islamic art is
iconoclastic).&lt;/p&gt;

&lt;p&gt;The poem above is interwoven with its Irish language source throughout Secret of
Kells in a modal song that further serves to make the story feel like a fairy tale
from a lost age, discovered again by the viewers. The &amp;ldquo;sidekick&amp;rdquo; is a fairy who
appears to the main character first as a girl, then as a cat, Pangur Ban, who
serves both as the hero&amp;rsquo;s helper and the key to the saga.&lt;/p&gt;

&lt;p&gt;In Song of the Sea, Irish music and the myth of the &lt;em&gt;selkie&lt;/em&gt; serves to transport
the viewer along with the animation. The story itself recalls The Little Mermaid
(or its most recent animated retelling, Miyazaki&amp;rsquo;s &lt;a href=&#34;http://movies.disney.com/ponyo&#34;&gt;Ponyo&lt;/a&gt;.
The main character is a little girl, Saoirse (appropriately, a Galeicization of Circe)
who only knows that she has no mother, and that her father wants her to stay
away from the sea. She herself is half-Selkie, and her adventures lead her
closer and closer to the mythic world she came from.&lt;/p&gt;

&lt;p&gt;Secret of Kells tells a mythologized story of the preservation of Western culture
after the fall of Rome by the Irish monks who penned the Book of Kells. Central
to the story is a magic stone that allows the monks to see the page to do their
finest and most intricate illumination work. The villains, the Viking Horde, are
thoroughly menacing. Their animation and their presence remind me a lot of
Samurai Jack&amp;rsquo;s demon adversary, &lt;em&gt;Aku&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Song of the Sea was nominated for an Oscar in 2015, but lost out to &lt;strong&gt;Frozen&lt;/strong&gt;.
Secret of Kells lost to &lt;strong&gt;Up&lt;/strong&gt;. It&amp;rsquo;s hard to win an Oscar on a year with a
strong showing by Disney, but neither of these films deserve to be relegate to
second-tier viewing. To those who know these movies, they will become treasured
classics, on the same shelf as Sprited Away or Kiki&amp;rsquo;s Delivery Service.&lt;/p&gt;

&lt;p&gt;As foreign as the films may be to American viewers who only know them from their
Oscar nominations, all the elements you expect in an animated movie are there.
Action, adventure, whimsical sidekicks, villains.  And yet, they never feel like
they are trying to be Disney, like much non-Disney American animation. It more
feels like a nod to the giants of animation than an attempt to win audience by
copying them.&lt;/p&gt;

&lt;p&gt;Secret of Kells and Song of the Sea are both often available on Amazon and
Netflix streaming sites. I highly recommend them to anyone who loves a
good fairy tale on a rainy day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating new fields and widgets for Mozilla&#39;s react-jsonschema-form</title>
      <link>https://jeffersonheard.github.io/2016/11/creating-new-fields-and-widgets-for-mozillas-react-jsonschema-form/</link>
      <pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/11/creating-new-fields-and-widgets-for-mozillas-react-jsonschema-form/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/mozilla-services/react-jsonschema-form&#34;&gt;Mozilla&amp;rsquo;s react-jsonschema-form&lt;/a&gt;
is my favorite tool to build forms. Its forms play well with REST APIs, they
look good, and  they are easy to work with and extend. In the most basic usage,
you take a &lt;a href=&#34;http://json-schema.org/&#34;&gt;JSON-Schema&lt;/a&gt; and simply pass it to the
component like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React, { PropTypes } from &#39;react&#39;;
import Form from &#39;react-jsonschema-form&#39;;

const mySchema = { ... }
const changeHandler = ({formData}) =&amp;gt; { ... }; // formData is JSON that conforms to your schema.

const MyForm = (props) =&amp;gt; (&amp;lt;Form schema={mySchema} onChange={changeHandler} /&amp;gt;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which yields a form like the one on the right:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/a491e6355cc814b195bc0060c93b023dfe8a72ac/687474703a2f2f692e696d6775722e636f6d2f626d5133486c4f2e706e67&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can define either &lt;code&gt;onChange&lt;/code&gt; or &lt;code&gt;onSubmit&lt;/code&gt; properties as functions that
accept an object with a &lt;code&gt;formData&lt;/code&gt; attribute. The &lt;code&gt;formData&lt;/code&gt; will be an object
that conforms to your schema.&lt;/p&gt;

&lt;p&gt;Customizing the form is as simple as defining a uiSchema. This post, after
introducing the component, will cover customization using fields and widgets,
and when each is appropriate.&lt;/p&gt;

&lt;h2 id=&#34;a-couple-of-notes-about-json-schema&#34;&gt;A couple of notes about JSON Schema&lt;/h2&gt;

&lt;p&gt;I have read a number of arguments online for and against
&lt;a href=&#34;http://json-schema.org/&#34;&gt;JSON-Schema&lt;/a&gt; in principle.  My answer to all of these
arguments is &amp;ldquo;JSON Schema works for my purposes, and for many others&amp;rsquo; purposes.
It&amp;rsquo;s not perfect. It doesn&amp;rsquo;t really have to be.&amp;rdquo; My experience with internet
holy wars tells me to ignore them and adapt the best tools for my purposes that
seem like they&amp;rsquo;ll also be useful in future projects. JSON Schema is one such
technology.&lt;/p&gt;

&lt;p&gt;If you want a totally extensible, general case schema language, JSON Schema
probably isn&amp;rsquo;t your best language. I however want to use it to declaratively
define documents to be stored in a NoSQL database (&lt;a href=&#34;https://rethinkdb.com&#34;&gt;RethinkDB&lt;/a&gt;)
and to interact with those documents in mobile apps and on web forms. I want to
do minimal processing and work on the client and server side to make the simple
things work, as there&amp;rsquo;s only so much time in the day, and most of that time is
expensive.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re like me, then JSON Schema is a good choice. You should continue
on reading.&lt;/p&gt;

&lt;p&gt;For me, the best part of JSON Schema is that it&amp;rsquo;s very lean. There&amp;rsquo;s not a lot
to learn, and it&amp;rsquo;s not at all restrictive. Any JSON fragment can contain
schema, and any schema fragment can contain arbitrary properties that validation
implementations will ignore, which makes it easy to give hints about the data
to your application by embedding metadata in the schema. I use this extensively
when generating forms that rely on custom components.&lt;/p&gt;

&lt;h2 id=&#34;react-jsonschema-form&#34;&gt;react-jsonschema-form&lt;/h2&gt;

&lt;p&gt;The great thing about &lt;a href=&#34;https://github.com/mozilla-services/react-jsonschema-form&#34;&gt;react-jsonschema-form&lt;/a&gt;
beyond its simplicity and customizability is that it is &lt;em&gt;predictable&lt;/em&gt;. The
components that are generated by React have the same structure as your schema,
exactly. Digging into the tree with react development tools gives you a clear
picture of what data exists at any level and in any place in the form. Every
field component has a &lt;code&gt;formData&lt;/code&gt; attribute that contains JSON in compliance
with the schema fragment it represents. Every fragment is individually represented
and properly nested. Every widget has a &lt;code&gt;value&lt;/code&gt; attribute that contains a
string, number, boolean, or null - any basic JSON type.&lt;/p&gt;

&lt;p&gt;It may seem like I am harping on this feature, but I have found remarkably few
form builders that follow this level of rigor in the data they generate. I find
that the meat-and-potatoes of user data entry is almost debugger-free, and I can
therefore spend my time figuring out the hard stuff. When I do open the
debugger, I know exactly where to look to find what I&amp;rsquo;m after, because I know
a priori how the tree is laid out.&lt;/p&gt;

&lt;p&gt;In short, there is no &lt;em&gt;magic&lt;/em&gt; in the way &lt;code&gt;react-jsonschema-form&lt;/code&gt; works. Since I
come from languages like Python and Lisp, I like this design a lot.&lt;/p&gt;

&lt;h3 id=&#34;non-obvious-behaviors&#34;&gt;Non-obvious Behaviors&lt;/h3&gt;

&lt;p&gt;The documentation for &lt;code&gt;react-jsonschema-form&lt;/code&gt; is really quite good; there are a
few things that you will run into that may not be obvious on first use.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fields that are left empty by the user will be omitted from the JSON &lt;em&gt;unless&lt;/em&gt;
a default is defined in the schema. If during data entry a user clears
a field, that field will be omitted from the JSON. &lt;em&gt;&lt;strong&gt;This is the cause of a
common coder error&lt;/strong&gt;&lt;/em&gt;. If you use an API method
that updates records in place, rather than replaces them, this can cause
a simple error where the record in the backend store doesn&amp;rsquo;t reflect a user
deleting data within the record.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Booleans that are required need to have a custom widget defined in the
&lt;code&gt;uiSchema&lt;/code&gt; (radio works fine), otherwise they come up as checkboxes, whose
&lt;code&gt;formData&lt;/code&gt; is always either &lt;code&gt;true&lt;/code&gt; or omitted (and therefore invalid).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Arrays defined in the schema will &lt;em&gt;always&lt;/em&gt; create headings in the form, even
if there are no items in the array. That&amp;rsquo;s fine, but it can be confusing
to read the form when there are arrays nested in objects. You may need custom
CSS or to define a post-processing function to make the form clearer to the
user.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Arrays marked as &lt;code&gt;readOnly&lt;/code&gt; will create buttons, although they&amp;rsquo;re disabled.&lt;br /&gt;
Use the schema and a function to traverse the DOM and remove the buttons you
don&amp;rsquo;t want.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The difference between &amp;ldquo;field&amp;rdquo; and &amp;ldquo;widget&amp;rdquo; isn&amp;rsquo;t &lt;em&gt;actually&lt;/em&gt; subtle, but it
might seem like it is at first.  Generally, if your type is a &lt;em&gt;collection&lt;/em&gt;,
be that an object or an array, it is a &amp;ldquo;field&amp;rdquo;. If it is a single simple value,
then it is a &lt;em&gt;widget&lt;/em&gt;. Read below for more examples.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;customization-patterns&#34;&gt;Customization patterns&lt;/h3&gt;

&lt;p&gt;The documentation for &lt;code&gt;react-jsonschema-form&lt;/code&gt; is all in one page.  It is
complete, but it can be a bit intimidating if you haven&amp;rsquo;t used the project
before.&lt;/p&gt;

&lt;p&gt;I put metadata in my schema that says a bit more about the data than is
conveyed directly.  This metadata might specify that a string is generally  a
barcode, or refers to a file on the web or to an image url or to a &amp;ldquo;foreign
key.&amp;rdquo; I also specify in metadata sometimes how &amp;ldquo;large&amp;rdquo; a choice-set is likely
to be. This helps me intelligently determine what kind of selection widget to
use, and  whether or not to load all  choices from the server or to use an
autocomplete function to speed up  user interaction and provide a better
experience.&lt;/p&gt;

&lt;p&gt;Example schema fragments. Note, there is no built-in way to handle these within
JSON-Schema form, but you can use a processing function to read a schema and
create a custom &lt;code&gt;uiSchema&lt;/code&gt; that uses custom widgets based on this metadata:&lt;/p&gt;

&lt;p&gt;Let the application know that a string is a barcode.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{ &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;represents&amp;quot;: &amp;quot;barcode&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let the application know that an object is a GeoJSON point.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{ &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;, &amp;quot;represents&amp;quot;: &amp;quot;geometry&amp;quot;, &amp;quot;geometryType&amp;quot;: &amp;quot;point&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JSON-Schema has a &lt;code&gt;format&lt;/code&gt; keyword. That format only works for strings, however,
and may also have special meaning to certain validators. I find it best to use
a different keyword to reflect semantics of anything outside of a simple
date-time. After all, there&amp;rsquo;s no &lt;em&gt;formatting&lt;/em&gt; difference between a string that
represents a file and one that represents an image.&lt;/p&gt;

&lt;p&gt;Here is an example schema I have used with custom JSONSchema form widgets:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{ &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
  &amp;quot;title&amp;quot;: &amp;quot;Representation&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;Metadata embedded within a schema that is used by the form builder or applications&amp;quot;,
  &amp;quot;properties&amp;quot;: {
    &amp;quot;represents&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;enum&amp;quot;: [
      &amp;quot;image&amp;quot;,
      &amp;quot;file&amp;quot;,
      &amp;quot;barcode&amp;quot;,
      &amp;quot;geom&amp;quot;,
      &amp;quot;foreignKey&amp;quot;
    ]},
    &amp;quot;fkSize&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;enum&amp;quot;: [&amp;quot;sm&amp;quot;, &amp;quot;med&amp;quot;, &amp;quot;large&amp;quot;]},
    &amp;quot;fkUrl&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;format&amp;quot;: &amp;quot;url&amp;quot;},
    &amp;quot;uploadPath&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;},
    &amp;quot;uploadHost&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;},
    &amp;quot;geomType&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;enum&amp;quot;: [&amp;quot;point&amp;quot;, &amp;quot;line&amp;quot;, &amp;quot;polygon&amp;quot;, &amp;quot;multipoint&amp;quot;, &amp;quot;multiline&amp;quot;, &amp;quot;multipolygon&amp;quot;]},
    &amp;quot;geomProj&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;pattern&amp;quot;: &amp;quot;(epsg|EPSG):[0-9]+&amp;quot;, &amp;quot;default&amp;quot;: &amp;quot;EPSG:4326&amp;quot;}
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is meant as a starting point, not a final list. In the next section, I will
cover how to generate a widget that handles input and display for images&lt;/p&gt;

&lt;h2 id=&#34;building-a-custom-widget-for-images&#34;&gt;Building a custom widget for images&lt;/h2&gt;

&lt;p&gt;In this section, we&amp;rsquo;ll build a widget that handles an image upload. A custom
widget is simply a React component. For the sake of the tutorial, we are also
using &lt;a href=&#34;https://react-bootstrap.github.io/&#34;&gt;react-bootstrap&lt;/a&gt;. Most React
developers seem to be familiar with &lt;code&gt;react-boostrap&lt;/code&gt;, and it makes the code much
more readable in my opinion.&lt;/p&gt;

&lt;p&gt;To fully understand the rest of the code in this tutorial, you will need to
familiarize yourself with the following concepts above and beyond JSON Schema:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://react-bootstrap.github.io/&#34;&gt;react-bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/getting-started/primers/promises&#34;&gt;Promises&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&#34;&gt;Fetch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A key assumption I make is that we know how to upload the image the user selects
a priori. In particular,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Our upload endpoint accepts a further path component that segments images uploaded
from different collections.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Our upload endpoint returns the URL where the image can be reached as a bare string.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;We are using a token-based authentication / authorization method that requires
the Authorization HTTP header. This is common in schemes like
&lt;a href=&#34;https://jwt.io/&#34;&gt;JSON Web Tokens.&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you wanted to make this more customizable, you would want to rewrite
&lt;code&gt;changeHandler&lt;/code&gt; to pull the actual upload portion from the &lt;code&gt;ui:options&lt;/code&gt; section
in the &lt;code&gt;uiSchema&lt;/code&gt; that describes this component. It will be passed to this
component in the &lt;code&gt;options&lt;/code&gt; property. This exercise is left for the reader, or
you can simply gut the changeHandler and rewrite it to serve your purposes.&lt;/p&gt;

&lt;p&gt;Next is the annotated code for the image component. It is mostly complete, but
error handling is left to the reader as an exercise.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React, { PropTypes } from &#39;react&#39;;
import { FormGroup, ControlLabel, FormControl, ProgressBar,
  Image, HelpBlock, ListGroup, ListGroupItem } from &#39;react-bootstrap&#39;;

export const PictureSelectionWidget = React.createClass({

  // define transient state that aids in displaying the component,
  // e.g. whether upload is in progress.
  getInitialState() {
    return {
      uploadInProgress: false  
    };
  },

  // this is passed to the input component, in this case a &#39;file&#39; control.
  // It actually uploads the file and sets the formData to the result.
  changeHandler(event) {
    const {
      onChange,  // passed in from the Form. Always call this in a handler.
      options  // ui:options in uiSchema for this widget
    } = this.props;

    // These come up ui:options in the uiSchema for this widget.
    const { uploadPath, uploadHost } = options;
    const f = event.target.files[0]; // grab the File object from the InputControl.

    // check to make sure we have an image file. A complete implementation would
    // signal an error if the user passed in something that wasn&#39;t.
    if (f.type.match(&#39;image.*&#39;)) {
      let headers = new Headers();

      // the user&#39;s authorization token if it is present.
      // Assume it&#39;s kept in localStorage.
      const authToken = localStorage.auth_token;  
      if(authToken) {
        headers.append(&#39;Authorization&#39;, `Bearer ${authToken}`);
      }

      // This is the &amp;quot;body&amp;quot; of the fetch. We will append the file.
      let formData = new FormData();
      formData.append(&#39;file&#39;, f);

      // This forms the fetch request and options.
      const requestOptions = {
        mode: &#39;cors&#39;,  // handle cross-origin requests gracefully,
        method: &#39;POST&#39;,  // make a POST request
        body: formData,  // append the file
        headers  // add the user&#39;s auth token to the request.
      };

      // fetch is an asynchronous API. This is the last statement that executes
      // fully before the handler returns control to its caller. We indicate
      // here that an upload has started.
      this.setState({uploadInProgress: true});

      // make the asynchronous request. For programmers more familiar with
      // callback syntax the &amp;quot;success&amp;quot; callback is the &amp;quot;then&amp;quot; and the error is
      // the &amp;quot;catch&amp;quot;.
      fetch(`${uploadHost}${uploadPath}`, requestOptions).then((rsp) =&amp;gt; {

        // still have to make sure that the code was a 2xx. &amp;quot;errors&amp;quot; are quirky
        // and need a full read of Fetch docs.
        if(rsp.ok) {

          rsp.text().then(downloadUrl =&amp;gt; {

            // call the react-jsonschema-form onChange method, which updates the
            // formData in the parents and all the way up the tree.
            // THIS MUST HAPPEN IN EVERY CUSTOM COMPONENT!
            onChange(downloadUrl);  

          });
        } else {

          // woefully inadequate error handling.
          console.error(rsp);
        }
        // resolve the upload as complete in the component state.
        this.setState({uploadInProgress: false});  
      }).catch(err =&amp;gt; {
        console.error(err);  // did i mention you should write error handling?
        // resolve the upload as complete in the component state.
        this.setState({uploadInProgress: false});
      });  
    }
  },

  render() {
    const {
      schema,  // ONLY the fragment that this widget represents.
               // { &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;represents&amp;quot;: &amp;quot;image&amp;quot;, ... }
      placeholder,  // from react-jsonschema-form uiSchema
      value,        // from react-jsonschema-form, the actual value that goes in the JSON.
      readonly,     // from react-jsonschema-form uiSchema &amp;quot;ui:readonly&amp;quot;
      options       // from react-jsonschema-form uiSchema &amp;quot;ui:options&amp;quot;
    } = this.props;

    // set in changeHandler when an upload starts and when it completes.
    const { uploadInProgress } = this.state;
    const imageUrl = formData || value;

    // render the image if the &amp;quot;value&amp;quot; is not null.
    let img = (&amp;lt;div&amp;gt;No Image&amp;lt;/div&amp;gt;);
    if(imageUrl) {
      img = (&amp;lt;Image src={imageUrl} thumbnail /&amp;gt;);
    }

    // An empty array will serve in place of a &amp;quot;null&amp;quot; for React&#39;s rendering engine.
    // Render a progress bar if we are waiting on the file upload to finish.
    const progressBar = uploadInProgress ? (&amp;lt;ProgressBar now={80} animated /&amp;gt;) : [];

    // A readonly file control is meaningless, and we have to render the image
    // separately anyway, so just omit the file control if we are readonly.
    const inputControl = readonly ? [] : (&amp;lt;FormControl type=&#39;file&#39; onChange={this.changeHandler} /&amp;gt;);

    return (&amp;lt;FormGroup&amp;gt;
      {img}
      {progressBar}
      {inputControl}
    &amp;lt;/FormGroup&amp;gt;);
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When filled out, the widget looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://jeffersonheard.github.io/img/post/imagewidget-screenshot.jpg&#34; height=&#34;480&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;building-a-custom-field-for-geometry&#34;&gt;Building a custom field for geometry&lt;/h2&gt;

&lt;p&gt;Geometry is not a &amp;ldquo;simple&amp;rdquo; type in JSON.  GeoJSON is a JSON format that describes
a physical location and comes in the form of an object rather than a piece of
text. When dealing with data that is a composite, either an array or an object,
you define a &amp;ldquo;field&amp;rdquo; instead of a &amp;ldquo;widget&amp;rdquo;&lt;/p&gt;

&lt;p&gt;In this section, we&amp;rsquo;ll create such a field. Our GeoPosition field will be very
simplistic.  If you were developing for mobile, you might make it a simple
button that ties to &lt;code&gt;navigator.getCurrentPosition&lt;/code&gt;. Or you might make it a map
via &lt;a href=&#34;https://leafletjs.com&#34;&gt;Leaflet&lt;/a&gt; and allow someone to construct a geometry
by hand.  Here we will make it two text boxes with a link to display on a map.&lt;/p&gt;

&lt;p&gt;Like a widget, a field is just a React component.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export const GeoPositionField = React.createClass({
  onChange(name) {
    return (event) =&amp;gt; {
      let data = _.has(this.props.formData, &#39;coordinates&#39;)
        ? this.props.formData
        : {type: &#39;Point&#39;, coordinates: [0, 0]};

      const [x, y] = data.coordinates;
      let number = event.target.value ? _.toNumber(event.target.value) : 0;
      number = _.isNaN(number) ? 0 : number;

      if(name === &#39;lon&#39;) {
        data = {coordinates: [number, y]};
      } else { // if(name === &#39;lat&#39;) {
        data = {coordinates: [x, number]};
      }

      // just like in the widget definition.
      this.props.onChange(this.state);  
    };
  },

  render() {
    let lon = 0;
    let lat = 0;
    let geoURL = [];

    // if our data is non-null
    if(_.has(this.props, &#39;formData.coordinates&#39;) &amp;amp;&amp;amp; _.isArray(this.props.formData.coordinates)) {
      // set lon and lat. used later as well.
      [lon, lat] = this.props.formData.coordinates;

      // build a URL to open Google maps in a new window.
      if(_.has(window, &#39;device&#39;) &amp;amp;&amp;amp; window.device.platform === &#39;Android&#39;) {
        geoURL = (&amp;lt;a href={`geo:${lat},${lon}`}&amp;gt;Open in Map&amp;lt;/a&amp;gt;);
      } else {
        geoURL = (&amp;lt;a target=&#39;_blank&#39; href={`https://maps.google.com/?ll=${lat},${lon}`}&amp;gt;Open in Map&amp;lt;/a&amp;gt;);
      }
    }

    // Note that here we set the labels up. Since we are defining the field
    // ourselves, we have to to labeling and help ourselves.
    return (
      &amp;lt;div className=&amp;quot;geo&amp;quot;&amp;gt;
        &amp;lt;label&amp;gt;Location&amp;lt;/label&amp;gt;
        &amp;lt;div className=&amp;quot;well&amp;quot;&amp;gt;
        &amp;lt;div className=&amp;quot;row&amp;quot;&amp;gt;
          &amp;lt;div className=&amp;quot;col-xs-6&amp;quot;&amp;gt;
            &amp;lt;label&amp;gt;Longitude&amp;lt;/label&amp;gt;
            &amp;lt;input className=&amp;quot;form-control&amp;quot; type=&amp;quot;number&amp;quot; value={lon} step=&amp;quot;0.00001&amp;quot;
              onChange={this.onChange(&amp;quot;lon&amp;quot;)} /&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div className=&amp;quot;col-xs-6&amp;quot;&amp;gt;
            &amp;lt;label&amp;gt;Latitude&amp;lt;/label&amp;gt;
            &amp;lt;input className=&amp;quot;form-control&amp;quot; type=&amp;quot;number&amp;quot; value={lat} step=&amp;quot;0.00001&amp;quot;
              onChange={this.onChange(&amp;quot;lat&amp;quot;)} /&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div className=&amp;quot;row&amp;quot;&amp;gt;
          &amp;lt;div className=&amp;quot;col-xs-12&amp;quot;&amp;gt;
            {geoURL}
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The main difference between a Field and a Widget, then, is to what it attaches
in the schema. The other notable difference is that labeling and help have to
be handled in the field definition, where they do not in the widget definition.&lt;/p&gt;

&lt;h2 id=&#34;using-the-widget-and-fields-in-your-ui&#34;&gt;Using the widget and fields in your ui&lt;/h2&gt;

&lt;h3 id=&#34;explicit-declaration&#34;&gt;Explicit declaration&lt;/h3&gt;

&lt;p&gt;You can explicitly use the new widget and field in your UI by registering it and
creating a &lt;code&gt;uiSchema&lt;/code&gt; that contains it. The other common way is to use a
function that processes schemata and searches for metadata attributes, like our
&amp;ldquo;represents&amp;rdquo; schema from the beginning of this post.  Let&amp;rsquo;s start with explicit,
though:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const schema = {
  type: &amp;quot;object&amp;quot;,
  properties: {
    image: {
      type: &amp;quot;object&amp;quot;,
      properties: {
        imageUrl: {
          type: &amp;quot;string&amp;quot;,
          represents: &amp;quot;image&amp;quot;,
          uploadHost: &amp;quot;http://localhost:8080&amp;quot;,
          uploadPath: &amp;quot;/upload&amp;quot;
        },
        location: {
          type: &amp;quot;object&amp;quot;,
          represents: &amp;quot;geom&amp;quot;,
          geomType: &amp;quot;Point&amp;quot;,
          geomProj: &amp;quot;EPSG:4326&amp;quot;
        }
      }
    },

  }
};

const uiSchema = {
  image: {
    imageUrl: {
      &amp;quot;ui:widget&amp;quot;: PictureSelectionWidget,
      &amp;quot;ui:options&amp;quot;: {
        uploadHost: &amp;quot;http://localhost:8080&amp;quot;,
        uploadPath: &amp;quot;/upload&amp;quot;
      }
    }
    location: {
      &amp;quot;ui:field&amp;quot;: GeoPositionField,
      &amp;quot;ui:options&amp;quot;: {
        geomType: &amp;quot;Point&amp;quot;,
        geomProj: &amp;quot;EPSG:4326&amp;quot;,
      }
    }
  }
}

render((
  &amp;lt;Form schema={schema}
        uiSchema={uiSchema} /&amp;gt;
), document.getElementById(&amp;quot;app&amp;quot;));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here we have copied the &lt;code&gt;uploadHost&lt;/code&gt; and &lt;code&gt;uploadPath&lt;/code&gt; and geometry metadata
properties by hand into the options. In an automatic ui function, one would
process the schema and copy those programmatically. By the way, the Form does
allow you to specify a field and widget registry. In that case, your uiSchema
can refer to the widget by string name instead of having to pass in the class.
If your ui schemas need to be loaded from URLs or JSON strings, this will be
helpful.&lt;/p&gt;

&lt;h3 id=&#34;programmatic-declaration&#34;&gt;Programmatic declaration&lt;/h3&gt;

&lt;p&gt;Now let&amp;rsquo;s see what a schema processing function might look like.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import _ from &#39;lodash&#39;;  // use lodash.js to simplify our code.  see https://lodash.com

// this function searches properties for
function autoProp(uiSchema, prop, name, isArray) {
  switch(prop.represents) {
    case &amp;quot;image&amp;quot;:
      uiSchema[name] = {
        &amp;quot;ui:widget&amp;quot;: PictureSelectionField,
        &amp;quot;ui:options&amp;quot;: {
          uploadHost: prop.uploadHost,
          uploadPath: prop.uploadPath
        }
      };
      break;    
      // add other cases for your user defined fields here.
    default:
      break;
  }
}

// recursively explore schemas and fill their properties in.  Does not handle
// external references, only references to the &amp;quot;definitions&amp;quot; section in the
// schema.
export function autoUiSchema(schema) {
 let uiSchema = {};
 if(_.has(schema, &#39;properties&#39;)) {
   _.forEach(schema.properties, (prop, name) =&amp;gt;

     // recursively iterate through properties with nested objects.
     if(prop.type === &#39;object&#39;) {
       if(_.has(prop, &#39;represents&#39;) &amp;amp;&amp;amp; prop.represents === &amp;quot;geom&amp;quot;) {  
         uiSchema[name] = {
           &#39;ui:field&#39;: GeoJSONField,
           &amp;quot;ui:options&amp;quot;: {geomType: prop.geomType, geomProj: props.geomProj}};
       } else {
         uiSchema[name] = autoUiSchema(prop);
       }
     } else if(prop.type === &#39;array&#39;) {  // handle arrays by processing &amp;quot;items&amp;quot;
      if(_.has(prop.items, &amp;quot;$ref&amp;quot;)) {  
        // splice the schema from the $ref in and process as if it was inline.
        let subschema = _.assign({},
          {definitions: schema.definitions},
          schema.definitions[prop.items.$ref.split(&#39;/&#39;)[2]]
        );
        uiSchema[name] = {items: autoUiSchema(subschema)};
      } else if(prop.items.type === &#39;object&#39;) {
        // recurse into objects
        uiSchema[name] = {items: autoUiSchema(prop.items)};
      } else {
        // otherwise it&#39;s a simple property
        autoProp(uiSchema, prop.items, name, true);
      }
    } else if(_.has(prop, &#39;$ref&#39;)) {
      // handle an internal reference. the same way we handled it in array.
      let subschema = _.assign({},
        {definitions: schema.definitions},
        schema.definitions[prop.$ref.split(&#39;/&#39;)[2]]);

      // now recurse into the spliced schema
      uiSchema[name] = autoUiSchema(subschema);
    } else {
      // if we make it here, our property is a simple property. Check and see if
      // its metadata is something we can process.
      autoProp(uiSchema, prop, name);
    }
   });
 }
 return uiSchema;
}

// in real life this would be a component of some kind.
render((
  &amp;lt;Form schema={schema}
        uiSchema={autoUiSchema(schema)} /&amp;gt;
), document.getElementById(&amp;quot;app&amp;quot;));

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These functions really just require reading the annotations. However, as an
overview, the &lt;code&gt;autoProp&lt;/code&gt; function is called at a &amp;ldquo;leaf&amp;rdquo; node of the schema,
and always by &lt;code&gt;autoUiSchema&lt;/code&gt;.  The developer then calls &lt;code&gt;autoUiSchema&lt;/code&gt; with the
schema itself and gets a proper ui schema back.&lt;/p&gt;

&lt;p&gt;Note that this is often not quite enough to define a uiSchema. You may well want
to customize the schema further after doing everything that can be automated.&lt;/p&gt;

&lt;p&gt;These functions are general enough, but not to the point of being &amp;ldquo;general use&amp;rdquo;.
You will have to adapt them to your own purposes. In particular, responsive
applications where certain data can be input by sensors on a mobile device, but
must be entered by hand on a laptop browser may require different functions or
post processing the ui schema to handle every case well.&lt;/p&gt;

&lt;p&gt;Please feel free to ask me any questions or submit corrections to my code here.
I have adapted this code from my own projects, and although it works in those
projects, deletion and cleanup in the post may have introduced errors
unintentionally.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hydroshare, Part 1: Overview of a long project</title>
      <link>https://jeffersonheard.github.io/2016/11/hydroshare-part-1-overview-of-a-long-project/</link>
      <pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/11/hydroshare-part-1-overview-of-a-long-project/</guid>
      <description>

&lt;p&gt;The last project I worked on at UNC was as Chief Software Architect of the
&lt;a href=&#34;https://www.hydroshare.org&#34;&gt;Hydroshare&lt;/a&gt; project. It was the most challenging
exercise I ever undertook at UNC, and I&amp;rsquo;m proudest of it, despite the fact that
I can&amp;rsquo;t claim to have done everything &lt;em&gt;right&lt;/em&gt;. In fact I made some blunders,
but ones I hope I&amp;rsquo;ve learned from.&lt;/p&gt;

&lt;p&gt;I left the Hydroshare project after I believed that it was on the right path,
and handed my role off to two of the brightest people I know in software
management and development at &lt;a href=&#34;http://www.renci.org&#34;&gt;Renci&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This will be the first post in a series of posts about the unique experiences of
Hydroshare, and what I think it can teach us about building and organizing
better teams.&lt;/p&gt;

&lt;h2 id=&#34;the-hydroshare-system&#34;&gt;The Hydroshare System&lt;/h2&gt;

&lt;p&gt;Hydroshare is essentially a content management system (CMS), like WordPress or
Drupal, but on a particular brand of steroids. Where most CMSes are backed by a
CDN (content distribution network) and a database and possibly a block store
such as Amazon S3, this one had to be different to accommodate distributed
computing resources and the management and curation of datasets and real-time
data streams that sometimes breach the terabyte size boundary.&lt;/p&gt;

&lt;p&gt;Because of these and their consequent hosting requirements, nearness to compute
resources, and rules about data provenance, developing a truly custom solution
was essential.&lt;/p&gt;

&lt;h2 id=&#34;challenge-a-distributed-fluid-heterogenous-team&#34;&gt;Challenge: A distributed, fluid, heterogenous team&lt;/h2&gt;

&lt;p&gt;I would say my greatest challenge professionally is learning how to train
people. No project before or since Hydroshare has ever given me as much
experience training people to work together on a software project.&lt;/p&gt;

&lt;p&gt;Let me start off by saying that the Hydroshare team was in most ways
exceptional. The team and the experience with Hydroshare taught me the value of
building teams that include non-software people in development roles, just as
they are often included in &amp;ldquo;high-level&amp;rdquo; roles. My experience with including
&amp;ldquo;gifted amateurs&amp;rdquo; on the Hydroshare team was that they often thought and thus
wrote code in fundamentally different ways from the seasoned developers did, and
that even on those occasions (not as often as you might think) that we rewrote
their code to fit into the overall vision, we learned what assumptions we were
making and built more usable, well-thought out software.&lt;/p&gt;

&lt;p&gt;The Hydroshare team was scattered across universities in every timezone in the
US. San Diego, two Utah locations, Indiana, North Carolina, and Virginia (and
I might be missing one!). Software development was mostly by graduate students
and postdocs in hydrology, not computer science.&lt;/p&gt;

&lt;p&gt;The team, therefore, consisted largely of people doing their own research and
devoting only a small part of their time to Hydroshare. Most team members
initially wanted to contribute their hydrology research to the project and avoid
core software development. To be clear, advanced software development &lt;em&gt;was&lt;/em&gt; a
distraction from their work. Why would a hydrologist need to know anything about
building web-services or integrating with a content management system?&lt;/p&gt;

&lt;p&gt;Every person on our team who was not a software person was an eventual end-user
of the application. I think that, if nothing else, gave people the motivation to
learn more about writing code than they normally would. Our team consisted
largely of data scientists. All of them had some rudimentary or even intermediate
knowledge of R or Python and understood the purpose of self-contained scripts.&lt;/p&gt;

&lt;p&gt;In addition, most everyone had a development environment of &lt;em&gt;some&lt;/em&gt; sort set up
on their laptops by the time that we got going. This proved both a help and a
hindrance, as the team knew enough to code their way, and in their own
environment, which saved time explaining basics.  But the major challenge it
left was the complete lack of portability of one person&amp;rsquo;s development
environment to the next.&lt;/p&gt;

&lt;h3 id=&#34;running-while-we-learned-to-walk&#34;&gt;Running while we learned to walk&lt;/h3&gt;

&lt;p&gt;One of the key points I will stress is that there &lt;strong&gt;is&lt;/strong&gt; an effective way to
manage a team like this, and that including non-software people does not equate
to a slower development process.&lt;/p&gt;

&lt;p&gt;Hydroshare, when I came to it, was 18 months along. Another way to put this was
that it was 18 months behind, but that isn&amp;rsquo;t entirely accurate. The team had
assembled a prototype from Drupal, but had gone as far as they could with it.
It would be necessary for the success of Hydroshare to scrap the prototype and
take things in a different direction, now that everyone knew what it was they
wanted, at a basic level.&lt;/p&gt;

&lt;p&gt;Initially, the leaders were loathe to &amp;ldquo;throw so much away,&amp;rdquo; but in the end the
enthusiasm of the core team for the new direction convinced everyone that we
were doing the right thing. This meant &amp;ldquo;starting from scratch&amp;rdquo; 18 months into a
five year project, but the team caught up and delivered on its milestones after
the retooling.&lt;/p&gt;

&lt;p&gt;The keys to this success were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use distributed project management tools &lt;strong&gt;effectively&lt;/strong&gt;&lt;/strong&gt;. (I stress the
word &amp;ldquo;effectively&amp;rdquo; because for a time we over-used these tools and leaned on
them too heavily, exaggerating their weaknesses as well as their strengths.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use the overlap&lt;/strong&gt; between the knowledge our developers already had through
their domain work, and the needs of full-stack software development.**&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Spend in-person time wisely&lt;/strong&gt;, on training and &amp;ldquo;code crunches&amp;rdquo; based around
features or details that require lots of coordination.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not that we got all of that right. In particular, the last part was hard to get
to. The project&amp;rsquo;s overall leadership was terrified of being 18 months behind,
and I spent a lot of time in &amp;ldquo;weekly agile standup postmortems&amp;rdquo; I don&amp;rsquo;t even
know what that means, still, but they were generally two to three hour meetings
where the leadership went painstakingly over every item in the project
management system (something some consultant put us onto whose name I don&amp;rsquo;t
recall, but was well loved by Agile consultants at the time) whether or not
anything changed or even if it wasn&amp;rsquo;t supposed to.&lt;/p&gt;

&lt;h3 id=&#34;managing-distributed-development&#34;&gt;Managing distributed development&lt;/h3&gt;

&lt;p&gt;We used a number of project management tools meant for Agile development. I have
to say I was not that fond of any of them. In the end, I think our best toolset
was a combination of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;List building on &lt;a href=&#34;https://www.trello.com&#34;&gt;Trello&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A shared document and discussion space. We used Drive and Google Docs, but now
that Slack is around I&amp;rsquo;d probably choose that.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A weekly developer meeting separate from the management meeting, where all
questions were fair game, and managers didn&amp;rsquo;t have to feel anxious about the
&amp;ldquo;sausage making&amp;rdquo;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Trello is sophisticated enough for most isolated projects. Actually, it&amp;rsquo;s hard
to imagine a project where Trello can&amp;rsquo;t be made to work, but I think Hydroshare
and projects like it is its sweet spot.  We could assign tasks, create due dates,
use the API to generate reports and even integrate Trello and GitHub a bit. It
worked.&lt;/p&gt;

&lt;p&gt;Despite the fact that I couldn&amp;rsquo;t get the management meeting pared down below two
hours, we did manage to come to the consensus that taking up valuable developer
time in managerial sausage-making was unproductive. The developers got split out
from the project leaders, and were spared from having to listen to planning that
was irrelevant to the thing they were working on.&lt;/p&gt;

&lt;h3 id=&#34;finding-and-using-the-overlap&#34;&gt;Finding and Using the Overlap&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;ll go over this in more detail on a later post, but I want to highlight that
everyone on our team had some, even if only minimal, software development
experience or interest. Some people were comfortable with R. Others wrote
extensive models using Excel. Still others wrote high performance code in C
surrounding simulation and environmental process modeling. But all of these
people shared the ability to look at a problem methodically and break it down
into tasks and sequence those tasks into steps.&lt;/p&gt;

&lt;p&gt;This common ground proved the essential thing that made us work together as
developer and scientist alike. In the end, it was a matter of polling the group
for the technologies the most felt most comfortable with, and making sure that
everyone knew that programming knowledge and insights were for sharing. The
scientists were encouraged to learn from each other and not treat the coders as
&amp;ldquo;special&amp;rdquo; or &amp;ldquo;keepers of the keys.&amp;rdquo; I think this encouraged a more collegial
atmosphere, and prevented two-thirds of our team from being &amp;ldquo;requirements-
generators&amp;rdquo; instead of &amp;ldquo;contributors&amp;rdquo;&lt;/p&gt;

&lt;p&gt;This way, the team was often self-training. There were concepts that the
software engineers had to introduce, and had to direct development on a broad
level, but for day to day work, it was of little importance that an individual
scientist was unaware of certain algorithms, scalability issues, or other
fundamentals. We were able to architect the software at a high level to be
forgiving of ongoing contributions.&lt;/p&gt;

&lt;p&gt;The training we did do brought everyone together and focused on specific
technologies that were needed to do the job, and stressed their importance as
part of the whole. Because of the way it was contexualized, it was more of a
training of &amp;ldquo;how to develop Hydroshare&amp;rdquo; than &amp;ldquo;full stack development 101,&amp;rdquo; or
&amp;ldquo;Javascript basics,&amp;rdquo; or &amp;ldquo;A complete beginner&amp;rsquo;s guide to Django.&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;spending-in-person-time-wisely&#34;&gt;Spending In-Person Time Wisely.&lt;/h3&gt;

&lt;p&gt;We had a few &amp;ldquo;code crunches&amp;rdquo; or &amp;ldquo;hackathons&amp;rdquo; as part of the Hydroshare project.
These varied in their effectiveness, but I want to talk the effective ones
from a software development point of view.&lt;/p&gt;

&lt;p&gt;Where we were most effective, we broke into small teams centered around a
feature, including at least one &amp;ldquo;software person&amp;rdquo; with each team of scientists.
The features and functionalities that lent themselves most to code crunches were
things that were not yet fleshed out, and that required detail and in-person
conversation to understand. Often these were things that the scientists
understood in terms of their methods, but had never thought of procedurally or
functionally.&lt;/p&gt;

&lt;p&gt;Then the conversation became both &amp;ldquo;speccing&amp;rdquo; and a certain amount of training
(two ways) as the scientist-developers engaged with the software  developers.
For the software developers, understanding from a deeper level about the users
and the processes we were modeling was helpful in deciding metaphors for
usability and for deciding whether the overall architecture would accommodate
the cases they brought up. For the domain professionals, the scientists,
learning more about coding both helped their ability to express features and
requirements in a software-friendly way, and of course it improved their ability
to contribute directly.&lt;/p&gt;

&lt;h2 id=&#34;next&#34;&gt;Next&lt;/h2&gt;

&lt;p&gt;To make an effective software team, we needed an effective toolchain. The next
post will cover the toolchain, my reasons for selecting and promoting the
technologies I did, and what went well and what was challenging about the stack.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An Intro to Sondra: Part 4</title>
      <link>https://jeffersonheard.github.io/2016/11/an-intro-to-sondra-part-4/</link>
      <pubDate>Sun, 20 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/11/an-intro-to-sondra-part-4/</guid>
      <description>

&lt;h2 id=&#34;adding-data-in-python&#34;&gt;Adding data in Python&lt;/h2&gt;

&lt;p&gt;The simplest way to add data is through Python.  Data can be added from Python
even to private collections, and methods can be called without authentication.
This means that code that calls methods and creates objects, perhaps as part of
other methods, should do sufficient permission checking to cover both itself and
the potential mutations to data caused by the methods and collections it calls.&lt;/p&gt;

&lt;p&gt;Assuming our suite is in an object called &lt;code&gt;api&lt;/code&gt;, this is how we add data:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; api[&#39;todo-app&#39;][&#39;items&#39;].create({
...     &amp;quot;title&amp;quot;: &amp;quot;Remember the milk.&amp;quot;,
...     &amp;quot;created&amp;quot;: datetime.utcnow()
... })
&amp;lt;examples.todo.Item object at 0x10f611160&amp;gt;

&amp;gt;&amp;gt;&amp;gt; next(iter(api[&#39;todo-app&#39;][&#39;items&#39;]))
&#39;642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The second line demonstrates that Sondra indeed follows the dict pattern closely.  Getting an
iterator over the collection returns a generator that yields keys. This is done via a single
cursor, and is thus very efficient.  You can also use &lt;code&gt;.keys()&lt;/code&gt; and &lt;code&gt;.values()&lt;/code&gt; and even &lt;code&gt;.items()&lt;/code&gt;
as you expect to, yielding primary keys, Document objects, and pairs as they are supposed to.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; items = api[&#39;todo-app&#39;][&#39;items&#39;]
&amp;gt;&amp;gt;&amp;gt; len(items)
1
&amp;gt;&amp;gt;&amp;gt; items.keys()
KeysView(&amp;lt;examples.todo.Items object at 0x110d40a90&amp;gt;)
&amp;gt;&amp;gt;&amp;gt; items.values()
ValuesView(&amp;lt;examples.todo.Items object at 0x110d40a90&amp;gt;)
&amp;gt;&amp;gt;&amp;gt; items.items()
ItemsView(&amp;lt;examples.todo.Items object at 0x110d40a90&amp;gt;)
&amp;gt;&amp;gt;&amp;gt; &#39;642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39; in items
True
&amp;gt;&amp;gt;&amp;gt; items[&#39;642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39;] in items
True
&amp;gt;&amp;gt;&amp;gt; first_item = items[&#39;642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39;]
&amp;gt;&amp;gt;&amp;gt; first_item
&amp;lt;examples.todo.Item object at 0x10f611160&amp;gt;
&amp;gt;&amp;gt;&amp;gt; first_item.obj
OrderedDict([(&#39;complete&#39;, False), (&#39;created&#39;, &#39;2016-10-13T18:45:08.255000+00:00&#39;),
    (&#39;title&#39;, &#39;Remember the milk.&#39;), (&#39;id&#39;, &#39;642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39;)])
&amp;gt;&amp;gt;&amp;gt; first_item == &#39;642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39;
True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last line deserves some explanation. An item is always equal to its primary key, even though we
are really comparing strings and objects. This may be counterintuitive, but it makes for fewer
queries internally and is thus more efficient than the obvious implementation.&lt;/p&gt;

&lt;p&gt;Another thing to note is that Sondra takes care to map data to its proper datatype whenever possible.
There&amp;rsquo;s a little &amp;ldquo;magic&amp;rdquo; in this, but it is explained deeper in the documentation.  For example,
let&amp;rsquo;s look at our &amp;ldquo;created&amp;rdquo; attribute:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; first_item[&#39;created&#39;]

datetime.datetime(2016, 10, 20, 16, 21, 54, 546629)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sondra uses &amp;ldquo;value handlers&amp;rdquo;, found in the &lt;code&gt;sondra.documents.valuehandlers&lt;/code&gt; section of the sondra
code to translate between Python datatypes, JSON datatypes, and RethinkDB datatypes. To determine
the datatype, you need look no further than the schema itself. The following shows what schema
attributes  Sondra uses to treat values specially:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{... &amp;quot;format&amp;quot;: &amp;quot;date-time&amp;quot;}&lt;/code&gt; - Handled as a Python datetime, JSON string, RethinkDB date.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{... &amp;quot;geo&amp;quot;: true}&lt;/code&gt; - Handled as a Python dict-like object (a geometry object if Shapely is installed,
otherwise it will fall back to a dict), JSON object (as GeoJSON geometry), RethinkDB geometry
type.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sondra is compatible with the base datetime library and with &lt;a href=&#34;http://crsmithdev.com/arrow/&#34;&gt;arrow&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;adding-and-accessing-data-over-http-s&#34;&gt;Adding and accessing data over HTTP(S)&lt;/h2&gt;

&lt;p&gt;For this section, we&amp;rsquo;re going to assume you will get around to authentication. A basic
authentication and authorization app exists in the Sondra codebase, but you will probably want to
use other, more well-tested frameworks to handle authentication and authorization of web requests in
Flask. This is just fine and well supported. For now, we will assume that a POST will work without
authorization, so you can follow the tutorial without reading extra material.&lt;/p&gt;

&lt;p&gt;Sondra is fairly standard when it comes to REST metaphors, but for reference, here is how HTTP
commands map to operations on the API:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt; - &lt;strong&gt;Retrieve&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Retrieve a document,&lt;/li&gt;
&lt;li&gt;list of documents, or&lt;/li&gt;
&lt;li&gt;make a simple method call&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POST&lt;/code&gt; - &lt;strong&gt;Add or Replace&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Add items to a collection.&lt;/li&gt;
&lt;li&gt;Replace an existing document.&lt;/li&gt;
&lt;li&gt;Make a more complex method call.&lt;/li&gt;
&lt;li&gt;As a special case, you can use JSON to map any of the other commands to a POST. More details in
the source code or the detailed documentation to come.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PUT&lt;/code&gt; - &lt;strong&gt;Replace&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Replace items in a collection.&lt;/li&gt;
&lt;li&gt;Replace an existing document.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PATCH&lt;/code&gt; - &lt;strong&gt;Update in Place&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Make updates to items in a collection.&lt;/li&gt;
&lt;li&gt;Make updates to a single document. (Merges dicts to create updates)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DELETE&lt;/code&gt; - &lt;strong&gt;Delete&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Delete items from a collection. Delete a single document.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;rsquo;ll use the Python requests library. By default, Flask exposes itself over port 5000 on localhost,
so that&amp;rsquo;s the assumption we will make. We will also make the assumption that you are &lt;em&gt;not&lt;/em&gt; changing
the default api base path, which is simply &lt;code&gt;api&lt;/code&gt;.  First, let&amp;rsquo;s get the record we&amp;rsquo;ve already
created:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; rsp = requests.get(&#39;http://localhost:5000/api/todo-app/items&#39;)
&amp;gt;&amp;gt;&amp;gt; rsp.json

[{&#39;id&#39;: &#39;642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39;, &#39;complete&#39;: False,
  &#39;created&#39;: &#39;2016-10-13T18:45:08.255000+00:00&#39;, &#39;title&#39;, &#39;Remember the milk.&#39;}]

&amp;gt;&amp;gt;&amp;gt; requests.get(&#39;http://localhost:5000/api/todo-app/items/642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39;).json()

{&#39;id&#39;: &#39;642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39;, &#39;complete&#39;: False,
 &#39;created&#39;: &#39;2016-10-13T18:45:08.255000+00:00&#39;, &#39;title&#39;, &#39;Remember the milk.&#39;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now how about adding data?  Let&amp;rsquo;s actually use an example in Javascript, since that&amp;rsquo;s how an API
like this will most commonly be used.  Here we&amp;rsquo;re using the &amp;ldquo;fetch&amp;rdquo; API, but you could do the same
with a standard XMLHttpRequest.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Javascript&#34;&gt;fetch(&#39;http://localhost:5000/api/todo-app/items&#39;, {
  method: &#39;POST&#39;,
  mode: &#39;cors&#39;,
  body: JSON.stringify({
    title: &#39;Remember the cheese&#39;,
    complete: false,
    created: new Date()
  })
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;replace-the-document-on-the-server&#34;&gt;Replace the document on the server&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-Javascript&#34;&gt;fetch(&#39;http://localhost:5000/api/todo-app/items/642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39;, {
  method: &#39;POST&#39;,
  mode: &#39;cors&#39;,
  body: JSON.stringify({
    title: &#39;Remember the milk&#39;,
    complete: true,
    created: new Date()
  })
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will actually replace the document with the given ID. If you omit any properties from the
document, they will be omitted in the replacement, since this effectively destroys the old copy and
puts a new one in its place on the database.  What if we just want to say that the item has been
completed?  After all, we don&amp;rsquo;t want to update the &amp;ldquo;created&amp;rdquo; field, since now the data is wrong.&lt;/p&gt;

&lt;h3 id=&#34;update-properties-on-the-document-on-the-server&#34;&gt;Update properties on the document on the server.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-Javascript&#34;&gt;fetch(&#39;http://localhost:5000/api/todo-app/items/642478b1-03bb-45e2-9f6d-e90e90d1b7cf&#39;, {
  method: &#39;PATCH&#39;,
  mode: &#39;cors&#39;,
  body: JSON.stringify({complete: true})
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;PATCH&lt;/code&gt; method only updates the properties that you give to the request, leaving the others
unchanged.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An Intro to Sondra: Part 3</title>
      <link>https://jeffersonheard.github.io/2016/11/an-intro-to-sondra-part-3/</link>
      <pubDate>Fri, 18 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/11/an-intro-to-sondra-part-3/</guid>
      <description>

&lt;h2 id=&#34;accessing-schemas&#34;&gt;Accessing Schemas&lt;/h2&gt;

&lt;p&gt;If you missed them, see my previous tutorials covering
&lt;a href=&#34;tutorial-1&#34;&gt;first steps into Sondra&lt;/a&gt; and &lt;a href=&#34;tutorial-2&#34;&gt;exposing your API to the web&lt;/a&gt;.
This tutorial will cover accessing the JSON-Schema that underlies the API. All Sondra
APIs are based on JSON-Schema, and dictate not only what the documents must look like
coming in and out of Sondra, but also how to access method calls and query datasets.&lt;/p&gt;

&lt;p&gt;First, let&amp;rsquo;s start out with a simple call to the schema endpoint. A schema endpoint can
be accessed from every level of the API including suite, application, collection, and
document (although document schemas are typically the same as collection schemas).&lt;/p&gt;

&lt;h3 id=&#34;schema-endpoints&#34;&gt;Schema Endpoints&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s look at this in a browser. Run the module in a terminal window, open your favorite browser, and
surf to &lt;a href=&#34;http://localhost:5000/api;schema&#34;&gt;http://localhost:5000/api;schema&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;title&amp;quot;: &amp;quot;Sondra-Based API&amp;quot;,
    &amp;quot;definitions&amp;quot;: {
        &amp;quot;filterOps&amp;quot;: {
            &amp;quot;enum&amp;quot;: [
                &amp;quot;with_fields&amp;quot;,
                &amp;quot;count&amp;quot;,
                &amp;quot;max&amp;quot;,
                &amp;quot;min&amp;quot;,
                &amp;quot;avg&amp;quot;,
                &amp;quot;sample&amp;quot;,
                &amp;quot;sum&amp;quot;,
                &amp;quot;distinct&amp;quot;,
                &amp;quot;contains&amp;quot;,
                &amp;quot;pluck&amp;quot;,
                &amp;quot;without&amp;quot;,
                &amp;quot;has_fields&amp;quot;,
                &amp;quot;order_by&amp;quot;,
                &amp;quot;between&amp;quot;
            ]
        },
        &amp;quot;timedelta&amp;quot;: {
            &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
            &amp;quot;required&amp;quot;: [
                &amp;quot;start&amp;quot;,
                &amp;quot;end&amp;quot;
            ],
            &amp;quot;properties&amp;quot;: {
                &amp;quot;hours&amp;quot;: {
                    &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;
                },
                &amp;quot;days&amp;quot;: {
                    &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;
                },
                &amp;quot;seconds&amp;quot;: {
                    &amp;quot;type&amp;quot;: &amp;quot;number&amp;quot;
                },
                &amp;quot;minutes&amp;quot;: {
                    &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;
                }
            }
        },
        &amp;quot;spatialOps&amp;quot;: {
            &amp;quot;enum&amp;quot;: [
                &amp;quot;distance&amp;quot;,
                &amp;quot;get_intersecting&amp;quot;,
                &amp;quot;get_nearest&amp;quot;
            ]
        }
    },
    &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;http://localhost:5000/api;schema&amp;quot;,
    &amp;quot;applications&amp;quot;: {
        &amp;quot;todo-app&amp;quot;: &amp;quot;http://localhost:5000/api/todo-app&amp;quot;
    },
    &amp;quot;description&amp;quot;: &amp;quot;*No description provided.*&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s pretty neat! A few basic datatypes exist in the definitions, mainly to define how filtering
and query-sets work. We&amp;rsquo;ll get into those later.  For now, we&amp;rsquo;ll focus on what we just created.  The
suite schema doesn&amp;rsquo;t show us the data-type that we defined, but it does show a list of applications
and their endpoints in &lt;code&gt;.applications&lt;/code&gt;. Note that our application is no longer CamelCase, but has
been turned into kabob-case. This is the default, but it can be configured otherwise. All levels
of the API are turned from CamelCase or underscore_separation into kabob-case by default, for
consistency, and because this is more typical of url patterns than the other case types.&lt;/p&gt;

&lt;h3 id=&#34;application-schema&#34;&gt;Application Schema&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s check out the schema to todo-app.  We&amp;rsquo;ll use the url
in the schema followed by &lt;code&gt;;schema&lt;/code&gt;. Sondra is very regular about the way it treats urls. Formatting
and pragmas are handled using url parameters. This is different than changing the endpoint for the
file-type, which is typical of many other frameworks. The reason for this is that often, there are
multiple ways to render data and keep it in the same file type.  For instance, the &lt;code&gt;schema&lt;/code&gt; and
&lt;code&gt;json&lt;/code&gt; types allow you to control the ordering and whether data is pretty-printed with lines and
indentations. Other formats allow other parameters as we&amp;rsquo;ll see later on.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;id&amp;quot;: &amp;quot;http://localhost:5000/api/todo-app;schema&amp;quot;,
  &amp;quot;definitions&amp;quot;: {},
  &amp;quot;collections&amp;quot;: {
    &amp;quot;items&amp;quot;: &amp;quot;http://localhost:5000/api/todo-app/items&amp;quot;
  },
  &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
  &amp;quot;title&amp;quot;: &amp;quot;Todo App&amp;quot;,
  &amp;quot;methods&amp;quot;: {},
  &amp;quot;description&amp;quot;: &amp;quot;*No description provided.*&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the application schema.  Once again, this is rather succinct. There&amp;rsquo;s not a lot of
information in here, but if there were methods defined at the application level we would see them
show up here.  One can also add application level schema fragment definitions in the class and
they would show up here.&lt;/p&gt;

&lt;h3 id=&#34;collection-schema&#34;&gt;Collection Schema&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s move on to the items themselves. Go to &lt;a href=&#34;http://localhost:5000/api/todo-app/items;schema;indent=2&#34;&gt;http://localhost:5000/api/todo-app/items;schema;indent=2&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
  &amp;quot;properties&amp;quot;: {
    &amp;quot;title&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
      &amp;quot;title&amp;quot;: &amp;quot;Title&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;The title of the item&amp;quot;
    },
    &amp;quot;complete&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot;,
      &amp;quot;title&amp;quot;: &amp;quot;Complete&amp;quot;,
      &amp;quot;default&amp;quot;: false
    },
    &amp;quot;created&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
      &amp;quot;title&amp;quot;: &amp;quot;Created&amp;quot;,
      &amp;quot;format&amp;quot;: &amp;quot;date-time&amp;quot;
    },
    &amp;quot;id&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
      &amp;quot;title&amp;quot;: &amp;quot;ID&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;The primary key.&amp;quot;
    }
  },
  &amp;quot;methods&amp;quot;: {
    &amp;quot;count&amp;quot;: {
      &amp;quot;id&amp;quot;: &amp;quot;count&amp;quot;,
      &amp;quot;oneOf&amp;quot;: [
        {
          &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/method_request&amp;quot;
        },
        {
          &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/method_response&amp;quot;
        }
      ],
      &amp;quot;title&amp;quot;: &amp;quot;Object Count&amp;quot;,
      &amp;quot;definitions&amp;quot;: {
        &amp;quot;method_request&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;null&amp;quot;,
          &amp;quot;title&amp;quot;: &amp;quot;Object Count&amp;quot;,
          &amp;quot;side_effects&amp;quot;: false,
          &amp;quot;description&amp;quot;: &amp;quot;The number of objects in the collection.&amp;quot;
        },
        &amp;quot;method_response&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
          &amp;quot;title&amp;quot;: &amp;quot;Object Count&amp;quot;,
          &amp;quot;properties&amp;quot;: {
            &amp;quot;\_&amp;quot;: {
              &amp;quot;type&amp;quot;: &amp;quot;number&amp;quot;
            }
          },
          &amp;quot;description&amp;quot;: &amp;quot;The number of objects in the collection.&amp;quot;
        }
      },
      &amp;quot;description&amp;quot;: &amp;quot;The number of objects in the collection.&amp;quot;
    },
    &amp;quot;key-list&amp;quot;: {
      &amp;quot;id&amp;quot;: &amp;quot;key-list&amp;quot;,
      &amp;quot;oneOf&amp;quot;: [
        {
          &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/method_request&amp;quot;
        },
        {
          &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/method_response&amp;quot;
        }
      ],
      &amp;quot;title&amp;quot;: &amp;quot;Keys&amp;quot;,
      &amp;quot;definitions&amp;quot;: {
        &amp;quot;method_request&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;null&amp;quot;,
          &amp;quot;title&amp;quot;: &amp;quot;Keys&amp;quot;,
          &amp;quot;side_effects&amp;quot;: false,
          &amp;quot;description&amp;quot;: &amp;quot;*No description provided*&amp;quot;
        },
        &amp;quot;method_response&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;,
          &amp;quot;title&amp;quot;: &amp;quot;Keys&amp;quot;,
          &amp;quot;items&amp;quot;: {
            &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;
          },
          &amp;quot;description&amp;quot;: &amp;quot;*No description provided*&amp;quot;
        }
      },
      &amp;quot;description&amp;quot;: &amp;quot;*No description provided*&amp;quot;
    },
    &amp;quot;autocomplete&amp;quot;: {
      &amp;quot;id&amp;quot;: &amp;quot;autocomplete&amp;quot;,
      &amp;quot;oneOf&amp;quot;: [
        {
          &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/method_request&amp;quot;
        },
        {
          &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/method_response&amp;quot;
        }
      ],
      &amp;quot;title&amp;quot;: &amp;quot;Autocomplete&amp;quot;,
      &amp;quot;definitions&amp;quot;: {
        &amp;quot;method_request&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
          &amp;quot;title&amp;quot;: &amp;quot;Autocomplete&amp;quot;,
          &amp;quot;properties&amp;quot;: {
            &amp;quot;partial&amp;quot;: {
              &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
              &amp;quot;title&amp;quot;: &amp;quot;Partial&amp;quot;,
              &amp;quot;description&amp;quot;: &amp;quot;A regular expression to match on any and all of the autocomplete fields.&amp;quot;
            }
          },
          &amp;quot;side_effects&amp;quot;: false,
          &amp;quot;description&amp;quot;: &amp;quot;Search results based on a partial input as a regex&amp;quot;
        },
        &amp;quot;method_response&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;,
          &amp;quot;title&amp;quot;: &amp;quot;Autocomplete&amp;quot;,
          &amp;quot;items&amp;quot;: {
            &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
            &amp;quot;properties&amp;quot;: {
              &amp;quot;k&amp;quot;: {
                &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;
              },
              &amp;quot;v&amp;quot;: {
                &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;
              }
            }
          },
          &amp;quot;description&amp;quot;: &amp;quot;Search results based on a partial input as a regex&amp;quot;
        }
      },
      &amp;quot;description&amp;quot;: &amp;quot;Search results based on a partial input as a regex&amp;quot;
    },
    &amp;quot;key-map&amp;quot;: {
      &amp;quot;id&amp;quot;: &amp;quot;key-map&amp;quot;,
      &amp;quot;oneOf&amp;quot;: [
        {
          &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/method_request&amp;quot;
        },
        {
          &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/method_response&amp;quot;
        }
      ],
      &amp;quot;title&amp;quot;: &amp;quot;Key Map&amp;quot;,
      &amp;quot;definitions&amp;quot;: {
        &amp;quot;method_request&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;null&amp;quot;,
          &amp;quot;title&amp;quot;: &amp;quot;Key Map&amp;quot;,
          &amp;quot;side_effects&amp;quot;: false,
          &amp;quot;description&amp;quot;: &amp;quot;*No description provided*&amp;quot;
        },
        &amp;quot;method_response&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
          &amp;quot;title&amp;quot;: &amp;quot;Key Map&amp;quot;,
          &amp;quot;description&amp;quot;: &amp;quot;*No description provided*&amp;quot;
        }
      },
      &amp;quot;description&amp;quot;: &amp;quot;*No description provided*&amp;quot;
    }
  },
  &amp;quot;definitions&amp;quot;: {
    &amp;quot;filterOps&amp;quot;: {
      &amp;quot;enum&amp;quot;: [
        &amp;quot;with_fields&amp;quot;,
        &amp;quot;count&amp;quot;,
        &amp;quot;max&amp;quot;,
        &amp;quot;min&amp;quot;,
        &amp;quot;avg&amp;quot;,
        &amp;quot;sample&amp;quot;,
        &amp;quot;sum&amp;quot;,
        &amp;quot;distinct&amp;quot;,
        &amp;quot;contains&amp;quot;,
        &amp;quot;pluck&amp;quot;,
        &amp;quot;without&amp;quot;,
        &amp;quot;has_fields&amp;quot;,
        &amp;quot;order_by&amp;quot;,
        &amp;quot;between&amp;quot;
      ]
    },
    &amp;quot;timedelta&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
      &amp;quot;required&amp;quot;: [
        &amp;quot;start&amp;quot;,
        &amp;quot;end&amp;quot;
      ],
      &amp;quot;properties&amp;quot;: {
        &amp;quot;hours&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;
        },
        &amp;quot;days&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;
        },
        &amp;quot;seconds&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;number&amp;quot;
        },
        &amp;quot;minutes&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;
        }
      }
    },
    &amp;quot;spatialOps&amp;quot;: {
      &amp;quot;enum&amp;quot;: [
        &amp;quot;distance&amp;quot;,
        &amp;quot;get_intersecting&amp;quot;,
        &amp;quot;get_nearest&amp;quot;
      ]
    }
  },
  &amp;quot;template&amp;quot;: &amp;quot;{id}&amp;quot;,
  &amp;quot;documentMethods&amp;quot;: {
    &amp;quot;rel&amp;quot;: {
      &amp;quot;id&amp;quot;: &amp;quot;\*rel&amp;quot;,
      &amp;quot;oneOf&amp;quot;: [
        {
          &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/method_request&amp;quot;
        },
        {
          &amp;quot;$ref&amp;quot;: &amp;quot;#/definitions/method_response&amp;quot;
        }
      ],
      &amp;quot;title&amp;quot;: &amp;quot;Related Documents&amp;quot;,
      &amp;quot;definitions&amp;quot;: {
        &amp;quot;method_request&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
          &amp;quot;properties&amp;quot;: {
            &amp;quot;app&amp;quot;: {
              &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
              &amp;quot;title&amp;quot;: &amp;quot;App&amp;quot;,
              &amp;quot;description&amp;quot;: &amp;quot;The slug of the application ``coll`` is in.&amp;quot;
            },
            &amp;quot;coll&amp;quot;: {
              &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
              &amp;quot;title&amp;quot;: &amp;quot;Coll&amp;quot;,
              &amp;quot;description&amp;quot;: &amp;quot;The slug of the collection to search for documents in.&amp;quot;
            },
            &amp;quot;related_key&amp;quot;: {
              &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
              &amp;quot;title&amp;quot;: &amp;quot;Related Key&amp;quot;,
              &amp;quot;description&amp;quot;: &amp;quot;The name of the key to search for this document in.If none, defaults to the first matching foreign key element.&amp;quot;
            }
          },
          &amp;quot;required&amp;quot;: [
            &amp;quot;app&amp;quot;,
            &amp;quot;coll&amp;quot;
          ],
          &amp;quot;title&amp;quot;: &amp;quot;Related Documents&amp;quot;,
          &amp;quot;description&amp;quot;: &amp;quot;Reverse relation.  Get a query set of all documents in a collection that have foreign keys that point to this document.&amp;quot;,
          &amp;quot;side_effects&amp;quot;: false
        },
        &amp;quot;method_response&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
          &amp;quot;properties&amp;quot;: {},
          &amp;quot;title&amp;quot;: &amp;quot;Related Documents&amp;quot;,
          &amp;quot;description&amp;quot;: &amp;quot;Reverse relation.  Get a query set of all documents in a collection that have foreign keys that point to this document.&amp;quot;
        }
      },
      &amp;quot;description&amp;quot;: &amp;quot;...&amp;quot;
    }
  },
  &amp;quot;primary_key&amp;quot;: &amp;quot;id&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;No Description Provided.&amp;quot;,
  &amp;quot;title&amp;quot;: &amp;quot;Item&amp;quot;,
  &amp;quot;id&amp;quot;: &amp;quot;http://localhost:5000/api/todo-app/items;schema&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s a lot more information!. This may look very dense, but it contains all the methods and inherits
all the schema from the application and suite objects as well. This allows buggy JSON schema parsers
to find references without having to fetch other documents in the course of resolving references.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s remove the methods for a moment and see what we have:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;template&amp;quot;: &amp;quot;{id}&amp;quot;,
  &amp;quot;primary_key&amp;quot;: &amp;quot;id&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;No Description Provided.&amp;quot;,
  &amp;quot;title&amp;quot;: &amp;quot;Item&amp;quot;,
  &amp;quot;id&amp;quot;: &amp;quot;http://localhost:5000/api/todo-app/items;schema&amp;quot;,
  &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
  &amp;quot;required&amp;quot;: [&amp;quot;title&amp;quot;],
  &amp;quot;properties&amp;quot;: {
    &amp;quot;title&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
      &amp;quot;title&amp;quot;: &amp;quot;Title&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;The title of the item&amp;quot;
    },
    &amp;quot;complete&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot;,
      &amp;quot;title&amp;quot;: &amp;quot;Complete&amp;quot;,
      &amp;quot;default&amp;quot;: false
    },
    &amp;quot;created&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
      &amp;quot;title&amp;quot;: &amp;quot;Created&amp;quot;,
      &amp;quot;format&amp;quot;: &amp;quot;date-time&amp;quot;
    },
    &amp;quot;id&amp;quot;: {
      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
      &amp;quot;title&amp;quot;: &amp;quot;ID&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;The primary key.&amp;quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JSON-Schema tells us what we&amp;rsquo;re looking at here, but just to be clear, all Sondra has done is
translated the code into JSON for the client. There are a few properties that are extra to JSON
Schema, such as &lt;code&gt;template&lt;/code&gt; and &lt;code&gt;primary_key&lt;/code&gt;. These are defined by Sondra. Template describes how
one would create a visual representation for a record. Primary key lets you know what data field to
use to address documents as endpoints. If you had a document with id &lt;code&gt;00ab-00ac-00ad-00ae&lt;/code&gt; then you
would access it via the API as &lt;code&gt;http://localhost:5000/api/todo-app/items/00ab-00ac-00ad-00ae&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An Intro to Sondra: Part 2</title>
      <link>https://jeffersonheard.github.io/2016/11/an-intro-to-sondra-part-2/</link>
      <pubDate>Tue, 15 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/11/an-intro-to-sondra-part-2/</guid>
      <description>&lt;p&gt;Part 2 of our tutorials on Sondra build on our sample application from part 1
and covers exposing the API on the web. Basically we will add one more module,
which creates a Flask app. The app I show below does very little more
than the basic Flask app. It adds compression, because that&amp;rsquo;s pretty standard
these days and supported by almost all browsers.  It&amp;rsquo;s also a good idea with
APIs where responses can get very long.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from flask import Flask
from flask.ext.compress import Compress
from sondra.flask import api_tree, init

# Create the Flask instance and the suite.
app = Flask(__name__)
Compress(app)  # This is not necessary, but I find it generally helpful.
app.debug = True
app.suite = TodoSuite()
init(app)

# Register all the applications.
TodoApp(app.suite)

# Create all databases and tables.
app.suite.validate()  # remember this call?
app.suite.ensure_database_objects()  # and this one?

# Attach the API to the /api/ endpoint.
app.register_blueprint(api_tree, url_prefix=&#39;/api&#39;)

if __name__ == &#39;__main__&#39;:
    app.run()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s probably pretty obvious what&amp;rsquo;s going on here.  This is the typical look of a Flask app, after
all. The additional things we have to do are, in order:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Attach the suite to the Flask app as &lt;code&gt;app.suite&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init&lt;/code&gt; the app. This sets up CORS if it&amp;rsquo;s been configured and makes sure that logging is handled correctly.&lt;/li&gt;
&lt;li&gt;Ensure the application objects exist in the database.&lt;/li&gt;
&lt;li&gt;Register the &lt;code&gt;api_tree&lt;/code&gt; blueprint with Flask, typically at &lt;code&gt;/api&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>An Intro to Sondra: Part 1</title>
      <link>https://jeffersonheard.github.io/2016/11/an-intro-to-sondra-part-1/</link>
      <pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/11/an-intro-to-sondra-part-1/</guid>
      <description>

&lt;p&gt;This tutorial serves as a basic introduction to Sondra, its data model, and how you
can create an API. The classic example web API is that of a to-do list application. Our tutorial
will build it up in stages, starting with the basic structure of an application, followed by data
modeling, and then we&amp;rsquo;ll add exposed methods to see how those work.&lt;/p&gt;

&lt;p&gt;Finally, you&amp;rsquo;ll work through accessing the API via Javascript (ES2015) and Python.&lt;/p&gt;

&lt;p&gt;To do this tutorial, you will need the following installed and ready to go:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sondra - &lt;a href=&#34;https://github.com/JeffHeard/sondra.git&#34;&gt;https://github.com/JeffHeard/sondra.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RethinkDB - &lt;a href=&#34;https://rethinkdb.com&#34;&gt;https://rethinkdb.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python 3 - &lt;a href=&#34;https://www.python.org&#34;&gt;https://www.python.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Your favorite text editor or IDE. I like &lt;a href=&#34;https://www.atom.io/&#34;&gt;Atom&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;first-steps&#34;&gt;First Steps&lt;/h3&gt;

&lt;p&gt;First thing&amp;rsquo;s first. Let&amp;rsquo;s make sure Sondra has all its requirements.  Assuming you have a virtual
environment setup already, all you have to do is install requirements.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd sondra
$ pip install -r requirements.txt
$ export PYTHONPATH=$PYTHONPATH:$PWD  # if you want to develop in a different directory or run the examples.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s start with some imports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sondra.collection import Collection
from sondra.document import Document
from sondra.application import Application
from sondra.suite import Suite
from sondra.schema import S
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These imports serve to introduce us to the basic building blocks of Sondra: Application, Collection,
and Document. We will subclass each to create our application.  The &lt;strong&gt;Document&lt;/strong&gt; subclass defines
the schema of a record in &lt;a href=&#34;https://rethinkdb.com/&#34;&gt;RethinkDB&lt;/a&gt; and all the methods that operate
directly on a record instance.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Collection&lt;/strong&gt; subclass defines the way a document relates to the database. It defines things
such as primary key and indexes and methods that operate on the collection as a whole. Methods
defined on the collection class are conceptually similar to class methods in Python.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Application&lt;/strong&gt; subclass defines a group of collections that serve a common purpose.  The
application will often contain schema fragment definitions that are common across multiple related
collections and methods that apply to multiple collections across the application.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Suite&lt;/strong&gt; subclass defines the complete API suite, including configurations and database
connections. Applications are added to the Suite.&lt;/p&gt;

&lt;p&gt;Finally &lt;strong&gt;S&lt;/strong&gt; is a utility module whose functions return dictionaries that fit the format of
&lt;a href=&#34;http://json-schema.org/&#34;&gt;JSON Schema&lt;/a&gt; and hyper-schema.&lt;/p&gt;

&lt;h3 id=&#34;modeling-data&#34;&gt;Modeling Data&lt;/h3&gt;

&lt;p&gt;So let&amp;rsquo;s start by creating a Document that models a to-do list item:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sondra.collection import Collection
from sondra.document import Document
from sondra.application import Application
from sondra.suite import Suite
from sondra.schema import S

class Item(Document):
    schema = {
      &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
      &amp;quot;required&amp;quot;: [&amp;quot;title&amp;quot;],
      &amp;quot;properties&amp;quot;: {
        &amp;quot;title&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;The title of the item&amp;quot;},
        &amp;quot;complete&amp;quot; {&amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot;, &amp;quot;default&amp;quot;: False},
        &amp;quot;created&amp;quot;: {&amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;format&amp;quot;: &amp;quot;date-time&amp;quot;}
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we&amp;rsquo;ve defined a simple item that has a title, a space to mark whether the to-do item is
complete, and a creation date.  Note that schemas are just Python dicts. As long as your dictionary
and all its elements are compatible with the built-in &lt;code&gt;json&lt;/code&gt; package, your schema will work.
However, this syntax is rather verbose and prone to typo-induced bugs. Therefore the &lt;code&gt;S&lt;/code&gt; package
provides a bunch of utility functions that generate schema objects. These functions return plain old
dicts, so there&amp;rsquo;s functionally no difference between the two syntaxes, but the S module is safer:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class Item(Document):
    schema = S.object(
        required=[&#39;Title&#39;],
        properties=S.props(
            (&amp;quot;title&amp;quot;, S.string(description=&amp;quot;The title of the item&amp;quot;)),
            (&amp;quot;complete&amp;quot;, S.boolean(default=False)),
            (&amp;quot;created&amp;quot;, S.datetime()),
    ))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s much shorter! Again, there&amp;rsquo;s no magic to the &lt;code&gt;S.*&lt;/code&gt; functions. They&amp;rsquo;re just shorthand and
provide a bit more checking.  It&amp;rsquo;s the same schema as above.  One difference is that the first
example does not enforce any order (except in Python 3.6!) on the dictionary elements.  The version
in the most recent example does, because &lt;code&gt;S.props&lt;/code&gt; uses an &lt;code&gt;OrderedDict&lt;/code&gt; instead of a plain &lt;code&gt;dict&lt;/code&gt;
Now let&amp;rsquo;s see how to get it into a collection and an application, and thus into the database. The
next three classes define the collection (RethinkDB table), application (RethinkDB database), and
the suite (the full group of applications, served on a single tree from a single domain):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class Items(Collection):
    document_class = Item  # this is the class that as instances per-record
    indexes = [&amp;quot;title&amp;quot;, &amp;quot;complete&amp;quot;]  # the fields to build indexes on.
    order_by = [&amp;quot;created&amp;quot;]  # Sondra treats &amp;quot;format&amp;quot;: &amp;quot;date-time&amp;quot; as a RethinkDB Date.

class TodoApp(Application):
    collections = (Items,)  # For now we&#39;ll just define the collections

class TodoSuite(Suite):
    cross_origin = True  # append CORS headers
    debug = True  # extra logging
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;getting-it-into-rethinkdb&#34;&gt;Getting it into RethinkDB&lt;/h3&gt;

&lt;p&gt;Now that we have all the definitions set up, let&amp;rsquo;s get our data into the database:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; todo = TodoSuite()
&amp;gt;&amp;gt;&amp;gt; TodoApp(todo)
&amp;gt;&amp;gt;&amp;gt; todo.validate()
&amp;gt;&amp;gt;&amp;gt; todo.ensure_database_objects()

INFO:TodoSuite:Connection established to &#39;default&#39;
INFO:TodoSuite:Suite base url is: &#39;http://localhost:5000/api&#39;
INFO:TodoSuite:Docstring processor is {0}
INFO:TodoApp:Registering application todo-app
INFO:TodoSuite:Registered application TodoApp to http://localhost:5000/api/todo-app
INFO:TodoApp:Creating collection for todo-app/items
INFO:TodoSuite:Checking schemas for validity
INFO:TodoSuite:+ todo-app
INFO:TodoSuite:--- items
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The call to &lt;code&gt;todo.ensure_database_objects()&lt;/code&gt; creates / ensures the existence of tables and indexes and even
databases for everything that&amp;rsquo;s a part of the suite.  It should always be called once when your
application initializes. At the most basic level, you&amp;rsquo;re now ready to expose your API to your
clients now (we&amp;rsquo;ll handle authentication later), and you can play around with it in Python as well.
In Python, Sondra tries to be as pythonic as possible. All levels of the API are exposed as
dictionary-like objects. The keys are dash-cased versions of the classnames (this can be overridden,
  but is the default).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sondra: Schema validated API and ORM for RethinkDB</title>
      <link>https://jeffersonheard.github.io/2016/10/sondra-schema-validated-api-and-orm-for-rethinkdb/</link>
      <pubDate>Mon, 03 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jeffersonheard.github.io/2016/10/sondra-schema-validated-api-and-orm-for-rethinkdb/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>